@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@page "/bomberos"

<h3>Bomberos</h3>
@if (movilView is not null)
{
    <label>Nombre:</label>
    <input type="text" @bind="BomberoslView.Nombre" />
    <br>
    <label>Apellido:</label>
    <input type="text" @bind="BomberosView.Apellido" />
    <br>
        <label>DNI:</label>
    <input type="text" @bind="bomberoView.Documento" />
    <br>
        <label>Fecha De Nacimiento:</label>
    <input type="text" @bind="bomberoView.FechaNacimiento" />   
    <br>
    <label>Numero De Legajo:</label>
    <input type="number" @bind="bomberoView.NumeroLegajo" />
    <br>
        <label>Fecha De Aceptacion:</label>
    <input type="datetime" @bind="bomberoView.FechaAceptacion" />    
    <br>
    <label> Direccion:</label>
    <input type="text" @bind="bomberoView.Direccion" />
    <br>
    <label>Nº De IOMA:</label>
    <input type="text" @bind="bomberoView.NumeroIoma" />
    <br>
        <label>Lugar De Nacimiento:</label>
    <input type="text" @bind="bomberoView.LugarNacimiento" />
    <br>
    <label>Grupo Sanguineo:</label>
    <input type="text" @bind="bomberoView.GrupoSanguineo" />
    <br>
        <label>Observaciones:</label>
    <input type="text" @bind="bomberoView.Observaciones" />
    <br>
        <label>Profesion:</label>
    <input type="text" @bind="bomberoView.Profesion" />
    <br>
        <label>Nivel De Estudios:</label>
    <input type="text" @bind="bomberoView.NivelEstudios" />
    <br>
    <label>Resulucion 1:</label>
    <input type="text" @bind="bomberoView.Resolucion1" />
    <br>
        <label>Resulucion 2:</label>
    <input type="text" @bind="bomberoView.Resolucion2" />
    <br>
        <label>Resulucion 3:</label>
    <input type="text" @bind="bomberoView.Resolucion3" />
    <br>
        <label>Resulucion 4:</label>
    <input type="text" @bind="bomberoView.Resolucion4" />
    <br>
        <label>Resulucion 5:</label>
    <input type="text" @bind="bomberoView.Resolucion5" />
    <br>
        <label>Resulucion 6:</label>
    <input type="text" @bind="bomberoView.Resolucion6" />
    <br>
    <input type="checkbox" @bind="bomberoView.Chofer" />
    if (bomberoView.Chofer)
    {
        <label>Es chofer</label>
        <input type="datetime" @bind="bomberoView.VencimientoRegistro"/>
    }
    if(!bomberoView.Chofer)
    {
        <label>No es chofer</label>
    }
    <br>
    <select @bind="bomberoView.Grado">
        <option value="@EscalafonJerarquico.Jefe">Jefe</option>
        <option value="@EscalafonJerarquico.SegundoJefe">2ºdo Jefe</option>
        <option value="@EscalafonJerarquico.PrimerOficial">1ºer Oficial</option>
        <option value="@EscalafonJerarquico.SegundoOficial">2ºdo Oficial</option>
        <option value="@EscalafonJerarquico.TercerOficial">3ºer Oficial</option>
        <option value="@EscalafonJerarquico.AuxiliarMayor">Auxiliar Mayor</option>
        <option value="@EscalafonJerarquico.PrimerAuxiliar">1ºer Auxiliar</option>
        <option value="@EscalafonJerarquico.SegundoAuxiliar">2ºdo Auxiliar</option>
        <option value="@EscalafonJerarquico.Ayudante">Ayudante</option>
        <option value="@EscalafonJerarquico.SegundoAudante">2ºdo Ayudante</option>
        <option value="@EscalafonJerarquico.Bombero">Bombero</option>
        <option value="@EscalafonJerarquico.Aspirante">Aspirante</option>
    </select>
    <br>
    <select @bind="bomberoView.Estado">
        <option value="@EstadoBombero.Retirado">Retirado</option>
        <option value="@EstadoBombero.ComisionDirectiva">Comision Directiva</option>
        <option value="@EstadoBombero.CuerpoActivo">Cuerpo Activo</option>
        </select>
    <br>
    <select @bind="bomberoView.Sexo">
    <option value="@TipoSexo.Hombre">Masculino</option>
    <option value="@TipoSexo.Mujer">Femenino</option>
    <option value="@TipoSexo.Otro">Otro</option>
</select>

    <h5>Contacto</h5>

    <label>Telefono Celular:</label>
    <input type="text" @bind="ContactoView.TelefonoCel" />
    <br>
    <label>Telefono Fijo:</label>
    <input type="text" @bind="ContactoView.TelefonoFijo" />
    <br>
    <label>Telefono laboral:</label>
    <input type="text" @bind="ContactoView.TelefonoLaboral" />
    <br>
        <label>Email:</label>
    <input type="text" @bind="ContactoView.Email" />
    <br>

    <button @onclick="AgregarBombero">Agregar Bombero</button>
}
<br>
<br>
@if(bomberos is not null)
{
    @foreach(Bombero b in bomberos)
    {
        <a @onclick="@(() => { string NLegajo = b.NumeroLegajo; IrABomberoIndividual(NLegajo); })"><label>@b.PersonaId   @b.NumeroLegajo</label></a>
        <br>
    }
}

@code {
    public class BomberosViewModel
    {
        public DateTime FechaNacimiento { get; set; }
        public DateTime FechaAceptacion { get; set; }
        [Required, StringLength(255)]
        public string Nombre { get; set; }
        [Required, StringLength(255)]
        public string Apellido { get; set; }
        public EstadoBombero Estado { get; set; }
        public int NumeroLegajo { get; set;  }
        public EscalafonJerarquico Grado { get; set; }
        public bool Chofer { get; set; }
        public DateTime? VencimientoRegistro { get; set; }
        public TipoSexo Sexo { get; set; }
        [Required, StringLength(255)]
        public string Direccion { get; set; }
        [Required, StringLength(255)]
        public string LugarNacimiento { get; set; }
        [Required, StringLength(255)]
        public string Documento { get; set; }
        [Required, StringLength(255)]
        public string GrupoSanguineo { get; set; }
        [Required, StringLength(255)]
        public string Observaciones { get; set; }
        [Required, StringLength(255)]
        public string Profesion { get; set; }
        [Required, StringLength(255)]
        public string NivelEstudios { get; set; }
        [Required, StringLength(255)]
        public string NumeroIoma { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion1 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion2 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion3 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion4 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion5 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion6 { get; set; }


    }
    public class ContactoViewModel
    {
        [Required, StringLength(255)]
        public string? TelefonoCel { get; set; }
        [Required, StringLength(255)]
        public string? TelefonoLaboral { get; set; }
        [Required, StringLength(255)]
        public string? TelefonoFijo { get; set; }
        [Required, StringLength(255)]
        public string? Email { get; set; }
    }
    public BomberosViewModel bomberoView { get; set; } = new();
    public ContactoViewModel ContactoView { get; set; } = new();
    public Bombero[]? bomberos;

    protected override async Task OnInitializedAsync()
    {
        using var db = DbFactory.CreateDbContext();

        bomberos = await db.Bomberos.ToArrayAsync();
    }

    public void IrABomberoIndividual(string NLegajo)
    {
        navigationManager.NavigateTo($"/bomberos/{NLegajo}");
    }
    private async void AgregarMovil()
    {
        using var db = DbFactory.CreateDbContext();

        if (bomberoView is not null)
        {
            Bombero? comprobante = await db.Bomberos.Where(m => m.NumeroLegajo == bomberoView.NumeroLegajo).SingleOrDefaultAsync();

            if (comprobante is null)
            {
                Bombero bombero = new Bombero()
                    {
                        Nombre = bomberoView.Nombre,
                        Apellido = bomberoView.Apellido,
                        Documento = bomberoView.Documento,
                        NumeroLegajo = bomberoView.NumeroLegajo,
                        NumeroIoma = bomberoView.NumeroIoma,
                        LugarNacimiento = bomberoView.LugarNacimiento,
                        Grado = bomberoView.Grado,
                        GrupoSanguineo = bomberoView.GrupoSanguineo,
                        Estado = bomberoView.Estado,
                        Chofer = bomberoView.Chofer,
                        Direccion = bomberoView.Direccion,
                        Observaciones = bomberoView.Observaciones,
                        Profesion = bomberoView.Profesion,
                        NivelEstudios = bomberoView.NivelEstudios,
                        FechaAceptacion = bomberoView.FechaAceptacion

                    Contacto = new()
                    {
                        TelefonoCel = ContactoView.TelefonoCel,
                        TelefonoFijo = ContactoView.TelefonoFijo,
                        TelefonoLaboral = ContactoView.TelefonoLaboral,
                        Email = ContactoView.Email
                    }
                    };

                db.Bomberos.Add(bombero);
                await db.SaveChangesAsync();
            }
        }
        bomberos = await db.Bomberos.ToArrayAsync();

        StateHasChanged();
    }
}
