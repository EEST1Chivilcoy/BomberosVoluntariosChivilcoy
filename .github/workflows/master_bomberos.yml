# üìÑ Documentaci√≥n: https://github.com/Azure/webapps-deploy
name: Build and deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  DOTNET_VERSION: "8.0.x"
  PROJECT_PATH: "Vista/Vista.csproj"
  PUBLISH_PATH: "./publish"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Clonar repositorio
        uses: actions/checkout@v4

      - name: üîß Configurar .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: üì¶ Cache de paquetes NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: üèóÔ∏è Compilar el proyecto
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release

      - name: üöÄ Publicar el proyecto
        run: dotnet publish ${{ env.PROJECT_PATH }} --configuration Release --output ${{ env.PUBLISH_PATH }}

      - name: üì§ Subir artefacto para despliegue
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{ env.PUBLISH_PATH }}
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: üì• Descargar artefacto del trabajo de compilaci√≥n
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: ./app

      - name: ‚òÅÔ∏è Desplegar en Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "bomberos"
          slot-name: "Production"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_E5412DC5FC7648B698D15A1D3A7910EF }}
          package: ./app

  sync-branches:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: üì• Clonar repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üîÑ Sincronizar ramas colaborativas con detecci√≥n de conflictos
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          branches=("Oses-Emiliano" "Tobi" "fran" "Antonio")
          conflicts_found=false
          conflict_branches=()

          for branch in "${branches[@]}"; do
            echo "üîÅ Actualizando $branch desde master"
            git checkout $branch

            if ! git merge origin/master --no-edit; then
              echo "‚ö†Ô∏è Conflicto detectado en $branch"
              echo "::warning file=.github/workflows/sync.yml,title=Conflicto en $branch::Se detectaron conflictos al intentar mergear master en $branch. Se requiere resoluci√≥n manual."
              
              # Abortar el merge
              git merge --abort
              
              conflicts_found=true
              conflict_branches+=("$branch")
            else
              echo "‚úÖ $branch actualizada exitosamente"
              git push origin $branch
            fi
          done

          if [ "$conflicts_found" = true ]; then
            echo ""
            echo "‚ùå Resumen: Se encontraron conflictos en las siguientes ramas:"
            printf '%s\n' "${conflict_branches[@]}"
            echo ""
            echo "Por favor, resuelve los conflictos manualmente ejecutando:"
            echo "  git checkout <rama>"
            echo "  git merge master"
            echo "  # Resolver conflictos"
            echo "  git commit"
            echo "  git push"
            
            # Crear un warning general
            echo "::warning title=Sincronizaci√≥n incompleta::Se encontraron conflictos en ${#conflict_branches[@]} rama(s). Revisa los warnings anteriores para m√°s detalles."
            
            # Fallar el workflow para que sea visible
            exit 1
          fi

          echo "‚úÖ Todas las ramas se sincronizaron correctamente"