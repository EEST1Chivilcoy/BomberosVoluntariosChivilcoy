# 📄 Documentación: https://github.com/Azure/webapps-deploy
name: Build and deploy

on:
  push:
    branches:
      - master
    tags:
      - 'break*'
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_PATH: 'Vista/Vista.csproj'
  PUBLISH_PATH: './publish'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: 📥 Clonar repositorio
        uses: actions/checkout@v4

      - name: 🔧 Configurar .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: true

      - name: 📦 Cache de paquetes NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: 🏗️ Compilar el proyecto
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release

      - name: 🚀 Publicar el proyecto
        run: dotnet publish ${{ env.PROJECT_PATH }} --configuration Release --output ${{ env.PUBLISH_PATH }}

      - name: 📤 Subir artefacto para despliegue
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{ env.PUBLISH_PATH }}
          retention-days: 1

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: 📥 Descargar artefacto del trabajo de compilación
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: ./app

      - name: ☁️ Desplegar en Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'bomberos'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_E5412DC5FC7648B698D15A1D3A7910EF }}
          package: ./app

  sync-branches:
    if: startsWith(github.ref, 'refs/tags/break')
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Clonar repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🕵️ Verificar etiqueta break
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          if [[ "$TAG_NAME" != break* ]]; then
            echo "❌ Tag no válido: $TAG_NAME"
            exit 1
          fi

      - name: 🔄 Sincronizar ramas colaborativas con preferencia por master
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          branches=("Oses-Emiliano" "Tobi" "fran")

          for branch in "${branches[@]}"; do
            echo "🔁 Actualizando $branch desde master"
            git checkout $branch

            if ! git merge origin/master --no-edit; then
              echo "⚠️ Conflicto detectado en $branch. Resolviendo a favor de master..."
              git merge origin/master --strategy-option theirs --no-edit
              echo "✅ Conflictos resueltos en $branch usando cambios de master"
            fi

            git push origin $branch
          done
