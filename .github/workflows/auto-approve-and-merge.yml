name: Auto Approve and Merge PRs

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  auto-approve-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Get PR info
        uses: actions/github-script@v6
        id: pr-info
        with:
          script: |
            const trustedAuthors = ['Zothras'];
            const actor = context.actor;

            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const isTrusted = trustedAuthors.includes(actor);
            const isMergeable = pr.data.mergeable_state === "clean";
            const isToMaster = pr.data.base.ref === "master";

            return {
              trusted: isTrusted,
              mergeable: isMergeable,
              toMaster: isToMaster
            };

      - name: Auto-approve PR
        if: steps.pr-info.outputs.trusted == 'true' && steps.pr-info.outputs.mergeable == 'true' && steps.pr-info.outputs.toMaster == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              event: "APPROVE"
            });

      - name: Merge PR
        if: steps.pr-info.outputs.trusted == 'true' && steps.pr-info.outputs.mergeable == 'true' && steps.pr-info.outputs.toMaster == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              merge_method: "squash"
            });
