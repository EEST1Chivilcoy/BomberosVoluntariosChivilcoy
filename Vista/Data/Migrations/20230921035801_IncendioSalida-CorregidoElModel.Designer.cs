// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vista.Data;

#nullable disable

namespace Vista.Data.Migrations
{
    [DbContext(typeof(BomberosDbContext))]
    [Migration("20230921035801_IncendioSalida-CorregidoElModel")]
    partial class IncendioSalidaCorregidoElModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Vista.Data.Models.Personales.BomberoDependencia", b =>
                {
                    b.Property<int>("BomberoDependenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DependenciaId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("BomberoDependenciaId");

                    b.HasIndex("DependenciaId");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("BomberoDependencia");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.BomberoSalida", b =>
                {
                    b.Property<int>("BomberoSalidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Grado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.Property<bool>("Salio")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("BomberoSalidaId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("SalidaId");

                    b.ToTable("BomberoSalida");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Brigada", b =>
                {
                    b.Property<int>("BrigadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("BrigadaId");

                    b.ToTable("Brigadas");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Comunicacion", b =>
                {
                    b.Property<int>("EquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("NroEquipo")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NroSerie")
                        .HasColumnType("longtext");

                    b.HasKey("EquipoId");

                    b.HasIndex("NroEquipo")
                        .IsUnique();

                    b.ToTable("Comunicacion", (string)null);
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Contacto", b =>
                {
                    b.Property<int>("ContactoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoCel")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TelefonoFijo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TelefonoLaboral")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ContactoId");

                    b.HasIndex("PersonaId")
                        .IsUnique();

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Dependencia", b =>
                {
                    b.Property<int>("DependenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreDependencia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("DependenciaId");

                    b.ToTable("Dependencia");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.HorarioBombero", b =>
                {
                    b.Property<int>("HorarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BomberoId")
                        .HasColumnType("int");

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<TimeOnly>("HoraDesde")
                        .HasColumnType("time(6)");

                    b.Property<TimeOnly>("HoraHasta")
                        .HasColumnType("time(6)");

                    b.Property<string>("ModoRotativo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<TimeOnly?>("Periodo")
                        .HasColumnType("time(6)");

                    b.Property<DateTime?>("VigenteDesde")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("VigenteHasta")
                        .HasColumnType("datetime(6)");

                    b.HasKey("HorarioId");

                    b.HasIndex("BomberoId");

                    b.ToTable("HorariosBomberos", (string)null);
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Imagen", b =>
                {
                    b.Property<int>("ImagenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Base64Imagen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreImagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoImagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoImagenDiscriminador")
                        .HasColumnType("int");

                    b.HasKey("ImagenId");

                    b.ToTable("Imagenes", (string)null);

                    b.HasDiscriminator<int>("TipoImagenDiscriminador");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.MovilSalida", b =>
                {
                    b.Property<int>("MovilSalidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CantidadLitros")
                        .HasColumnType("longtext");

                    b.Property<bool>("CargoCombustible")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("FechaFactura")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("KmLlegada")
                        .HasColumnType("int");

                    b.Property<int>("MovilId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroFactura")
                        .HasColumnType("longtext");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("QuienLleno")
                        .HasColumnType("longtext");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoQuienLleno")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoConbustible")
                        .HasColumnType("longtext");

                    b.HasKey("MovilSalidaId");

                    b.HasIndex("MovilId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("SalidaId");

                    b.ToTable("MovilSalida");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Persona", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GrupoSanguineo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LugarNacimiento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NivelEstudios")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NumeroIoma")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Profesion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoPersona")
                        .HasColumnType("int");

                    b.HasKey("PersonaId");

                    b.ToTable("Personas", (string)null);

                    b.HasDiscriminator<int>("TipoPersona").HasValue(2);
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Vehiculo", b =>
                {
                    b.Property<int>("VehiculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Año")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SeguroId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoVehiculo")
                        .HasColumnType("int");

                    b.HasKey("VehiculoId");

                    b.HasIndex("SeguroId")
                        .IsUnique();

                    b.ToTable("Vehiculo");

                    b.HasDiscriminator<int>("TipoVehiculo");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.AscensoBombero", b =>
                {
                    b.Property<int>("AscensoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GradoAntiguo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GradoAscenso")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("AscensoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("AscensoBombero", (string)null);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Damnificado", b =>
                {
                    b.Property<int>("DamnificadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LugarDeNacimiento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("DamnificadoId");

                    b.HasIndex("SalidaId");

                    b.ToTable("Damnificados");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.DatosCapacitacion", b =>
                {
                    b.Property<int>("DatosCapacitacionId")
                        .HasColumnType("int");

                    b.Property<string>("CapacitacionOtra")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DiasCapacitacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("HorariosCapacitacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NivelCapacitacion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NivelCapacitacionOtro")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.Property<string>("TipoCapacitacion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("DatosCapacitacionId");

                    b.ToTable("DatosCapacitaciones");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.EmbarcacionAfectada", b =>
                {
                    b.Property<int>("EmbarcacionAfectadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CantidadBarcos")
                        .HasColumnType("int");

                    b.Property<int>("CantidadBotes")
                        .HasColumnType("int");

                    b.Property<int>("CantidadFragatas")
                        .HasColumnType("int");

                    b.Property<int>("CantidadLanchas")
                        .HasColumnType("int");

                    b.Property<bool>("Intervinientes")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Otro")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.HasKey("EmbarcacionAfectadaId");

                    b.HasIndex("SalidaId");

                    b.ToTable("EmbarcacionesAfectadas");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Firma", b =>
                {
                    b.Property<int>("FirmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("EmbarcacionVehiculoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("FirmaId");

                    b.HasIndex("EmbarcacionVehiculoId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Firmas");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Incidente", b =>
                {
                    b.Property<int>("IncidenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int?>("VehiculoSalidaVehiculoId")
                        .HasColumnType("int");

                    b.HasKey("IncidenteId");

                    b.HasIndex("PersonaId");

                    b.HasIndex("VehiculoSalidaVehiculoId");

                    b.ToTable("Incidente");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Incidente");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Licencia", b =>
                {
                    b.Property<int>("LicenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Desde")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EstadoLicencia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Hasta")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("TipoLicencia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("LicenciaId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Licencias", (string)null);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Sancion", b =>
                {
                    b.Property<int>("SancionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EncargadoAreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDesde")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaHasta")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<string>("SacionArea")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoSancion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SancionId");

                    b.HasIndex("EncargadoAreaId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Sanciones", (string)null);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Seguro", b =>
                {
                    b.Property<int>("SeguroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompañiaAseguradora")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FechaDeVencimineto")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NumeroDePoliza")
                        .HasColumnType("longtext");

                    b.Property<int>("TipoSeguro")
                        .HasColumnType("int");

                    b.HasKey("SeguroId");

                    b.ToTable("Seguros", (string)null);

                    b.HasDiscriminator<int>("TipoSeguro");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Salida", b =>
                {
                    b.Property<int>("SalidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApellidoSolicitante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CalleORuta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Depto")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DniSolicitante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EncargadoId")
                        .HasColumnType("int");

                    b.Property<string>("EntreCalles")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("HoraLlegada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HoraSalida")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreSolicitante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NombreYApellidoReceptor")
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroOKilometro")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NumeroParte")
                        .HasColumnType("int");

                    b.Property<string>("PisoNumero")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("QuienLlenoId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceptorId")
                        .HasColumnType("int");

                    b.Property<int?>("SeguroId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoReceptor")
                        .HasColumnType("longtext");

                    b.Property<string>("TelefonoSolicitante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoSalida")
                        .HasColumnType("int");

                    b.Property<int>("TipoServicio")
                        .HasColumnType("int");

                    b.Property<string>("TipoZona")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SalidaId");

                    b.HasIndex("EncargadoId");

                    b.HasIndex("QuienLlenoId");

                    b.HasIndex("ReceptorId");

                    b.HasIndex("SeguroId")
                        .IsUnique();

                    b.ToTable("Salidas", (string)null);

                    b.HasDiscriminator<int>("TipoSalida");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Bombero", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personales.Persona");

                    b.Property<int>("BrigadaId")
                        .HasColumnType("int");

                    b.Property<bool>("Chofer")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Dotacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("EquipoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FechaAceptacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Grado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ImagenId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroLegajo")
                        .HasColumnType("int");

                    b.Property<string>("Resolucion1")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resolucion2")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resolucion3")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resolucion4")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resolucion5")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Resolucion6")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("VencimientoRegistro")
                        .HasColumnType("datetime(6)");

                    b.HasIndex("BrigadaId");

                    b.HasIndex("EquipoId")
                        .IsUnique();

                    b.HasIndex("ImagenId")
                        .IsUnique();

                    b.HasIndex("NumeroLegajo")
                        .IsUnique();

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.ImagenBombero", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personales.Imagen");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.ImagenMovil", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personales.Imagen");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.VehiculoPersonal", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personales.Vehiculo");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasIndex("PersonaId");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.VehiculoSalida", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personales.Vehiculo");

                    b.Property<int>("EncargadoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NumeroMovil")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.ImagenEmbarcacion", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personales.Imagen");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.IncidenteDependencia", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Componentes.Incidente");

                    b.Property<int>("DependenciaId")
                        .HasColumnType("int");

                    b.HasIndex("DependenciaId");

                    b.HasDiscriminator().HasValue("IncidenteDependencia");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.SeguroSalida", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Componentes.Seguro");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.SeguroVehiculo", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Componentes.Seguro");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoAfectado", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personales.Vehiculo");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SalidaId")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(6);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoDamnificado", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personales.Vehiculo");

                    b.Property<bool>("Airbag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("VehiculoDamnificado_Airbag");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("DamnificadoId")
                        .HasColumnType("int");

                    b.HasIndex("DamnificadoId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Accidente", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<int>("CantidadVehiculos")
                        .HasColumnType("int");

                    b.Property<string>("CondicionesClimaticas")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OtroCondicion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Accidente_Tipo");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.FactorClimatico", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<string>("DetalleSuperficieDañada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Evacuacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FactorClimatico_Evacuacion");

                    b.Property<string>("Superficie")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FactorClimatico_Tipo");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Incendio", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<int?>("CantidadAmbientes")
                        .HasColumnType("int");

                    b.Property<int?>("CantidadPisos")
                        .HasColumnType("int");

                    b.Property<string>("DetalleSuperficieAfectadaIncendio")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("DeteccionAutomaticaId")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Extintor")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Hidrante")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NombreEstablecimiento")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OtraAbertura")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OtroLugar")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OtroTecho")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("PisoAfectado")
                        .HasColumnType("int");

                    b.Property<string>("SuperficieAfectadaCausa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Incendio_Tipo");

                    b.Property<string>("TipoAbertura")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoEvacuacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoSuperficieAfectada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoTecho")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(15);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.MaterialPeligroso", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<bool>("Confinamiento")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Controlada")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Descontaminacion")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DetalleSuperficieAfectada")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DetallesAccionesMateriales")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DetallesAccionesPersonas")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("DilucionDeVapores")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Evacuacion")
                        .HasColumnType("int");

                    b.Property<bool>("Neutralizacion")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OtraAccionesMateriales")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("OtraAccionesPersonas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("SinAccion")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Sustancias")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TipoSituacion")
                        .HasColumnType("int");

                    b.Property<int>("TipoSuperficie")
                        .HasColumnType("int");

                    b.Property<bool>("Trasvase")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Venteo")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.RescateAnimal", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<string>("Otro")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoRescateAnimal")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.RescatePersona", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<string>("Otro")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoRescatePersona")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(6);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.ServicioEspecial", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Salida");

                    b.Property<string>("OtroRepresentacion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ServicioEspecial_Tipo");

                    b.Property<string>("TipoOrganizacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(16);
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Movil", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personales.VehiculoSalida");

                    b.Property<int>("ImagenId")
                        .HasColumnType("int");

                    b.Property<int>("Kilometraje")
                        .HasColumnType("int");

                    b.Property<string>("ModeloBomba")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NumeroChasis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NumeroMotor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasIndex("EncargadoId");

                    b.HasIndex("ImagenId")
                        .IsUnique();

                    b.HasIndex("NumeroMovil")
                        .IsUnique();

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Embarcacion", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Personales.VehiculoSalida");

                    b.Property<int>("ImagenId")
                        .HasColumnType("int")
                        .HasColumnName("Embarcacion_ImagenId");

                    b.HasIndex("EncargadoId");

                    b.HasIndex("ImagenId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue(7);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoAfectadoAccidente", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Componentes.VehiculoAfectado");

                    b.HasIndex("SalidaId");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoAfectadoIncendio", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Componentes.VehiculoAfectado");

                    b.HasIndex("SalidaId");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.IncendioComercio", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(7);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.IncendioEstablecimientoEducativo", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IncendioEstablecimientoEducativo_TipoLugar");

                    b.HasDiscriminator().HasValue(8);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.IncendioEstablecimientoPublico", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IncendioEstablecimientoPublico_TipoLugar");

                    b.HasDiscriminator().HasValue(9);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.IncendioForestal", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IncendioForestal_TipoLugar");

                    b.HasDiscriminator().HasValue(10);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.IncendioHospitalesYClinicas", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IncendioHospitalesYClinicas_TipoLugar");

                    b.HasDiscriminator().HasValue(11);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.IncendioIndustria", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IncendioIndustria_TipoLugar");

                    b.HasDiscriminator().HasValue(12);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.IncendioVivienda", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.Incendio");

                    b.Property<string>("TipoLugar")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IncendioVivienda_TipoLugar");

                    b.HasDiscriminator().HasValue(13);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.ServicioEspecialPrevencion", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.ServicioEspecial");

                    b.Property<string>("TipoPrevencion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(14);
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.ServicioEspecialRepresentaciones", b =>
                {
                    b.HasBaseType("Vista.Data.Models.Salidas.Planillas.ServicioEspecial");

                    b.Property<string>("TipoRepresentacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.BomberoDependencia", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Dependencia", "Dependencia")
                        .WithMany("Bomberos")
                        .HasForeignKey("DependenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personales.Bombero", "Bombero")
                        .WithOne("Dependencia")
                        .HasForeignKey("Vista.Data.Models.Personales.BomberoDependencia", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bombero");

                    b.Navigation("Dependencia");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.BomberoSalida", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Bombero", "Bombero")
                        .WithMany("Salidas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Salida", "Salida")
                        .WithMany("CuerpoParticipante")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bombero");

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Contacto", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Persona", "Persona")
                        .WithOne("Contacto")
                        .HasForeignKey("Vista.Data.Models.Personales.Contacto", "PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.HorarioBombero", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Bombero", null)
                        .WithMany("Horarios")
                        .HasForeignKey("BomberoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.MovilSalida", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Movil", "Movil")
                        .WithMany("Salidas")
                        .HasForeignKey("MovilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personales.Bombero", "Chofer")
                        .WithMany()
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Salida", "Salida")
                        .WithMany("Moviles")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chofer");

                    b.Navigation("Movil");

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Vehiculo", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Componentes.SeguroVehiculo", "Seguro")
                        .WithOne("Vehiculo")
                        .HasForeignKey("Vista.Data.Models.Personales.Vehiculo", "SeguroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seguro");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.AscensoBombero", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Bombero", "PersonalAfectado")
                        .WithMany("Ascensos")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalAfectado");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Damnificado", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Salida", "Salida")
                        .WithMany("Damnificados")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salida");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.DatosCapacitacion", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Planillas.ServicioEspecial", "ServicioEspecial")
                        .WithOne("DatosCapacitacion")
                        .HasForeignKey("Vista.Data.Models.Salidas.Componentes.DatosCapacitacion", "DatosCapacitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServicioEspecial");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.EmbarcacionAfectada", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Incendio", "Incendio")
                        .WithMany()
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incendio");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Firma", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Componentes.Embarcacion", null)
                        .WithMany("Firmas")
                        .HasForeignKey("EmbarcacionVehiculoId");

                    b.HasOne("Vista.Data.Models.Personales.Bombero", "Bombero")
                        .WithMany("Firmas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personales.Movil", "Movil")
                        .WithMany("Firmas")
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bombero");

                    b.Navigation("Movil");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Incidente", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Bombero", "QuienHizo")
                        .WithMany("Incidentes")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personales.VehiculoSalida", null)
                        .WithMany("Incidentes")
                        .HasForeignKey("VehiculoSalidaVehiculoId");

                    b.Navigation("QuienHizo");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Licencia", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Bombero", "PersonalAfectado")
                        .WithMany("Licencias")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalAfectado");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Sancion", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Bombero", "EncargadoArea")
                        .WithMany("SancionesAplicadas")
                        .HasForeignKey("EncargadoAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personales.Bombero", "PersonalSancionado")
                        .WithMany("SancionesRecibidas")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EncargadoArea");

                    b.Navigation("PersonalSancionado");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Salida", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Bombero", "Encargado")
                        .WithMany()
                        .HasForeignKey("EncargadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personales.Bombero", "QuienLleno")
                        .WithMany()
                        .HasForeignKey("QuienLlenoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personales.Bombero", "ReceptorBombero")
                        .WithMany()
                        .HasForeignKey("ReceptorId");

                    b.HasOne("Vista.Data.Models.Salidas.Componentes.SeguroSalida", "Seguro")
                        .WithOne("Salida")
                        .HasForeignKey("Vista.Data.Models.Salidas.Planillas.Salida", "SeguroId");

                    b.Navigation("Encargado");

                    b.Navigation("QuienLleno");

                    b.Navigation("ReceptorBombero");

                    b.Navigation("Seguro");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Bombero", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Brigada", "Brigada")
                        .WithMany("Bomberos")
                        .HasForeignKey("BrigadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personales.Comunicacion", "Handie")
                        .WithOne("Bombero")
                        .HasForeignKey("Vista.Data.Models.Personales.Bombero", "EquipoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Vista.Data.Models.Personales.ImagenBombero", "Imagen")
                        .WithOne("Bombero")
                        .HasForeignKey("Vista.Data.Models.Personales.Bombero", "ImagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brigada");

                    b.Navigation("Handie");

                    b.Navigation("Imagen");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.VehiculoPersonal", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Bombero", "Bombero")
                        .WithMany("Vehiculos")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bombero");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.IncidenteDependencia", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Dependencia", "Dependencia")
                        .WithMany("Incidentes")
                        .HasForeignKey("DependenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dependencia");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoDamnificado", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Componentes.Damnificado", "Damnificado")
                        .WithOne("VehiculoDamnificado")
                        .HasForeignKey("Vista.Data.Models.Salidas.Componentes.VehiculoDamnificado", "DamnificadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Damnificado");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Movil", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Bombero", "Encargado")
                        .WithMany()
                        .HasForeignKey("EncargadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Personales.ImagenMovil", "Imagen")
                        .WithOne("Movil")
                        .HasForeignKey("Vista.Data.Models.Personales.Movil", "ImagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encargado");

                    b.Navigation("Imagen");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Embarcacion", b =>
                {
                    b.HasOne("Vista.Data.Models.Personales.Bombero", "Encargado")
                        .WithMany()
                        .HasForeignKey("EncargadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vista.Data.Models.Salidas.Componentes.ImagenEmbarcacion", "ImagenEmbarcacion")
                        .WithOne("Embarcacion")
                        .HasForeignKey("Vista.Data.Models.Salidas.Componentes.Embarcacion", "ImagenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encargado");

                    b.Navigation("ImagenEmbarcacion");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoAfectadoAccidente", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Accidente", "Accidente")
                        .WithMany("VehiculosAfectado")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accidente");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.VehiculoAfectadoIncendio", b =>
                {
                    b.HasOne("Vista.Data.Models.Salidas.Planillas.Incendio", "Incendio")
                        .WithMany("VehiculoAfectados")
                        .HasForeignKey("SalidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incendio");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Brigada", b =>
                {
                    b.Navigation("Bomberos");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Comunicacion", b =>
                {
                    b.Navigation("Bombero");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Dependencia", b =>
                {
                    b.Navigation("Bomberos");

                    b.Navigation("Incidentes");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Persona", b =>
                {
                    b.Navigation("Contacto")
                        .IsRequired();
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Damnificado", b =>
                {
                    b.Navigation("VehiculoDamnificado");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Salida", b =>
                {
                    b.Navigation("CuerpoParticipante");

                    b.Navigation("Damnificados");

                    b.Navigation("Moviles");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Bombero", b =>
                {
                    b.Navigation("Ascensos");

                    b.Navigation("Dependencia");

                    b.Navigation("Firmas");

                    b.Navigation("Horarios");

                    b.Navigation("Incidentes");

                    b.Navigation("Licencias");

                    b.Navigation("Salidas");

                    b.Navigation("SancionesAplicadas");

                    b.Navigation("SancionesRecibidas");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.ImagenBombero", b =>
                {
                    b.Navigation("Bombero")
                        .IsRequired();
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.ImagenMovil", b =>
                {
                    b.Navigation("Movil")
                        .IsRequired();
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.VehiculoSalida", b =>
                {
                    b.Navigation("Incidentes");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.ImagenEmbarcacion", b =>
                {
                    b.Navigation("Embarcacion")
                        .IsRequired();
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.SeguroSalida", b =>
                {
                    b.Navigation("Salida")
                        .IsRequired();
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.SeguroVehiculo", b =>
                {
                    b.Navigation("Vehiculo")
                        .IsRequired();
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Accidente", b =>
                {
                    b.Navigation("VehiculosAfectado");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.Incendio", b =>
                {
                    b.Navigation("VehiculoAfectados");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Planillas.ServicioEspecial", b =>
                {
                    b.Navigation("DatosCapacitacion");
                });

            modelBuilder.Entity("Vista.Data.Models.Personales.Movil", b =>
                {
                    b.Navigation("Firmas");

                    b.Navigation("Salidas");
                });

            modelBuilder.Entity("Vista.Data.Models.Salidas.Componentes.Embarcacion", b =>
                {
                    b.Navigation("Firmas");
                });
#pragma warning restore 612, 618
        }
    }
}
