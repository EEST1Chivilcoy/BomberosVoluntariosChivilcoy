@using Vista.Data.ViewModels
@using AntDesign

<h6>Seguro del lugar</h6>

@if (!EsObligatorio)
{
    <div class="inpt-cont" style="display: flex; flex-direction: column; justify-content: space-around; min-width: 80px;">
        <label class="inpt-cont--lbl">¿El lugar tiene seguro?</label>
        <Switch @bind-Checked="@TieneSeguro" Style="width: 10px!important;" />
    </div>
}

@if (EsObligatorio || TieneSeguro)
{
    <div class="slick-contenedor @animationClass">
        <div class="inpt-cont">
            <label class="inpt-cont--lbl">Compañía aseguradora del establecimiento</label>
            <Input @bind-Value="@Model.CompaniaAseguradora" />
        </div>
        <div class="inpt-cont">
            <label class="inpt-cont--lbl">Número de póliza</label>
            <Input @bind-Value="@Model.NumeroPoliza" />
        </div>
        <div class="inpt-cont">
            <label class="inpt-cont--lbl">Fecha de vencimiento</label>
            <DatePicker TValue="DateTime?" ShowTime="true" OnChange="OnChange" @bind-Value="@Model.FechaVencimineto" />
        </div>
    </div>
}

@code {
    [Parameter] public SalidasViewModels Model { get; set; }
    [Parameter] public string animationClass { get; set; }
    [Parameter] public EventCallback<DateTimeChangedEventArgs> OnChange { get; set; }

    [Parameter] public bool EsObligatorio { get; set; }

    private bool TieneSeguro { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        // Si cualquiera de los campos de seguro tiene un valor, prende el switch
        TieneSeguro = !string.IsNullOrEmpty(Model.CompaniaAseguradora) ||
                      !string.IsNullOrEmpty(Model.NumeroPoliza) ||
                      Model.FechaVencimineto.HasValue;
    }
}