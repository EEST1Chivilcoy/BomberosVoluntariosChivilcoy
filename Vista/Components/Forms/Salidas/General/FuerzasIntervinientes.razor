@using Vista.Data.Models.Grupos.FuerzasIntervinientes
@using Vista.Data.ViewModels

@*Servicios Utilizados*@
@using Vista.Services
@inject IFuerzaIntervinienteService FuerzaIntervinienteService
@inject IMessageService MessageService



<style>
    .fuerzas-intervinientes {
        border: 2px solid #e53935 !important;
        background: linear-gradient(180deg, #fff5f5 0%, #ffeaea 100%) !important;
        box-shadow: 0 4px 12px rgba(229, 57, 53, 0.15) !important;
        border-radius: 16px !important;
        margin-bottom: 2rem !important;
        padding: 2.5rem 2rem 2rem 2rem !important;
        transition: box-shadow 0.25s ease, transform 0.2s ease !important;
    }

        .fuerzas-intervinientes .section-number {
            background: linear-gradient(135deg, #b71c1c, #e53935);
            color: white;
        }

        .fuerzas-intervinientes .ant-table {
            background: #fff5f5;
            color: #b71c1c;
            font-weight: 500;
            font-size: 1.25rem;
            border-radius: 14px;
            min-width: 900px;
            width: 100%;
            table-layout: auto;
        }

            .fuerzas-intervinientes .ant-table-thead .ant-table-cell, .fuerzas-intervinientes .ant-table thead th {
                background: linear-gradient(135deg, #ff6b6b, #c62828);
                border-right: 1px solid #ffcdd2;
                color: #fff !important;
                font-weight: 700;
                text-align: center;
                border-bottom: 2.5px solid #ffcdd2;
                letter-spacing: 0.3px;
                font-size: 1.3rem;
                padding: 18px 24px !important;
                height: 56px;
            }

        .fuerzas-intervinientes .ant-table-title {
            background: #fff5f5;
            color: #b71c1c;
            font-weight: 700;
            font-size: 1.25rem;
            text-align: left;
            padding: 1.1rem 1.5rem;
            border-top-left-radius: 12px;
            border-top-right-radius: 12px;
            border-bottom: 1px solid #ffcdd2;
        }

        .fuerzas-intervinientes .ant-table-cell, .fuerzas-intervinientes .ant-table td {
            background: #fff !important;
            border-right: 1px solid #f5b5b5;
            color: #333 !important;
            font-size: 1.18rem;
            padding: 16px 22px !important;
            height: 54px;
        }

        .fuerzas-intervinientes .ant-table tbody tr:hover td {
            background: #fff0f0 !important;
        }

        .fuerzas-intervinientes .ant-btn-dangerous, .fuerzas-intervinientes .ant-btn[Danger] {
            background: linear-gradient(135deg, #ff6b6b, #c62828) !important;
            border: none !important;
            color: #fff !important;
            border-radius: 8px;
            font-weight: 600;
            box-shadow: 0 2px 8px rgba(229,57,53,.18);
            transition: all 0.2s ease-in-out;
        }

            .fuerzas-intervinientes .ant-btn-dangerous:hover {
                filter: brightness(1.1);
                transform: scale(1.05);
            }

        .fuerzas-intervinientes .ant-table-tbody > tr.ant-table-row-selected > td {
            background: #ffeaea !important;
        }

        .fuerzas-intervinientes .centrado {
            display: flex;
            justify-content: flex-end;
        }
</style>

<div class="fuerzas-intervinientes">
    <Form Model="fuerzaForm">
        <div style="margin-bottom: 24px;">
            <div style="border-bottom: 2px solid #e53935; padding-bottom: 8px; margin-bottom: 16px;">
                <h4 style="color: #e53935; margin: 0; font-weight: 600;">Fuerza Interviniente</h4>
            </div>
            <Row Gutter="16">
                <Col Xs="24" Sm="12" Md="12" Lg="12">
                <FormItem Label="Fuerza Interviniente" Required>
                    <Select TItem="FuerzaInterviniente"
                            TItemValue="int?"
                            DataSource="@fuerzasDisponibles"
                            @bind-Value="fuerzaForm.FuerzaID"
                            LabelName="@nameof(FuerzaInterviniente.NombreFuerza)"
                            ValueName="@nameof(FuerzaInterviniente.Id)"
                            Placeholder="Ej: Policía, Defensa Civil, etc."
                            DefaultActiveFirstOption="false"
                            AllowClear="true"
                            EnableSearch>
                    </Select>
                </FormItem>
                </Col>
                <Col Xs="24" Sm="12" Md="12" Lg="12">
                <FormItem Label="N° Unidad" Required>
                    <Input @bind-Value="fuerzaForm.NumeroUnidad" Placeholder="Ingrese el número de unidad" />
                </FormItem>
                </Col>
            </Row>
            <Row Gutter="16">
                <Col Xs="24" Sm="12" Md="8" Lg="8">
                <FormItem Label="Encargado" Required>
                    <Input @bind-Value="fuerzaForm.Encargado" Placeholder="Nombre del encargado" />
                </FormItem>
                </Col>
            </Row>
            <Row Justify="RowJustify.End" style="margin-top: 16px;">
                <Col>
                <Button Type="@ButtonType.Primary"
                        OnClick="@CargarFuerza"
                        Icon="plus"
                        Style="background-color: #e53935; border-color: #e53935;">
                    Cargar Fuerza Interviniente
                </Button>
                </Col>
            </Row>
        </div>
    </Form>

    @* Tabla de Fuerzas Intervinientes Cargadas *@
    @if (fuerzasCargadas.Any())
    {
        <div style="margin-top: 32px;">
            <div style="border-bottom: 2px solid #e53935; padding-bottom: 8px; margin-bottom: 16px;">
                <h4 style="color: #e53935; margin: 0; font-weight: 600; display: flex; align-items: center;">
                    <Icon Type="team" style="margin-right: 8px;" />
                    Fuerzas Intervinientes Asignadas
                    <Badge Count="@fuerzasCargadas.Count"
                           Style="margin-left: 12px; background-color: #e53935;" />
                </h4>
            </div>
            <div style="overflow-x: auto;">
                <table class="ant-table">
                    <thead>
                        <tr>
                            <th>Encargado</th>
                            <th>N° Unidad</th>
                            <th>Fuerza</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in fuerzasCargadas)
                        {
                            <tr>
                                <td>@item.Encargado</td>
                                <td>@item.NumeroUnidad</td>
                                <td>@fuerzasDisponibles.FirstOrDefault(f => f.Id == item.FuerzaID)?.NombreFuerza</td>
                                <td>
                                    <Button Type="@ButtonType.Text"
                                            Danger
                                            Size="@ButtonSize.Large"
                                            Icon="delete"
                                            Style="font-size:1.3rem; padding: 8px 16px;"
                                            OnClick="@(() => EliminarFuerza(item))">
                                    </Button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>



@code {
    [Parameter, EditorRequired] public SalidasViewModels Model { get; set; } = null!;
    private FuerzaIntervinienteModel fuerzaForm = new FuerzaIntervinienteModel();
    private List<FuerzaIntervinienteModel> fuerzasCargadas = new();

    public class FuerzaIntervinienteModel
    {
        public int? FuerzaID { get; set; }
        public string? NumeroUnidad { get; set; }
        public string? Encargado { get; set; }
    }
    private List<FuerzaInterviniente> fuerzasDisponibles = new();

    private void CargarFuerza()
    {
        if (fuerzaForm != null &&
            !string.IsNullOrWhiteSpace(fuerzaForm.NumeroUnidad) &&
            !string.IsNullOrWhiteSpace(fuerzaForm.Encargado))
        {
            fuerzasCargadas.Add(new FuerzaIntervinienteModel
                {
                    FuerzaID = fuerzaForm.FuerzaID,
                    NumeroUnidad = fuerzaForm.NumeroUnidad,
                    Encargado = fuerzaForm.Encargado
                });
            fuerzaForm = new FuerzaIntervinienteModel();
        }
    }

    private async Task EliminarFuerza(FuerzaIntervinienteModel fuerza)
    {
        try
        {
            fuerzasCargadas.Remove(fuerza);
            await MessageService.SuccessAsync("Fuerza interviniente eliminada");
            StateHasChanged();
        }
        catch (Exception ex)
        {
            await MessageService.ErrorAsync("Error al eliminar fuerza");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        fuerzasDisponibles = await FuerzaIntervinienteService.ObtenerTodasLasFuerzasAsync();
        StateHasChanged();
}
}