@inject IDbContextFactory<BomberosDbContext> DbFactory
@inject NavigationManager navigationManager
@page "/moviles/agregar"

@if (movilView is not null)
{
    <label>Marca:</label>
    <input type="text" @bind="movilView.Marca" />
    <br>
    <label>Modelo:</label>
    <input type="text" @bind="movilView.Modelo" />
    <br>
    <label>Año:</label>
    <input type="text" @bind="movilView.Año" />
    <br>
    <InputFile OnChange="SubirFoto" />
    <br>
    <label>Patente:</label>
    <input type="text" @bind="movilView.Patente" />
    <br>
    <label>Tipo:</label>
    <input type="text" @bind="movilView.Tipo" />
    <br>
    <label>Nº movil:</label>
    <input type="text" @bind="movilView.NumeroMovil" />
    <br>
    <label>Nº motor:</label>
    <input type="text" @bind="movilView.NumeroMotor" />
    <br>
    <label>Nº chasis:</label>
    <input type="text" @bind="movilView.NumeroChasis" />
    <br>
    <select @bind="movilView.Estado">
        <option value="@TipoEstadoMovil.Activo">Activo</option>
        <option value="@TipoEstadoMovil.Inactivo">Inactivo</option>
        <option value="@TipoEstadoMovil.Reparacion">Reparacion</option>
        <option value="@TipoEstadoMovil.Limpieza">Limpieza</option>
    </select>
    <br>
    <h5>Seguro</h5>

    <label>Compañia:</label>
    <input type="text" @bind="seguroView.CompañiaAseguradora" />
    <br>
    <label>Nº poliza:</label>
    <input type="text" @bind="seguroView.NumeroDePoliza" />
    <br>
    <label>Fecha de vencimiento:</label>
    <input type="date" @bind="seguroView.FechaDeVencimiento" />
    <br />
    <button @onclick="SubirMovil">Crear movil</button>
}
<br>

@code {

    public class MovilViewModel
    {
        [Required, StringLength(255)]
        public string Marca { get; set; }
        [Required, StringLength(255)]
        public string Modelo { get; set; }
        public int Año { get; set; }
        [Required, StringLength(255)]
        public string Patente { get; set; }
        [Required, StringLength(255)]
        public string Tipo { get; set; }
        [Required, StringLength(255)]
        public string NumeroMovil { get; set; }
        [Required, StringLength(255)]
        public string NumeroMotor { get; set; }
        [Required, StringLength(255)]
        public string NumeroChasis { get; set; }
        [Required, StringLength(255)]
        public TipoEstadoMovil Estado { get; set; }
    }
    public class SeguroViewModel
    {
        [Required, StringLength(255)]
        public string CompañiaAseguradora { get; set; }
        [Required, StringLength(255)]
        public string NumeroDePoliza { get; set; }
        public DateTime FechaDeVencimiento { get; set; }
    }
    public class ImagenViewModel
    {
        public string Base64 { get; set; }
        [Required, StringLength(255)]
        public string TipoImagen { get; set; }
        [Required, StringLength(255)]
        public string Nombre { get; set; }
    }

    public ImagenViewModel imagenView { get; set; } = new();
    public MovilViewModel movilView { get; set; } = new();
    public SeguroViewModel seguroView { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        using var db = DbFactory.CreateDbContext();
    }

    private async void SubirFoto(InputFileChangeEventArgs e)
    {
        string imagenBase64 = await Base64Helper.StreamToBase64(e.File.OpenReadStream());

        imagenView.Base64 = imagenBase64;
        imagenView.TipoImagen = e.File.ContentType;
        imagenView.Nombre = e.File.Name;
    }

    private async void SubirMovil()
    {
        using var db = DbFactory.CreateDbContext();

        if (movilView is not null)
        {
            Movil? comprobante = await db.Moviles.Where(m => m.NumeroMovil == movilView.NumeroMovil).SingleOrDefaultAsync();

            if (comprobante is null)
            {
                Movil movil = new Movil()
                    {
                        Marca = movilView.Marca,
                        Modelo = movilView.Modelo,
                        Año = movilView.Año,
                        Patente = movilView.Patente,
                        Tipo = movilView.Tipo,
                        Imagen = new()
                        {
                            NombreImagen = imagenView.Nombre,
                            TipoImagen = imagenView.TipoImagen,
                            Base64Imagen = imagenView.Base64
                        },
                        NumeroChasis = movilView.NumeroChasis,
                        NumeroMotor = movilView.NumeroMotor,
                        NumeroMovil = movilView.NumeroMovil,
                        Estado = movilView.Estado,
                        Seguro = new()
                        {
                            CompañiaAseguradora = seguroView.CompañiaAseguradora,
                            FechaDeVencimineto = seguroView.FechaDeVencimiento,
                            NumeroDePoliza = seguroView.NumeroDePoliza
                        }
                    };

                db.Moviles.Add(movil);
                await db.SaveChangesAsync();
            }
        }

        StateHasChanged();
    }
}
