@inject IDbContextFactory<BomberosDbContext> DbFactory
@inject NavigationManager navigationManager
@inject IMessageService message
@page "/moviles/agregar"
@using AntDesign;
<style>
    input[type=text], input[type=number]{
        border: none;
        background: transparent;
        border-bottom: 1px solid #333;
        outline: none;
        width: 60%;
        padding: .5em;
    }

        input[type=text]:focus, input[type=number]:focus, input[type=file]:focus, input[type=date]:focus{
            background: #D0D0D0;
        }
</style>
@if (movilView is not null)
{
    <Space Direction="DirectionVHType.Vertical" Style="#">
        <SpaceItem>
            <Card Title=@("Movil") Style="width: 500px;height: 30%;display: grid;">
                <div style="width: 50%;">
                    <div>
                        <input type="text" @bind="movilView.Marca" placeholder="Marca: " />
                    </div>
                    <div>
                        <input type="text" @bind="movilView.Modelo" placeholder="Modelo: " />
                    </div>
                    <div>
                        <div>
                            <label>Año:</label>
                        </div>
                        <input type="text" @bind="movilView.Año" />
                    </div>
                    <div>
                        <input type="text" @bind="movilView.Patente" placeholder="Patente: " />
                    </div>
                    <div>
                        <label>Foto: </label>
                        <InputFile OnChange="SubirFoto" />
                    </div>
                </div>
                <div style="width: 50%;">
                    <div>
                        <input type="text" @bind="movilView.Tipo" placeholder="Tipo: " />
                    </div>
                    <div>
                        <input type="text" @bind="movilView.NumeroMovil" placeholder="Nº movil: " />
                    </div>
                    <div>
                        <input type="text" @bind="movilView.NumeroMotor" placeholder="Nº motor: " />
                    </div>
                    <div>
                        <input type="text" @bind="movilView.NumeroChasis" placeholder="Nº chasis: " />
                    </div>
                    <div>
                        <input type="text" @bind="movilView.ModeloBomba" placeholder="Modelo de bomba: " />
                    </div>
                    <div>
                        <div>
                            <label>Estado: </label>
                        </div>
                        <select @bind="movilView.Estado" placeholder="Estado: ">
                            <option value="@TipoEstadoMovil.Activo">Activo</option>
                            <option value="@TipoEstadoMovil.Inactivo">Inactivo</option>
                            <option value="@TipoEstadoMovil.Reparacion">Reparacion</option>
                            <option value="@TipoEstadoMovil.Limpieza">Limpieza</option>
                        </select>
                    </div>
                </div>
            </Card>
        </SpaceItem>
        <SpaceItem>
            <Card Title=@("Seguro") Style="width: 300px;">
                <div>
                    <input type="text" @bind="seguroView.CompañiaAseguradora" placeholder="Compañia: " />
                </div>
                <div>
                    <input type="text" @bind="seguroView.NumeroDePoliza" placeholder="Nº poliza: " />
                </div>
                <div>
                    <label>Fecha de vencimiento: </label>
                    <input type="date" @bind="seguroView.FechaDeVencimiento" />
                </div>
            </Card>
        </SpaceItem>
    </Space>
    <Button Type="@ButtonType.Primary" @onclick="SubirMovil" Style="background: rgb(62, 24, 24);color: #fff;border: none;">Crear Movil</Button>
}

@code {

    public class MovilViewModel
    {
        [Required, StringLength(255)]
        public string Marca { get; set; }
        [Required, StringLength(255)]
        public string Modelo { get; set; }
        public int Año { get; set; }
        [Required, StringLength(255)]
        public string Patente { get; set; }
        [Required, StringLength(255)]
        public string Tipo { get; set; }
        [Required, StringLength(255)]
        public string NumeroMovil { get; set; }
        [Required, StringLength(255)]
        public string NumeroMotor { get; set; }
        [Required, StringLength(255)]
        public string NumeroChasis { get; set; }
        [Required, StringLength(255)]
        public string ModeloBomba{ get; set; }
        [Required,StringLength(255)]
        public TipoEstadoMovil Estado { get; set; }

    }
    public class SeguroViewModel
    {
        [Required, StringLength(255)]
        public string CompañiaAseguradora { get; set; }
        [Required, StringLength(255)]
        public string NumeroDePoliza { get; set; }
        public DateTime FechaDeVencimiento { get; set; }
    }
    public class ImagenViewModel
    {
        public string Base64 { get; set; }
        [Required, StringLength(255)]
        public string TipoImagen { get; set; }
        [Required, StringLength(255)]
        public string Nombre { get; set; }
    }

    public ImagenViewModel imagenView { get; set; } = new();
    public MovilViewModel movilView { get; set; } = new();
    public SeguroViewModel seguroView { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        using var db = DbFactory.CreateDbContext();
    }

    private async void SubirFoto(InputFileChangeEventArgs e)
    {
        string imagenBase64 = await Base64Helper.StreamToBase64(e.File.OpenReadStream()); 

        imagenView.Base64 = imagenBase64;
        imagenView.TipoImagen = e.File.ContentType;
        imagenView.Nombre = e.File.Name;
    }

    private async void SubirMovil()
    {
        using var db = DbFactory.CreateDbContext();

        if (movilView is not null)
        {
            Movil? comprobante = await db.Moviles.Where(m => m.NumeroMovil == movilView.NumeroMovil).SingleOrDefaultAsync();

            if (comprobante is null)
            {
                Movil movil = new Movil()
                    {
                        Marca = movilView.Marca,
                        Modelo = movilView.Modelo,
                        Año = movilView.Año,
                        Patente = movilView.Patente,
                        Tipo = movilView.Tipo,
                        Imagen = new()
                        {
                            NombreImagen = imagenView.Nombre,
                            TipoImagen = imagenView.TipoImagen,
                            Base64Imagen = imagenView.Base64
                        },
                        ModeloBomba = movilView.ModeloBomba,
                        NumeroChasis = movilView.NumeroChasis,
                        NumeroMotor = movilView.NumeroMotor,
                        NumeroMovil = movilView.NumeroMovil,
                        Estado = movilView.Estado,
                        Seguro = new()
                        {
                            CompañiaAseguradora = seguroView.CompañiaAseguradora,
                            FechaDeVencimineto = seguroView.FechaDeVencimiento,
                            NumeroDePoliza = seguroView.NumeroDePoliza
                        }
                    };
                db.Moviles.Add(movil);
                await db.SaveChangesAsync();
            }
        }

        StateHasChanged();
        navigationManager.NavigateTo("/moviles"); 
    }
}
