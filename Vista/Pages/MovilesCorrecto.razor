@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@page "/moviles"


@if (moviles is not null)
{
             @foreach(Movil m in moviles)
             {
                <card  class="cartaPropia" style="display: flex; flex-direction: column;height: 300px; width: 240px;border-radius: 2px;align-items: center;border: 1px solid gray;">
                    <div style="width: 100%;height: 70%;">
                        <img src="@CargarImage(m)" style="width: 100%;height:100%;object-fit: cover;overflow: hidden;">
                    </div>
                    <div style="height: 30%;width: 100%;">
                        <span style="background: #fff;font-size: 14px;font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;">
                            <p>Movil nº @m.NumeroMovil</p>
                        </span>
                        <div style="display:flex; flex-direction: row;width: 100%;">
                            <Button class="botonCarta" OnClick="@(() => { navigationManager.NavigateTo($"/moviles/movil/{m.VehiculoId}"); })">
                                <Icon Type="ellipsis" Theme="outline"/>
                            </Button>
                            <Button class="botonCarta" OnClick="@(() => { navigationManager.NavigateTo($"/moviles/editar/{m.VehiculoId}"); })">
                                <Icon Type="edit" Theme="outline" />
                            </Button>
                            <Button class="botonCarta" OnClick="()=> EliminarMovil(m.VehiculoId)">
                                <Icon Type="delete" Theme="outline" />
                            </Button>
                        </div>
                    </div>
                </card>
                <style>
                    .cartaPropia:hover{
                        box-shadow: 2px 2px 2px #CFCFCF;
                    }
                    .botonCarta{
                        width: 100%;
                    }
                </style>
             }
}
else
{
    <h5>No hay moviles, carge uno porfavor</h5>
}
<div>
    <a @onclick="@(() => { navigationManager.NavigateTo($"/moviles/agregar"); })">
        <Button Type="@ButtonType.Primary">Agregar Movil</Button>
    </a>
</div>


@code {
    public Movil[]? moviles;

    protected override async Task OnInitializedAsync()
    {
        using var db = DbFactory.CreateDbContext();

        moviles = await db.Moviles.ToArrayAsync();
    }

    public string CargarImage(Movil movil)
    {
        using var db = DbFactory.CreateDbContext();

        string src = "/";

        ImagenMovil? imagen = db.ImagenesMoviles.Where(i => i.ImagenId == movil.ImagenId).SingleOrDefault();

        if (imagen is not null)
        {
            src = $"data:{imagen.TipoImagen}; base64,{imagen.Base64Imagen}";
        }

        return src;
    }
    public async void EliminarMovil(int id)
    {

        using var context = DbFactory.CreateDbContext();
        Movil? MovilAeliminnar = await context.Moviles.Where(m => m.VehiculoId == id).SingleOrDefaultAsync();
        if (MovilAeliminnar is not null)
        {
            context.Remove(MovilAeliminnar);
        }
        await context.SaveChangesAsync();
        //NumeroMovil.NumeroMovil = string.Empty;
        moviles = await context.Moviles.ToArrayAsync();
        StateHasChanged();
    }
}


