@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@using Vista.Data.Mappers
@using System.ComponentModel
@using Vista.Data.Models.Personas.Personal
@using Vista.Data.Models.Personas.Personal.Componentes
@using Vista.Data.Models.Imagenes
@using Vista.Data.ViewModels.Personal

@page "/personal/{TipoPersonal}/agregar"

@*Servicios Utilizados*@
@using Vista.Services
@inject IBomberoService BomberoService
@inject IMessageService message
@inject NavigationManager navigationManager

<style>
    /* Estilos generales */
    .container {
        padding: 24px !important;
        min-height: 100vh !important;
    }

    .page-title {
        font-size: 24px !important;
        font-weight: 600 !important;
        color: #1f1f1f !important;
        margin-bottom: 24px !important;
        display: flex !important;
        align-items: center !important;
    }

    .page-title-icon {
        margin-right: 12px !important;
        color: #c43a3a !important;
    }

    .card {
        background-color: white !important;
        border-radius: 8px !important;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08) !important;
        padding: 24px !important;
        margin-bottom: 24px !important;
    }

    .card-title {
        font-size: 18px !important;
        font-weight: 500 !important;
        color: #434343 !important;
        margin-bottom: 16px !important;
        padding-bottom: 12px !important;
        border-bottom: 1px solid #f0f0f0 !important;
    }

    /* Estilos de la foto */
    .profile-photo-container {
        display: flex !important;
        flex-direction: column !important;
        align-items: center !important;
        padding: 16px !important;
    }

    .photo-preview {
        width: 150px !important;
        height: 150px !important;
        border-radius: 50% !important;
        overflow: hidden !important;
        margin-bottom: 16px !important;
        display: flex !important;
        align-items: center !important;
        justify-content: center !important;
    }

    .upload-actions {
        display: flex !important;
        gap: 8px !important;
    }

    /* Estilo para las secciones del formulario */
    .form-section {
        margin-bottom: 24px !important;
    }

    /* Estilo para los botones de acción */
    .action-buttons {
        display: flex !important;
        justify-content: flex-end !important;
        gap: 12px !important;
        margin-top: 24px !important;
    }

    /* Estilo para los campos */
    .ant-form-item {
        margin-bottom: 16px !important;
    }

    .ant-form-item-label > label {
        color: #595959 !important;
        font-weight: 500 !important;
    }

    .ant-input,
    .ant-select:not(.ant-select-customize-input) .ant-select-selector,
    .ant-picker,
    .ant-input-number {
        border-radius: 4px !important;
        border: 1px solid #d9d9d9 !important;
    }

        .ant-input:hover,
        .ant-select:not(.ant-select-customize-input) .ant-select-selector:hover,
        .ant-picker:hover,
        .ant-input-number:hover {
            border-color: #c43a3a !important;
        }

        .ant-input:focus,
        .ant-select-focused:not(.ant-select-customize-input) .ant-select-selector,
        .ant-picker-focused,
        .ant-input-number-focused {
            border-color: #c43a3a !important;
            box-shadow: 0 0 0 2px rgba(196, 58, 58, 0.2) !important;
        }

    /* Ajuste visual para el switch */
    .ant-switch-checked {
        background-color: #c43a3a !important;
    }

    /* Estilo para campos requeridos */
    .required-field::after {
        content: '*' !important;
        color: #c43a3a !important;
        margin-left: 4px !important;
    }

    /* Estilo para el campo condicional de chofer */
    .conditional-field {
        margin-top: 12px !important;
        padding-top: 12px !important;
        border-top: 1px dashed #f0f0f0 !important;
    }
</style>

<div class="container">
    <div class="page-title">
        @if (TipoPersonal.ToLower() == "bombero")
        {
            <div>
                <Icon Type="fire" Theme="IconThemeType.Fill" Class="page-title-icon" />
                <span>Registro de Nuevo Bombero</span>
            </div>
        }
        else if (TipoPersonal.ToLower() == "comisiondirectiva")
        {
            <div>
                <Icon Type="reconciliation" Theme="IconThemeType.Fill" Class="page-title-icon" />
                <span>Registro de Nuevo Miembro de Comisión Directiva</span>
            </div>
        }
    </div>

    <Form Model="@bomberoView"
          Layout="FormLayout.Vertical"
          OnFinish="OnFinish"
          OnFinishFailed="OnFinishFailed">
        <div class="card">
            <div class="card-title">Información Personal</div>
            <Row Gutter="24">
                <Col Span="6">
                <div class="profile-photo-container">
                    <div class="photo-preview">
                        @if (ImageUrlPreview != null)
                        {
                            <Avatar Src="@ImageUrlPreview" Alt="Foto de perfil" Size="@("5rem")" />
                        }
                        else
                        {
                            <Avatar Icon="@IconType.Outline.User" Size="@("5rem")" />
                        }
                    </div>

                    <div class="upload-actions">
                        <Button Type="@ButtonType.Primary">
                            <label style="cursor: pointer; margin: 0;">
                                <Icon Type="upload" /> Subir foto
                                <InputFile OnChange="SubirFoto" style="display: none;" accept=".jpg,.jpeg,.png" />
                            </label>
                        </Button>

                        @if (ImageUrlPreview != null)
                        {
                            <Button Type="@ButtonType.Default" OnClick="RemovePhoto" Danger>
                                <Icon Type="delete" /> Eliminar
                            </Button>
                        }
                    </div>
                </div>
                </Col>
                <Col Span="18">
                <Row Gutter="16">
                    <Col Span="12">
                    <FormItem Label="Nombre" Required>
                        <Input @bind-Value="@bomberoView.Nombre" Placeholder="Ingrese el nombre" />
                    </FormItem>
                    </Col>
                    <Col Span="12">
                    <FormItem Label="Apellido" Required>
                        <Input @bind-Value="@bomberoView.Apellido" Placeholder="Ingrese el apellido" />
                    </FormItem>
                    </Col>
                </Row>

                <Row Gutter="16">
                    <Col Span="8">
                    <FormItem Label="DNI" Required>
                        <Input @bind-Value="@bomberoView.Documento" Placeholder="Ingrese el DNI" />
                    </FormItem>
                    </Col>
                    <Col Span="8">
                    <FormItem Label="Fecha de Nacimiento">
                        <DatePicker @bind-Value="@bomberoView.FechaNacimiento"
                                    Picker="@DatePickerType.Date"
                                    Style="width: 100%;"
                                    Placeholder="@("Seleccione fecha")"
                                    AllowClear />
                    </FormItem>
                    </Col>
                    <Col Span="8">
                    <FormItem Label="Lugar de nacimiento">
                        <Input @bind-Value="@bomberoView.LugarNacimiento" Placeholder="Ingrese lugar de nacimiento" />
                    </FormItem>
                    </Col>
                </Row>

                <Row Gutter="16">
                    <Col Span="12">
                    <FormItem Label="Dirección">
                        <Input @bind-Value="@bomberoView.Direccion" Placeholder="Ingrese dirección" />
                    </FormItem>
                    </Col>
                    <Col Span="6">
                    <FormItem Label="Sexo">
                        <EnumSelect TEnum="TipoSexo" @bind-Value="@bomberoView.Sexo" />
                    </FormItem>
                    </Col>
                    <Col Span="6">
                    <FormItem Label="Grupo Sanguíneo">
                        <EnumSelect TEnum="TipoGrupoSanguineo?" @bind-Value="@bomberoView.GrupoSanguineo" AllowClear />
                    </FormItem>
                    </Col>
                </Row>
                </Col>
            </Row>
        </div>

        <div class="card">
            <div class="card-title">Información Profesional</div>
            <Row Gutter="16">
                <Col Span="6">
                <FormItem Label="Número Legajo" Required>
                    <Input @bind-Value="@bomberoView.NumeroLegajo" Placeholder="Ingrese número de legajo" />
                </FormItem>
                </Col>
                <Col Span="6">
                <FormItem Label="Dotación" Required>
                    <EnumSelect TEnum="TipoDotaciones" @bind-Value="@bomberoView.Dotacion" />
                </FormItem>
                </Col>
                <Col Span="6">
                <FormItem Label="Grado">
                    <EnumSelect TEnum="EscalafonJerarquico" @bind-Value="@bomberoView.Grado" AllowClear />
                </FormItem>
                </Col>
                <Col Span="6">
                <FormItem Label="Estado">
                    <EnumSelect TEnum="EstadoBombero" @bind-Value="@bomberoView.Estado" AllowClear />
                </FormItem>
                </Col>
            </Row>

            <Row Gutter="16">
                <Col Span="8">
                <FormItem Label="Fecha de Aceptación">
                    <DatePicker @bind-Value="@bomberoView.FechaAceptacion"
                                Picker="@DatePickerType.Date"
                                Style="width: 100%;"
                                Placeholder="@("Seleccione fecha")"
                                AllowClear />
                </FormItem>
                </Col>
                <Col Span="8">
                <FormItem Label="Número IOMA">
                    <Input @bind-Value="@bomberoView.NumeroIoma" Placeholder="Ingrese número IOMA" />
                </FormItem>
                </Col>
            </Row>

            <Row Gutter="16">
                <Col Span="12">
                <FormItem Label="¿Es chofer?">
                    <Switch @bind-Checked="@bomberoView.EsChofer"></Switch>
                    @if (bomberoView.EsChofer)
                    {
                        <div class="conditional-field">
                            <FormItem Label="Fecha vencimiento del carnet">
                                <DatePicker @bind-Value="@bomberoView.VencimientoRegistro"
                                            Picker="@DatePickerType.Date"
                                            Style="width: 100%;"
                                            Placeholder="@("Seleccione fecha de vencimiento")"
                                            AllowClear />
                            </FormItem>
                        </div>
                    }
                </FormItem>
                </Col>
            </Row>
        </div>

        <div class="card">
            <div class="card-title">Información Adicional</div>
            <Row Gutter="16">
                <Col Span="6">
                <FormItem Label="Altura (cm)">
                    <AntDesign.InputNumber @bind-Value="@bomberoView.Altura" Style="width: 100%;" Placeholder="Ingrese altura" />
                </FormItem>
                </Col>
                <Col Span="6">
                <FormItem Label="Peso (kg)">
                    <AntDesign.InputNumber @bind-Value="@bomberoView.Peso" Style="width: 100%;" Placeholder="Ingrese peso" />
                </FormItem>
                </Col>
                <Col Span="6">
                <FormItem Label="Nivel de estudio">
                    <Input @bind-Value="@bomberoView.NivelEstudios" Placeholder="Ingrese nivel de estudios" />
                </FormItem>
                </Col>
                <Col Span="6">
                <FormItem Label="Profesión">
                    <Input @bind-Value="@bomberoView.Profesion" Placeholder="Ingrese profesión" />
                </FormItem>
                </Col>
            </Row>

            <FormItem Label="Observaciones">
                <TextArea @bind-Value="@bomberoView.Observaciones" Placeholder="Ingrese observaciones" Rows="4" />
            </FormItem>
        </div>

        <div class="card">
            <div class="card-title">Información de Contacto</div>
            <Row Gutter="16">
                <Col Span="6">
                <FormItem Label="Teléfono Celular">
                    <Input @bind-Value="@bomberoView.TelefonoCel" Placeholder="Ingrese teléfono celular" />
                </FormItem>
                </Col>
                <Col Span="6">
                <FormItem Label="Teléfono Fijo">
                    <Input @bind-Value="@bomberoView.TelefonoFijo" Placeholder="Ingrese teléfono fijo" />
                </FormItem>
                </Col>
                <Col Span="6">
                <FormItem Label="Teléfono Laboral">
                    <Input @bind-Value="@bomberoView.TelefonoLaboral" Placeholder="Ingrese teléfono laboral" />
                </FormItem>
                </Col>
                <Col Span="6">
                <FormItem Label="Email">
                    <Input @bind-Value="@bomberoView.Email" Placeholder="Ingrese email" />
                </FormItem>
                </Col>
            </Row>
        </div>

        <div class="action-buttons">
            <Button Type="@ButtonType.Default" OnClick="Cancelar">
                Cancelar
            </Button>
            <Button Type="@ButtonType.Primary" HtmlType="submit" Class="primary-button" OnClick="CrearBombero">
                Registrar Bombero
            </Button>
        </div>
    </Form>
</div>

@code {
    [Parameter] public int? PersonalId { get; set; }
    [Parameter] public string TipoPersonal { get; set; } = null!;


    private BomberoViweModel? bomberoView = null; // No lo inicializamos aquí (ya que lo hacemos en OnInitialized) (Esto por que no se si va a ser bombero o no)

    private ImageViewModel imageViewModel = new();

    private string? ImageUrlPreview => imageViewModel.Base64 != null
        ? $"data:{imageViewModel.TipoImagen};base64,{imageViewModel.Base64}"
        : null;

    private class ImageViewModel
    {
        public string? Base64 { get; set; }
        public string? TipoImagen { get; set; }
        public string? NombreImagen { get; set; }
    }

    private async Task RemovePhoto()
    {
        imageViewModel.Base64 = null;
        imageViewModel.TipoImagen = null;
        imageViewModel.NombreImagen = null;
        await Task.CompletedTask;
    }

    private async void SubirFoto(InputFileChangeEventArgs e)
    {
        string imagenBase64 = await Base64Helper.StreamToBase64(e.File.OpenReadStream());

        imageViewModel.Base64 = imagenBase64;
        imageViewModel.TipoImagen = e.File.ContentType;
        imageViewModel.NombreImagen = e.File.Name;

        StateHasChanged();
        await message.SuccessAsync("Foto subida correctamente.");
    }

    public Task Cancelar()
    {
        navigationManager.NavigateTo($"/bomberos", true);
        return Task.CompletedTask;
    }

    public async Task CrearBombero()
    {
        try
        {
            if (bomberoView.NumeroLegajo == 0)
            {
                await message.WarningAsync("El número de legajo no puede ser cero.");
                return;
            }

            // Preparar el objeto Bombero para enviarlo al servicio
            Bombero bombero = new Bombero()
            {
                FechaNacimiento = bomberoView.FechaNacimiento,
                Sexo = bomberoView.Sexo,
                Nombre = bomberoView.Nombre,
                Apellido = bomberoView.Apellido,
                Documento = bomberoView.Documento,
                NumeroLegajo = bomberoView.NumeroLegajo,
                NumeroIoma = bomberoView.NumeroIoma,
                LugarNacimiento = bomberoView.LugarNacimiento,
                Grado = bomberoView.Grado,
                Dotacion = bomberoView.Dotacion,
                GrupoSanguineo = bomberoView.GrupoSanguineo,
                Altura = bomberoView.Altura,
                Peso = bomberoView.Peso,
                Estado = bomberoView.Estado,
                Chofer = bomberoView.EsChofer,
                VencimientoRegistro = bomberoView.VencimientoRegistro,
                Direccion = bomberoView.Direccion,
                Observaciones = bomberoView.Observaciones,
                Profesion = bomberoView.Profesion,
                NivelEstudios = bomberoView.NivelEstudios,
                FechaAceptacion = bomberoView.FechaAceptacion,
                Contacto = new Contacto
                {
                    TelefonoCel = bomberoView.TelefonoCel,
                    TelefonoFijo = bomberoView.TelefonoFijo,
                    TelefonoLaboral = bomberoView.TelefonoLaboral,
                    Email = bomberoView.Email
                }
            };

            // Preparar la foto si existe

            Imagen_Personal? foto = null;

            if (imageViewModel.Base64 != null && imageViewModel.TipoImagen != null && imageViewModel.NombreImagen != null)
            {
                foto = new Imagen_Personal
                {
                    NombreImagen = imageViewModel.NombreImagen,
                    TipoImagen = imageViewModel.TipoImagen,
                    Base64Imagen = imageViewModel.Base64
                };
            }

            // Creamos el bombero
            await BomberoService.CrearBombero(bombero, foto);

            bomberoView = new BomberoViweModel();
            StateHasChanged();
            message.Success("Se agregó el bombero.");
            navigationManager.NavigateTo($"/bomberos", true);
        }
        catch (Exception ex)
        {
            if (ex.Message.Contains("legajo", StringComparison.OrdinalIgnoreCase))
            {
                await message.WarningAsync(ex.Message);
            }
            else
            {
                await message.ErrorAsync("Ocurrió un error al crear el bombero.");
                await message.ErrorAsync($"Error: {ex.Message}");
            }
        }
    }

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{JsonSerializer.Serialize(bomberoView)}");
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(bomberoView)}");
    }
}