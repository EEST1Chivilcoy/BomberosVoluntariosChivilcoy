@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@page "/bomberos/editar/{BomberoId:int?}"
@using Vista.Services
@inject IBomberoService BomberoService;

@if (existe)
{
    <label>Nombre:</label>
    <input type="text" @bind="bomberoView.Nombre" />
    <br>
    <label>Apellido:</label>
    <input type="text" @bind="bomberoView.Apellido" />
    <br>
    <label>Dotacion:</label>
    <input type="text" @bind="bomberoView.Dotacion" />
    <br>
    <label>Brigada:</label>
    <br />
    <InputFile OnChange="SubirFoto" />
    <br />
    <input type="text" @bind="bomberoView.Brigada" />
    <br>
    <label>DNI:</label>
    <input type="text" @bind="bomberoView.Documento" />
    <br>
    <label>Fecha De Nacimiento:</label>
    <input type="text" @bind="bomberoView.FechaNacimiento" />
    <br>
    <label>Numero De Legajo:</label>
    <input type="number" @bind="bomberoView.NumeroLegajo" />
    <br>
    <label>Fecha De Aceptacion:</label>
    <input type="date" @bind="bomberoView.FechaAceptacion" />
    <br>
    <label> Direccion:</label>
    <input type="text" @bind="bomberoView.Direccion" />
    <br>
    <label>Nº De IOMA:</label>
    <input type="text" @bind="bomberoView.NumeroIoma" />
    <br>
    <label>Lugar De Nacimiento:</label>
    <input type="text" @bind="bomberoView.LugarNacimiento" />
    <br>
    <label>Grupo Sanguineo:</label>
    <input type="text" @bind="bomberoView.GrupoSanguineo" />
    <br>
    <label>Altura (cm):</label>
    <input type="text" @bind="bomberoView.Altura" />
    <br>
    <label>Peso:</label>
    <input type="text" @bind="bomberoView.Peso" />
    <br>
    <label>Observaciones:</label>
    <input type="text" @bind="bomberoView.Observaciones" />
    <br>
    <label>Profesion:</label>
    <input type="text" @bind="bomberoView.Profesion" />
    <br>
    <label>Nivel De Estudios:</label>
    <input type="text" @bind="bomberoView.NivelEstudios" />
    <br>
    <label>Resolucion 1:</label>
    <input type="text" @bind="bomberoView.Resolucion1" />
    <br>
    <label>Resolucion 2:</label>
    <input type="text" @bind="bomberoView.Resolucion2" />
    <br>
    <label>Resolucion 3:</label>
    <input type="text" @bind="bomberoView.Resolucion3" />
    <br>
    <label>Resolucion 4:</label>
    <input type="text" @bind="bomberoView.Resolucion4" />
    <br>
    <label>Resolucion 5:</label>
    <input type="text" @bind="bomberoView.Resolucion5" />
    <br>
    <label>Resolucion 6:</label>
    <input type="text" @bind="bomberoView.Resolucion6" />
    <br>
    <input type="checkbox" @bind="bomberoView.Chofer" />
    if (bomberoView.Chofer)
    {
        <label>Es chofer</label>
        <input type="date" @bind="bomberoView.VencimientoRegistro" />
    }
    if (!bomberoView.Chofer)
    {
        <label>No es chofer</label>
    }
    <br>
    <select @bind="bomberoView.Sexo">
        <option value="@TipoSexo.Hombre">Masculino</option>
        <option value="@TipoSexo.Mujer">Femenino</option>
        <option value="@TipoSexo.Otro">Otro</option>
    </select>

    <h5>Contacto</h5>

    <label>Telefono Celular:</label>
    <input type="text" @bind="contactoView.TelefonoCel" />
    <br>
    <label>Telefono Fijo:</label>
    <input type="text" @bind="contactoView.TelefonoFijo" />
    <br>
    <label>Telefono laboral:</label>
    <input type="text" @bind="contactoView.TelefonoLaboral" />
    <br>
    <label>Email:</label>
    <input type="text" @bind="contactoView.Email" />
    <br>
    <button @onclick="EditarBombero">Editar bombero</button>
}
else
{
    <h1> Error 404</h1>
}

@code {
    [Parameter]
    public int? BomberoId { get; set; }
    private Bombero bombero = new Bombero();
    public ImagenViewModel imagenView { get; set; } = new();
    public BomberosViewModel bomberoView { get; set; } = new();
    public ContactoViewModel contactoView { get; set; } = new();
    public Bombero[]? bomberos;
    public bool existe;

    public class BomberosViewModel
    {
        public DateTime FechaNacimiento { get; set; }
        public DateTime FechaAceptacion { get; set; }
        [Required, StringLength(255)]
        public string Nombre { get; set; }
        [Required, StringLength(255)]
        public string Apellido { get; set; }
        public EstadoBombero Estado { get; set; }
        public int NumeroLegajo { get; set; }
        public EscalafonJerarquico Grado { get; set; }
        [Required, StringLength(255)]
        public TipoDotaciones Dotacion { get; set; }
        public TipoGrupoSanguineo GrupoSanguineo { get; set; }
        [Required]
        public int Altura { get; set; }
        [Required]
        public int Peso { get; set; }
        [Required, StringLength(255)]
        public string Brigada { get; set; }
        public bool Chofer { get; set; }
        public DateTime? VencimientoRegistro { get; set; }
        public TipoSexo Sexo { get; set; }
        [Required, StringLength(255)]
        public string Direccion { get; set; }
        [Required, StringLength(255)]
        public string LugarNacimiento { get; set; }
        [Required, StringLength(255)]
        public string Documento { get; set; }
        [Required, StringLength(255)]
        public string Observaciones { get; set; }
        [Required, StringLength(255)]
        public string Profesion { get; set; }
        [Required, StringLength(255)]
        public string NivelEstudios { get; set; }
        [Required, StringLength(255)]
        public string NumeroIoma { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion1 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion2 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion3 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion4 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion5 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion6 { get; set; }
    }
    public class ContactoViewModel
    {
        [Required, StringLength(255)]
        public string? TelefonoCel { get; set; }
        [Required, StringLength(255)]
        public string? TelefonoLaboral { get; set; }
        [Required, StringLength(255)]
        public string? TelefonoFijo { get; set; }
        [Required, StringLength(255)]
        public string? Email { get; set; }
    }
    public class ImagenViewModel
    {
        public string Base64 { get; set; }
        [Required, StringLength(255)]
        public string TipoImagen { get; set; }
        [Required, StringLength(255)]
        public string Nombre { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        using var db = DbFactory.CreateDbContext();

        Bombero? bombero = await db.Bomberos.Where(b => b.PersonaId == BomberoId).Include(b => b.Contacto).SingleOrDefaultAsync();

        if (bombero is not null)
        {
            bomberoView.Chofer = bombero.Chofer;
            bomberoView.Nombre = bombero.Nombre;
            bomberoView.NumeroLegajo = bombero.NumeroLegajo;
            bomberoView.NumeroIoma = bombero.NumeroIoma;
            bomberoView.Profesion = bombero.Profesion;
            bomberoView.Apellido = bombero.Apellido;
            bomberoView.Direccion = bombero.Direccion;
            bomberoView.GrupoSanguineo = bombero.GrupoSanguineo;
            bomberoView.Altura = bombero.Altura;
            bomberoView.Peso = bombero.Peso;
            bomberoView.Grado = bombero.Grado;
            bomberoView.Documento = bombero.Documento;
            bomberoView.Dotacion = bombero.Dotacion;
            bomberoView.Estado = bombero.Estado;
            bomberoView.FechaAceptacion = bombero.FechaAceptacion;
            bomberoView.FechaNacimiento = bombero.FechaNacimiento;
            bomberoView.NivelEstudios = bombero.NivelEstudios;
            bomberoView.Resolucion1 = bombero.Resolucion1;
            bomberoView.Resolucion2 = bombero.Resolucion2;
            bomberoView.Resolucion3 = bombero.Resolucion3;
            bomberoView.Resolucion4 = bombero.Resolucion4;
            bomberoView.Resolucion5 = bombero.Resolucion5;
            bomberoView.Resolucion6 = bombero.Resolucion6;
            bomberoView.Sexo = bombero.Sexo;
            bomberoView.VencimientoRegistro = bombero.VencimientoRegistro;
            bomberoView.LugarNacimiento = bombero.LugarNacimiento;
            bomberoView.Observaciones = bombero.Observaciones;

            Contacto? contacto = await db.Contactos.Where(c => c.ContactoId == bombero.Contacto.ContactoId).SingleOrDefaultAsync();

            if (contacto is not null)
            {
                contactoView.Email = contacto.Email;
                contactoView.TelefonoFijo = contacto.TelefonoFijo;
                contactoView.TelefonoCel = contacto.TelefonoCel;
                contactoView.TelefonoLaboral = contacto.TelefonoLaboral;
            }

            Imagen? imagen = await db.ImagenesBomberos.Where(i => i.ImagenId == bombero.ImagenId).SingleOrDefaultAsync();

            if (imagen is not null)
            {
                imagenView.Base64 = imagen.Base64Imagen;
                imagenView.Nombre = imagen.NombreImagen;
                imagenView.TipoImagen = imagen.TipoImagen;
            }
            existe = true;
        }
        else if (bombero is null)
        {
            existe = false;
        }
    }


    public async Task EditarBombero()
    {
        if (BomberoId.HasValue)
        {
            bombero.PersonaId = BomberoId.Value;  // Asegurar que PersonaId está configurado

            bool result = await BomberoService.EditarBombero(bombero);
            if (result)
            {
                navigationManager.NavigateTo("/bomberos");
            }
            else
            {
                Console.WriteLine("No se pudo editar el bombero.");
            }
        }
        else
        {
            Console.WriteLine("BomberoId no es válido.");
        }
    }

    private async Task SubirFoto(InputFileChangeEventArgs e)
    {
        imagenView.Base64 = await Base64Helper.StreamToBase64(e.File.OpenReadStream());
        imagenView.TipoImagen = e.File.ContentType;
        imagenView.Nombre = e.File.Name;
        StateHasChanged();
    }
}
