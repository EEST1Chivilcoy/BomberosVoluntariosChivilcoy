@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@page "/bomberos/AgregarBrigada"

<h3>Crear una brigada</h3>

<label>Ingrese el nombre de la brigada :</label>
<input @bind="BrigadaNueva.Nombre" type="text" />

<br />
<br />
<br />
<button @onclick="CrearBrigada">Crear</button>
<br />
<br />
<br />
<br />
<br />
<input type="text" @bind="BrigadaEliminar">Eliminar brigada</input>
<button @onclick="EliminarBrigada">Eliminar</button>


<h3>Lista actual de brigadas:</h3>
<br />
@if (brigadas is not null)
{
    @foreach (Brigada b in brigadas)
    {
        <label>@b.Nombre   <button @onclick="@(() => { navigationManager.NavigateTo($"/bomberos/AgregarBrigada{b.BrigadaId}"); })"><i class="fas fa-eye"></i></button></label>
        <br>
    }
}

@code {
    private Brigada BrigadaNueva { get; set; } = new();
    private Brigada[]? brigadas;
    public string BrigadaEliminar { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var db = await DbFactory.CreateDbContextAsync();

        brigadas = await db.Brigadas.ToArrayAsync();
    }

    public async void CrearBrigada()
    {
        if (!String.IsNullOrWhiteSpace(BrigadaNueva.Nombre))
        {
            using var db = await DbFactory.CreateDbContextAsync();

            Brigada brigada = new()
            {
                Nombre = BrigadaNueva.Nombre
            };

            await db.Brigadas.AddAsync(brigada);
            await db.SaveChangesAsync();
            BrigadaNueva.Nombre = string.Empty;
            brigadas = await db.Brigadas.ToArrayAsync();
            StateHasChanged();
        }
    }
    //eliminar una brigada segun el nombre
    public async void EliminarBrigada()
    {

        using var context = DbFactory.CreateDbContext();
        Brigada? brigada = await context.Brigadas.Where(b => b.Nombre == BrigadaEliminar).SingleOrDefaultAsync();
        if (brigada is not null)
        {
            context.Remove(brigada);
        }
        await context.SaveChangesAsync();
        BrigadaEliminar = string.Empty;
        brigadas = await context.Brigadas.ToArrayAsync();
        StateHasChanged();
    }
}
