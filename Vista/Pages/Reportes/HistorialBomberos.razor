@implements IDisposable
@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@inject IJSRuntime JSRuntime;

@page "/Reportes/HistorialBomberos"
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel
@using AntDesign.TableModels
@using System.Text.Json;
@using Vista.Pages.Bomberos;
@using Vista.Data.Models.Grupos.Brigadas;
@using Vista.Data.Models.Personas.Personal
@using Vista.Data.Models.Personas.Personal.Componentes

<style>
    .historial-bomberos-abm {
        --abm-primary-color: #A63333;
        --abm-primary-dark: #732D2D;
        --abm-success-color: #4CAF50;
        --abm-success-dark: #438E46;
        --abm-warning-color: #F57F17;
        --abm-warning-light: #FFF8E1;
        --abm-error-color: #C62828;
        --abm-error-light: #FFEBEE;
        --abm-approved-color: #2E7D32;
        --abm-approved-light: #E6F7E9;
        --abm-gold-color: #FFD700;
    }

    .historial-bomberos-abm .container {
        padding: 32px !important;
        min-height: 100vh !important;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%) !important;
    }

    .historial-bomberos-abm .main-card {
        background: rgba(255, 255, 255, 0.97) !important;
        backdrop-filter: blur(12px) !important;
        box-shadow: 0 12px 48px rgba(166, 51, 51, 0.13), 0 6px 24px rgba(0, 0, 0, 0.07) !important;
        border: 1px solid rgba(255, 255, 255, 0.25) !important;
        overflow: hidden !important;
        margin: 2em auto;
        max-width: 1800px;
        min-width: 600px;
    }

    .historial-bomberos-abm .main-card :deep(.ant-card-body) {
        padding: 0 !important;
    }

    .historial-bomberos-abm .header-section {
        background: linear-gradient(135deg, #A63333 0%, #732D2D 100%) !important;
        color: white !important;
        padding: 48px 36px !important;
        position: relative !important;
        overflow: hidden !important;
    }

    .historial-bomberos-abm .header-section .lava-bubbles {
        position: absolute;
        top: 0; left: 0; width: 100%; height: 100%;
        pointer-events: none;
        z-index: 1;
        overflow: hidden;
    }
    .historial-bomberos-abm .header-section .lava-bubble {
        position: absolute;
        border-radius: 50%;
        opacity: 0.45;
        background: radial-gradient(circle at 60% 40%, #FFD54F 0%, #F9A825 80%, transparent 100%);
        animation: lava-bubble-move 8s linear infinite;
        filter: blur(2px);
        mix-blend-mode: lighten;
    }
    .historial-bomberos-abm .header-section .lava-bubble.b1 {
        left: 10%; width: 90px; height: 90px; bottom: -90px;
        animation-delay: 0s;
        animation-duration: 7.5s;
    }
    .historial-bomberos-abm .header-section .lava-bubble.b2 {
        left: 35%; width: 140px; height: 140px; bottom: -140px;
        animation-delay: 2s;
        animation-duration: 9s;
        background: radial-gradient(circle at 60% 40%, #FFEB3B 0%, #FFD54F 80%, transparent 100%);
    }
    .historial-bomberos-abm .header-section .lava-bubble.b3 {
        left: 65%; width: 80px; height: 80px; bottom: -80px;
        animation-delay: 1.5s;
        animation-duration: 6.5s;
        background: radial-gradient(circle at 60% 40%, #FFFDE7 0%, #FFD54F 80%, transparent 100%);
    }
    .historial-bomberos-abm .header-section .lava-bubble.b4 {
        left: 80%; width: 110px; height: 110px; bottom: -110px;
        animation-delay: 3.2s;
        animation-duration: 8.5s;
        background: radial-gradient(circle at 60% 40%, #F9A825 0%, #FFD54F 80%, transparent 100%);
    }
    .historial-bomberos-abm .header-section .lava-bubble.b5 {
        left: 55%; width: 70px; height: 70px; bottom: -70px;
        animation-delay: 5s;
        animation-duration: 7.2s;
        background: radial-gradient(circle at 60% 40%, #FFFDE7 0%, #F9A825 80%, transparent 100%);
    }

    @@keyframes lava-bubble-move {
        0% {
            transform: translateY(0) scale(1) rotate(0deg);
            opacity: 0.45;
        }
        60% {
            opacity: 0.7;
            filter: blur(2.5px);
        }
        80% {
            transform: translateY(-320px) scale(1.25) rotate(10deg);
            opacity: 0.6;
        }
        100% {
            transform: translateY(-420px) scale(1.05) rotate(-8deg);
            opacity: 0;
        }
    }

    .historial-bomberos-abm .main-title {
        font-family: 'Poppins', 'Fjalla One', sans-serif !important;
        font-size: 3rem !important;
        font-weight: 800 !important;
        letter-spacing: 2px !important;
        margin: 0 !important;
        display: flex !important;
        align-items: center !important;
        gap: 18px !important;
        animation: text-glow 2.5s ease-in-out infinite alternate !important;
        position: relative !important;
        z-index: 2 !important;
    }

    .historial-bomberos-abm .title-icon {
        color: #FFD54F !important;
        font-size: 2.8rem !important;
        filter: drop-shadow(0 2px 8px rgba(0, 0, 0, 0.25)) !important;
    }

    @@keyframes text-glow {
        0%, 100% { text-shadow: 0 0 8px #F9A825, 0 0 18px #FFD54F; }
        50% { text-shadow: 0 0 22px #F9A825, 0 0 32px #FFD54F; }
    }

    .historial-bomberos-abm .actions-row {
        display: flex !important;
        justify-content: flex-end !important;
        gap: 24px !important;
        margin-top: -3.5em;
        margin-bottom: 2em;
    }

    .historial-bomberos-abm .modern-button {
        height: 52px !important;
        border-radius: 12px !important;
        font-size: 1.2rem !important;
        font-weight: 700 !important;
        display: flex !important;
        align-items: center !important;
        gap: 12px !important;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
        position: relative !important;
        overflow: hidden !important;
        background: linear-gradient(135deg, var(--abm-success-color) 0%, var(--abm-success-dark) 100%) !important;
        border: none !important;
        color: white !important;
        box-shadow: 0 6px 18px rgba(76, 175, 80, 0.32) !important;
        padding: 0 32px !important;
    }

    .historial-bomberos-abm .modern-button:hover {
        transform: translateY(-2px) !important;
        box-shadow: 0 10px 32px rgba(76, 175, 80, 0.45) !important;
    }

    .historial-bomberos-abm .table-container {
        padding: 0 !important;
        overflow: hidden !important;
        margin-top: 0 !important;
    }

    .historial-bomberos-abm .ant-table-wrapper {
        margin-top: -5px !important;
    }

    .historial-bomberos-abm .ant-table {
        margin: 0 !important;
        border-top: none !important;
    }

    .ant-table-cell {
        min-width: 120px!important;
        font-size: 1.1rem !important;
        padding: 18px !important;
    }
    .ant-table-content{
        min-width: 400px !important;
    }
    .ant-table{
        min-width: min-content;
        font-size: 1.1rem !important;
    }   
    @@media (max-width: 960px){
        .historial-bomberos-abm .container {
            padding: 12px !important;
        }
        .historial-bomberos-abm .main-card {
            max-width: 99vw;
            min-width: 0;
        }
        .historial-bomberos-abm .header-section {
            padding: 24px 12px !important;
        }
        .historial-bomberos-abm .main-title {
            font-size: 2rem !important;
        }
        .ant-table-row, .ant-table-row-level-0 {
            display: flex !important;
            flex-direction: column !important;
        }
        .ant-table.ant-table-bordered > .ant-table-title{
            height: 15em !important;
        }
        #ant-blazor-df7d6d62-e78b-479a-b209-8325c3889500{
            width: 100%!important;
        }
        #ant-blazor-409acdf0-1470-4ab2-9ad6-e328b6913485{
            align-items: flex-start!important;
        }
        .notificacion{
            margin-top: 15px!important;
        }
        .inpt-cont-inline {
            flex-direction: column !important;
            gap: 0 !important;
        }
    }
    .template {
        display: none; 
    }

    .historial-bomberos-abm .ant-table-thead > tr > th {
        background: var(--abm-primary-color) !important;
        color: #fff !important;
        font-weight: 600 !important;
        border: none !important;
        padding: 16px !important;
    }

    .historial-bomberos-abm :deep(.ant-table-tbody > tr:hover > td) {
        background-color: inherit !important;
        cursor: default !important;
        transform: none !important;
        transition: none !important;
    }
</style>

<div class="historial-bomberos-abm">
    <div class="container fade-in">
        <Card Class="main-card">
            <div class="header-section">
                <div class="lava-bubbles">
                    <div class="lava-bubble b1"></div>
                    <div class="lava-bubble b2"></div>
                    <div class="lava-bubble b3"></div>
                    <div class="lava-bubble b4"></div>
                    <div class="lava-bubble b5"></div>
                </div>
                <h1 class="main-title">
                    <Icon Type="team" Class="title-icon" />
                    HISTORIAL DE BOMBEROS
                </h1>
            </div>
            <div class="table-container">
                <Table DataSource="BomberosVM" PageSize="6" Responsive Bordered Style="min-width: 400px;">
                    <ColumnDefinitions>
                        <PropertyColumn Property="c=>c.NumeroLegajo" Title="Numero de Legajo" Sortable></PropertyColumn>
                        <PropertyColumn Property="c=>c.NombreYApellido" Title="Nombre Y Apellido" Sortable></PropertyColumn>
                        <PropertyColumn Property="c=>c.Grado"
                                        SortDirections="new[] { SortDirection.Descending }"
                                        Filters="EscalafonJerarquicoFilter"
                                        OnFilter="((value,name)=>Enum.GetName(typeof(EscalafonJerarquico), name).StartsWith(Enum.GetName(typeof(EscalafonJerarquico), value)))" />
                        <PropertyColumn Property="c=>c.TelefonoCel" Title="Telefono Cel" Sortable></PropertyColumn>
                        <PropertyColumn Property="c=>c.TelefonoFijo" Title="Telefono Fijo" Sortable></PropertyColumn>
                        <PropertyColumn Property="c=>c.TelefonoLaboral" Title="Telefono Laboral" Sortable></PropertyColumn>
                        <PropertyColumn Property="c=>c.Email" Sortable></PropertyColumn>
                    </ColumnDefinitions>
                </Table>
                <div class="actions-row">
                    <Button Class="modern-button" OnClick="@(async () => await GenerarYMostrarPDF())" Icon="printer">Imprimir</Button>
                    <Button Class="modern-button" OnClick="@(async () => await GuardarEnExcel())" Icon="file-excel">Exportar en Excel</Button>
                </div>
            </div>
        </Card>
    </div>
</div>

@code {

    private Brigada[]? brigadas;

    BomberosDbContext Context;

    private TableFilter<EscalafonJerarquico>[] EscalafonJerarquicoFilter;

    IEnumerable<Bombero> dataSource;
    IEnumerable<Bombero> selectedRows;
    ITable table;

    static DateTime hasta = DateTime.Now;
    static DateTime desde = hasta.AddMonths(-1);

    List<Vista.Data.ViewModels.Personal.BomberoViweModel>? BomberosVM = new();

    int _pageIndex = 1;
    int _pageSize = 6;
    int _total = 0;

    //Importar a PDF
    private async Task GenerarYMostrarPDF()
    {
        ExportarAPDF crear = new ExportarAPDF();
        var datos = BomberosVM.Select(b => new
        {
            b.NumeroLegajo,
            b.Nombre,
            b.Apellido,
            b.Grado,
            TelefonoCel = b.TelefonoCel,
            TelefonoFijo = b.TelefonoFijo,
            TelefonoLaboral = b.TelefonoLaboral,
            Email = b.Email
        });
        byte[] pdfBytes = crear.CrearPDF(datos);
        await JSRuntime.InvokeVoidAsync("abrirPDF", Convert.ToBase64String(pdfBytes));
    }

    //Importar a Excel
    private async Task GuardarEnExcel()
    {
        CrearExcel crear = new CrearExcel();
        var datos = BomberosVM.Select(b => new
        {
            b.NumeroLegajo,
            b.Nombre,
            b.Apellido,
            b.Grado,
            TelefonoCel = b.TelefonoCel,
            b.TelefonoFijo,
            b.TelefonoLaboral,
            b.Email
        });
        string ExcNombre = "DatosBomberos.xlsx";
        byte[] fileBytes = crear.ExportarEnExcel(datos);
        await JSRuntime.InvokeVoidAsync("guardarExcel", ExcNombre, Convert.ToBase64String(fileBytes), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet");
    }

    private async Task cargarbomberosVM()
    {
        var bomberos = await Context.Bomberos.ToListAsync();
        foreach (var a in bomberos)
        {
            var contacto = await Context.Contactos.Where(c => c.PersonalId == a.PersonaId).SingleOrDefaultAsync();
            Vista.Data.ViewModels.Personal.BomberoViweModel Bm = new()
            {
                NumeroLegajo = a.NumeroLegajo,
                Nombre = a.Nombre,
                Apellido = a.Apellido,
                Grado = a.Grado,
                TelefonoCel = contacto.TelefonoCel,
                TelefonoFijo = contacto.TelefonoFijo,
                TelefonoLaboral = contacto.TelefonoLaboral,
                Email = contacto.Email
            };
            BomberosVM.Add(Bm);
        }
    }

    private async Task Init()
    {
        Context = DbFactory.CreateDbContext();
        await cargarbomberosVM();


        EscalafonJerarquicoFilter = new TableFilter<EscalafonJerarquico>[Enum.GetValues(typeof(EscalafonJerarquico)).Length];
        int i = 0;
        foreach (EscalafonJerarquico value in Enum.GetValues(typeof(EscalafonJerarquico)))
        {
            EscalafonJerarquicoFilter[i] = new() { Text = Enum.GetName(typeof(EscalafonJerarquico), value), Value = value };
            i++;
        }

    }

    protected override async Task OnInitializedAsync()
    {
        await Init();
    }

    public void Dispose()
    {
        Context?.Dispose();
    }

}