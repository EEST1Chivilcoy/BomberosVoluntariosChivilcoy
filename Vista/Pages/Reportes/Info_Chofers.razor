@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@page "/Reportes/Reportes_Choferes"
@using AntDesign.TableModels;
@using System.Text.Json;
<Table DataSource="data" OnChange="OnChange" TItem="Data">
    <TitleTemplate>
        <GridRow>
            <GridCol Span="6">
                <Title Level="4">Choferes</Title>
            </GridCol>
           
        </GridRow>
    </TitleTemplate>
    <ColumnDefinitions>
        <PropertyColumn Property="c=>c.Nro_legajo"
                        DefaultSortOrder="@SortDirection.Descending"
                        SorterCompare="@((a,b)=> a.Length - b.Length)"
                        SortDirections="new[] { SortDirection.Descending }"
                        OnFilter="((value,nro_legajo)=>nro_legajo.StartsWith(value))" /> 

        <PropertyColumn Property="c=>c.Nombre"
                        SorterCompare="@((a,b)=> a.Length - b.Length)"
                        SortDirections="new[] { SortDirection.Descending }"
                        OnFilter="((value,nombre)=>nombre.StartsWith(value))" />

        <PropertyColumn Property="c=>c.Apellido"
                        SorterCompare="@((a,b)=> a.Length - b.Length)"
                        SortDirections="new[] { SortDirection.Descending }"                       
                        OnFilter="((value,apellido)=>apellido.StartsWith(value))" /> 
                        
        <PropertyColumn Property="c=>c.Telefonos" />
        <PropertyColumn Property="c=>c.Particular" />
    </ColumnDefinitions>
</Table>

@code {
    string searchString;
    IEnumerable<Data> dataSource;
    ITable _table;

    class Data
    {
        public Data(string nombres,string apellidos, string legajo, string telefono,string particular )
        {
            Nombre = nombres;
            Apellido = apellidos;
            Nro_legajo= legajo;
            telefonos = telefono;
            Particular = particular;
        }

        public string Nombre { get; set; }
        public string Apellido { get; set; }
        public string Nro_legajo { get; set; }
        public string telefonos { get; set; }
        public string Particular { get; set; }
    }

    Data[] data =
    {
        new("John"," Brown","1","2346123456","1234"),
        new("Jim","Green","2", "2346987654","12345"),
        new("Joe"," Black", "3","2346192837","123456"),
        new("Jim","Red","4","2346564738","1234567"),
    };

    public TableFilter<string>[] Filtrodenombres = new TableFilter<string>[] {
        new() { Text = "Joe", Value = "Joe" },
        new() { Text = "Jim", Value = "Jim" },
    };

    
    void OnChange(QueryModel<Data> query)
    {
        Console.WriteLine(JsonSerializer.Serialize(query));

        dataSource = query.ExecuteQuery(data.AsQueryable())
            .Where(x => string.IsNullOrWhiteSpace(searchString) || x.Nombre.Contains(searchString, StringComparison.OrdinalIgnoreCase));
    }

    void OnRowClick(RowData<Data> row)
    {
        Console.WriteLine($"row {row.Data.Nombre} was clicked");
    }
}