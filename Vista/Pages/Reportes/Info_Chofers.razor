@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@inject IMessageService _message
@page "/fire-force/Reportes/Reportes_Choferes"
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel
@using AntDesign.TableModels
@using System.Text.Json;
@using Vista.Data.Models.Personas.Personal
@using Vista.Data.Models.Personas.Personal.Componentes

<style>

    .info-chofers-abm {
        --abm-primary-color: #A63333;
        --abm-primary-dark: #732D2D;
        --abm-success-color: #4CAF50;
        --abm-success-dark: #438E46;
        --abm-warning-color: #F57F17;
        --abm-warning-light: #FFF8E1;
        --abm-error-color: #C62828;
        --abm-error-light: #FFEBEE;
        --abm-approved-color: #2E7D32;
        --abm-approved-light: #E6F7E9;
        --abm-gold-color: #FFD700;
    }

    .info-chofers-abm .container {
        padding: 12px !important;
        min-height: 100vh !important;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%) !important;
    }

    .info-chofers-abm .main-card {
        background: rgba(255, 255, 255, 0.95) !important;
        backdrop-filter: blur(10px) !important;
        border-radius: 16px !important;
        box-shadow: 0 8px 32px rgba(166, 51, 51, 0.1), 0 4px 16px rgba(0, 0, 0, 0.05) !important;
        border: 1px solid rgba(255, 255, 255, 0.2) !important;
        overflow: hidden !important;
    }

    .info-chofers-abm .header-section {
        background: linear-gradient(135deg, #A63333 0%, #732D2D 100%) !important;
        color: white !important;
        padding: 28px !important;
        position: relative !important;
        overflow: hidden !important;
    }

    .info-chofers-abm .header-section .lava-bubbles {
        position: absolute;
        top: 0; left: 0; width: 100%; height: 100%;
        pointer-events: none;
        z-index: 1;
        overflow: hidden;
    }

    .info-chofers-abm .header-section .lava-bubble {
        position: absolute;
        border-radius: 50%;
        opacity: 0.45;
        background: radial-gradient(circle at 60% 40%, #FFD54F 0%, #F9A825 80%, transparent 100%);
        animation: lava-bubble-move 8s linear infinite;
        filter: blur(1.5px);
        mix-blend-mode: lighten;
    }

    .info-chofers-abm .header-section .lava-bubble.b1 {
        left: 10%; width: 60px; height: 60px; bottom: -70px;
        animation-delay: 0s; animation-duration: 7.5s;
    }

    .info-chofers-abm .header-section .lava-bubble.b2 {
        left: 35%; width: 90px; height: 90px; bottom: -100px;
        animation-delay: 2s; animation-duration: 9s;
        background: radial-gradient(circle at 60% 40%, #FFEB3B 0%, #FFD54F 80%, transparent 100%);
    }

    .info-chofers-abm .header-section .lava-bubble.b3 {
        left: 65%; width: 50px; height: 50px; bottom: -60px;
        animation-delay: 1.5s; animation-duration: 6.5s;
        background: radial-gradient(circle at 60% 40%, #FFFDE7 0%, #FFD54F 80%, transparent 100%);
    }

    .info-chofers-abm .header-section .lava-bubble.b4 {
        left: 80%; width: 70px; height: 70px; bottom: -80px;
        animation-delay: 3.2s; animation-duration: 8.5s;
        background: radial-gradient(circle at 60% 40%, #F9A825 0%, #FFD54F 80%, transparent 100%);
    }

    .info-chofers-abm .header-section .lava-bubble.b5 {
        left: 55%; width: 40px; height: 40px; bottom: -50px;
        animation-delay: 5s; animation-duration: 7.2s;
        background: radial-gradient(circle at 60% 40%, #FFFDE7 0%, #F9A825 80%, transparent 100%);
    }

    @@keyframes lava-bubble-move {
        0% { transform: translateY(0) scale(1) rotate(0deg); opacity: 0.45; }
        60% { opacity: 0.7; filter: blur(2.5px); }
        80% { transform: translateY(-220px) scale(1.15) rotate(10deg); opacity: 0.6; }
        100% { transform: translateY(-320px) scale(0.95) rotate(-8deg); opacity: 0; }
    }

    .info-chofers-abm .main-title {
        font-family: 'Poppins', 'Fjalla One', sans-serif !important;
        font-size: 2.2rem !important;
        font-weight: 700 !important;
        letter-spacing: 1px !important;
        margin: 0 !important;
        display: flex !important;
        align-items: center !important;
        gap: 12px !important;
        animation: text-glow 2.5s ease-in-out infinite alternate !important;
        position: relative !important;
        z-index: 2 !important;
    }

    .info-chofers-abm .title-container {
        position: relative !important;
        z-index: 2 !important;
        margin-bottom: 20px !important;
    }

    .info-chofers-abm .filters-section {
        position: relative !important;
        z-index: 2 !important;
        display: grid !important;
        grid-template-columns: 1fr !important;
        gap: 16px !important;
    }

    .info-chofers-abm .filter-row {
        display: grid !important;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)) !important;
        gap: 16px !important;
        align-items: end !important;
    }

    .info-chofers-abm .filter-group {
        display: flex !important;
        flex-direction: column !important;
        gap: 8px !important;
    }

    .info-chofers-abm .filter-label {
        font-weight: 600 !important;
        color: rgba(255, 255, 255, 0.9) !important;
        font-size: 0.9rem !important;
        text-transform: uppercase !important;
        letter-spacing: 0.5px !important;
    }

    .info-chofers-abm .actions-row {
        display: grid !important;
        grid-template-columns: 1fr auto auto !important;
        gap: 16px !important;
        align-items: center !important;
    }

    .info-chofers-abm .search-container {
        min-width: 0 !important;
    }

    .info-chofers-abm .modern-button {
        height: 40px !important;
        border-radius: 8px !important;
        font-weight: 600 !important;
        display: flex !important;
        align-items: center !important;
        gap: 8px !important;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
        position: relative !important;
        overflow: hidden !important;
        background: linear-gradient(135deg, var(--abm-success-color) 0%, var(--abm-success-dark) 100%) !important;
        border: none !important;
        color: white !important;
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3) !important;
        padding: 0 20px !important;
    }

    .info-chofers-abm .modern-button:hover {
        transform: translateY(-2px) !important;
        box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4) !important;
    }

    .info-chofers-abm .table-container {
        padding: 0 !important;
        overflow: hidden !important;
        margin-top: 0 !important;
    }

    .info-chofers-abm .ant-table-thead > tr > th {
        background: #A63333 !important;
        color: #fff !important;
        font-weight: 600 !important;
        border: none !important;
        padding: 16px !important;
    }

    .info-chofers-abm :deep(.ant-table-tbody > tr:hover > td) {
        background-color: inherit !important;
        cursor: default !important;
        transform: none !important;
        transition: none !important;
    }

    .info-chofers-abm :deep(.ant-table) {
        margin-top: 0 !important;
        border-radius: 0 !important;
    }

    .info-chofers-abm :deep(.ant-table-container) {
        border-top: none !important;
    }

    .info-chofers-abm :deep(.ant-picker),
    .info-chofers-abm :deep(.ant-select-selector),
    .info-chofers-abm :deep(.ant-input) {
        border-radius: 8px !important;
        border: 1px solid rgba(255, 255, 255, 0.3) !important;
        background: rgba(255, 255, 255, 0.1) !important;
        color: white !important;
        transition: all 0.3s ease !important;
    }

    .info-chofers-abm :deep(.ant-picker:hover),
    .info-chofers-abm :deep(.ant-select-selector:hover),
    .info-chofers-abm :deep(.ant-input:hover) {
        background: rgba(255, 255, 255, 0.2) !important;
        border-color: rgba(255, 255, 255, 0.5) !important;
    }

    .info-chofers-abm :deep(.ant-picker-input > input),
    .info-chofers-abm :deep(.ant-select-selection-item),
    .info-chofers-abm :deep(.ant-input::placeholder) {
        color: white !important;
    }

    .ant-table-cell {
        min-width: 120px!important;
        font-size: 1rem !important;
        padding: 16px !important;
    }

    @@media (max-width: 1199px) {
        .info-chofers-abm .container {
            padding: 8px !important;
        }
        .info-chofers-abm .header-section {
            padding: 20px !important;
        }
        .info-chofers-abm .main-title {
            font-size: 2rem !important;
            flex-direction: column !important;
            text-align: center !important;
            gap: 8px !important;
        }
        .info-chofers-abm .filter-row {
            grid-template-columns: 1fr !important;
        }
        .info-chofers-abm .actions-row {
            grid-template-columns: 1fr !important;
            gap: 12px !important;
        }
    }

    @@media (max-width: 768px) {
        .info-chofers-abm .container {
            padding: 4px !important;
        }
        .info-chofers-abm .header-section {
            padding: 16px !important;
        }
        .info-chofers-abm .main-title {
            font-size: 1.8rem !important;
            letter-spacing: 2px !important;
        }
    }

    @@media (max-width: 575px) {
        .info-chofers-abm .main-title {
            font-size: 1.5rem !important;
        }
    }


    .info-chofers-abm .title-icon {
        color: #FFD54F !important;
        font-size: 2rem !important;
        filter: drop-shadow(0 2px 6px rgba(0, 0, 0, 0.25)) !important;
    }

    @@keyframes text-glow {
        0%, 100% { text-shadow: 0 0 5px #F9A825, 0 0 10px #FFD54F; }
        50% { text-shadow: 0 0 12px #F9A825, 0 0 22px #FFD54F; }
    }
</style>

<div class="info-chofers-abm">
    <div class="container fade-in">
        <Card Class="main-card">
            <div class="header-section">
                <div class="lava-bubbles">
                    <div class="lava-bubble b1"></div>
                    <div class="lava-bubble b2"></div>
                    <div class="lava-bubble b3"></div>
                    <div class="lava-bubble b4"></div>
                    <div class="lava-bubble b5"></div>
                </div>
                <div class="title-container">
                    <h1 class="main-title">
                        <Icon Type="car" Class="title-icon" />
                        REPORTES DE CHOFERES
                    </h1>
                </div>
                <div class="filters-section">
                    <div class="filter-row">
                        <div class="filter-group">
                            <label class="filter-label">📅 Fecha Desde</label>
                            <DatePicker TValue="DateTime" 
                                        DefaultValue="@DateTime.Now"
                                        @bind-Value="@desde" 
                                        Size="InputSize.Large"
                                        Placeholder="@("Seleccionar fecha")" />
                        </div>
                        <div class="filter-group">
                            <label class="filter-label">📅 Fecha Hasta</label>
                            <DatePicker TValue="DateTime" 
                                        DefaultValue="@DateTime.Now"
                                        @bind-Value="@hasta" 
                                        Size="InputSize.Large"
                                        laceholder="@("Seleccionar fecha")" />
                        </div>
                    </div>

                    <div class="actions-row">
                        <div class="search-container">
                            <!-- Espacio para búsqueda si se desea agregar en el futuro -->
                        </div>

                        <Button Class="modern-button" 
                                OnClick="()=>colocar_preferencia(desde,hasta,preferencia)" 
                                Icon="search"
                                Size="ButtonSize.Large">
                            Buscar
                        </Button>

                        <Button Class="modern-button" 
                                OnClick="()=>Insertar_todos_choferes(preferencia)" 
                                Icon="team"
                                Size="ButtonSize.Large">
                            Mostrar todos
                        </Button>
                    </div>
                </div>
            </div>
            
            <div class="table-container">
                <Table DataSource="preferencia" TItem="ChoferesVM" PageSize="6" Responsive>
                    <ColumnDefinitions>
                        <Selection Key="@(context.NumeroLegajo.ToString())" />
                        <PropertyColumn Property="c=>c.NumeroLegajo" Title="Numero de Legajo"
                            DefaultSortOrder="@SortDirection.Descending"
                                SorterCompare="@((a,b)=> a - b)" />
                        <PropertyColumn Property="c=>c.Nombre" Sortable />
                        <PropertyColumn Property="c=>c.Apellido" Sortable />
                        <PropertyColumn Property="c => c.DotacionNumero" Title="Dotacion" />
                        <PropertyColumn Property="c=>c.VencimientoRegistro" Title="Vencimiento Registro" Format="dd/MM/yyyy" Sortable />
                        <PropertyColumn Property="c=>c.TelefonoCel" Title="Telefono Celular" Sortable />
                        <PropertyColumn Property="c=>c.TelefonoFijo" Title="Telefono Fijo" Sortable />
                        <PropertyColumn Property="c=>c.TelefonoLaboral" Title="Telefono Laboral" Sortable />
                    </ColumnDefinitions>
                </Table>
            </div>
        </Card>
    </div>
</div>

@code {
    bool primeravuelta = true;
    List<ChoferesVM> todosLosChoferes = new List<ChoferesVM>();
    List<ChoferesVM> preferencia = new List<ChoferesVM>();

    //static string dateString = "5/1/2008 8:30:52 AM";
    static DateTime hasta = DateTime.Now;
    static DateTime desde = hasta.AddMonths(-1);

    class ChoferesVM
    {
        [Required, StringLength(255)]
        public string Nombre { get; set; }
        [Required, StringLength(255)]
        public string Apellido { get; set; }
        public TipoDotaciones Dotacion { get; set; }
        public DateTime? VencimientoRegistro { get; set; }
        public int NumeroLegajo { get; set; }
        [Required, StringLength(255)]
        public string? TelefonoCel { get; set; }
        [Required, StringLength(255)]
        public string? TelefonoLaboral { get; set; }
        [Required, StringLength(255)]
        public string TelefonoFijo { get; set; }
        public int DotacionNumero { get; set; }
    }
   
    async void Insertar_todos_choferes(List<ChoferesVM> b)
    {
        b.Clear();
        using var context = DbFactory.CreateDbContext();
        List<Bombero> choferes = await context.Bomberos.Where(b => b.Chofer).ToListAsync();//saco la info
        foreach (var chofer in choferes)
        {
            var contactos = await context.Contactos.Where(c => c.PersonalId == chofer.PersonaId).SingleOrDefaultAsync();

                ChoferesVM ChoferesPasajeVM = new()
                {
                    Nombre = chofer.Nombre,
                    Apellido = chofer.Apellido,
                    DotacionNumero = (int)chofer.Dotacion,
                    VencimientoRegistro = chofer.VencimientoRegistro,
                    NumeroLegajo = chofer.NumeroLegajo,
                    TelefonoCel = contactos.TelefonoCel,
                    TelefonoFijo = contactos.TelefonoFijo,
                    TelefonoLaboral = contactos.TelefonoLaboral
                };

            b.Add(ChoferesPasajeVM);
        }
        StateHasChanged();
    }

    //Guarda en la lista los valores que esten entre las fechas sin distingir los dias
    void colocar_preferencia(DateTime d, DateTime h, List<ChoferesVM> b)//preferentemente b es todos los choferes
    {
            int desde;
            int hasta;
            b.Clear();
            for (int i = 0; i < todosLosChoferes.Count; i++)
            {
                if (todosLosChoferes[i].VencimientoRegistro == null) continue;
                desde = DateTime.Compare(d, (DateTime)todosLosChoferes[i].VencimientoRegistro);
                hasta = DateTime.Compare(h, (DateTime)todosLosChoferes[i].VencimientoRegistro);
                if (desde <= 0 && hasta >= 0)
                {
                    b.Add(todosLosChoferes[i]);
                }
            }
            StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        Insertar_todos_choferes(preferencia);
        Insertar_todos_choferes(todosLosChoferes);
        StateHasChanged();
    }
    private void Cancel()
    {
        _message.Error("Operacion cancelada");
    }
}