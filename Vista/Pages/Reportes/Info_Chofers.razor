@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@page "/Reportes/Reportes_Choferes"
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel
@using AntDesign.TableModels
@using System.Text.Json;

<Table DataSource="bomberChofer"  TItem="Bombero">
    <TitleTemplate>
        <GridRow>
            <GridCol Span="6">
                <Title Level="4">Choferes</Title>
            </GridCol>
           
        </GridRow>
    </TitleTemplate>
    <ColumnDefinitions>
        <Selection Key="@(context.NumeroLegajo.ToString())" />
         <PropertyColumn Property="c=>c.NumeroLegajo"
                         DefaultSortOrder="@SortDirection.Descending"
                         SorterCompare="@((a,b)=> a - b)" />
        <TableFilter MatchMode="MatchMode.Contains" FilterCallback="OnFilterChanged" />
        <PropertyColumn Property="c=>c.Nombre" Sortable />

        <PropertyColumn Property="c=>c.Apellido" Sortable />

        <PropertyColumn Property="c=>c.Dotacion" />

        <PropertyColumn Property="c=>c.VencimientoRegistro" Sortable />

    </ColumnDefinitions>
</Table>

@code {    
    List<Bombero> bomberChofer= new List<Bombero>();


    protected override async Task OnInitializedAsync()
    {
        using var db = await DbFactory.CreateDbContextAsync();

        bomberChofer = await db.Bomberos.Where(b => b.Chofer == true).ToListAsync();

        StateHasChanged();
    }     
}