@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@page "/salidas/materiales-peligrosos"
@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;
@using Vista.Data.ViewModels.MaterialesPeligrosos;
@using Vista.Data.ViewModels.Personal;

<Form  Model="@modelMateriales"
      LabelColSpan="8"
      WrapperColSpan="16"
      OnFinish="OnFinish"
      OnFinishFailed="OnFinishFailed">
    @*Datos generales de las salidas*@
    <FormItem Label="Fecha">
        <DatePicker TValue="DateTime" ShowTime="@true" OnChange="OnChange" @bind-Value="@modelMateriales.Fecha" />
    </FormItem>
    <FormItem Label="Numero de parte">
        <AntDesign.InputNumber @bind-Value="modelMateriales.NumeroParte" />
    </FormItem>
      <FormItem Label="Descripcion">
        <Input @bind-Value="@modelMateriales.Descripcion" />
    </FormItem>
    <FormItem Label="Dato Hora salida">
        <DatePicker TValue="DateTime" ShowTime="@true" OnChange="OnChange" @bind-Value="@modelMateriales.HoraSalida" />
    </FormItem>
    <FormItem Label="Dato Hora llegada">
        <DatePicker TValue="DateTime" ShowTime="@true" OnChange="OnChange" @bind-Value="@modelMateriales.HoraLLegada" />
    </FormItem>
    <FormItem Label="Kilometro salida">
        <AntDesign.InputNumber  @bind-Value="modelMateriales.KmSalida" />
    </FormItem>
    <FormItem Label="Kilometro llegada">
        <AntDesign.InputNumber @bind-Value="modelMateriales.KmLlegada" />
    </FormItem>
    <FormItem Label="Calle/Ruta">
        <Input @bind-Value="@modelMateriales.CalleORuta" />
    </FormItem>
    <FormItem Label="Numero/kilometro">
        <Input @bind-Value="@modelMateriales.NumeroOKilometro" />
    </FormItem>
    <FormItem Label="Entre calles">
        <Input @bind-Value="@modelMateriales.EntreCalles" />
    </FormItem>
    <FormItem Label="PisoNumero">
        <Input @bind-Value="@modelMateriales.PisoNumero" />
    </FormItem>
    <FormItem Label="Depto">
        <Input @bind-Value="@modelMateriales.Depto" />
    </FormItem>
    <FormItem Label="Tipo zona">
        <EnumSelect TEnum="TipoZona" @bind-Value="@modelMateriales.TipoZona" />
    </FormItem>
    @*Solicitante datos*@
    <b><label>Datos de solicitante</label></b>
    <FormItem Label="Nombre del solicitante">
        <Input @bind-Value="@modelMateriales.NombreSolicitante" />
    </FormItem>
    <FormItem Label="Apelldio del solicitante">
         <Input @bind-Value="@modelMateriales.ApellidoSolicitante" />
    </FormItem>
    <FormItem Label="documneto del solicitante">
         <Input @bind-Value="@modelMateriales.DniSolicitante" />
    </FormItem>
    <FormItem Label="Telefono  del solicitante">
         <Input @bind-Value="@modelMateriales.TelefonoSolicitante" />
    </FormItem>
    @*Datos bomberos receptor*@
    <FormItem Label="Numero legajo">
        <AntDesign.InputNumber @bind-Value="modelMateriales.LegajoReceptor" />
    </FormItem>

    @*Datos de damnificados*@
    <FormItem Label="¿Ubo damnificados?">
        <Switch @bind-Checked="switchValue" />
    </FormItem>
    @if (switchValue == true)
    {
        <FormItem Label="Nombre">
            <Input @bind-Value="@damnificado.Nombre" />
        </FormItem>
         <FormItem Label="Apellido">
            <Input @bind-Value="@damnificado.Apellido" />
        </FormItem>
        <FormItem Label="Documento">
            <Input @bind-Value="@damnificado.Dni" />
        </FormItem>
        <FormItem Label="Tipo sexo">
            <EnumSelect TEnum="TipoSexo" @bind-Value="@damnificado.Sexo" />
        </FormItem>
        <FormItem Label="Lugar De nacimiento">
            <Input @bind-Value="@damnificado.LugarDeNacimiento" />
        </FormItem>
        <FormItem Label="edad">
            <AntDesign.InputNumber @bind-Value="damnificado.Edad" />
        </FormItem>
        <FormItem Label="Tipo material">
            <EnumSelect TEnum="TipoDamnificado" @bind-Value="@damnificado.Estado" />
        </FormItem>
        <Button OnClick="@AgregarDamnificado">Agregar damnificado</Button>
    }
    @*Datos de Vehiculos  damnificados*@
    <FormItem Label="¿Ubo vehiculos damnificados?">
        <Switch @bind-Checked="switchValuev" />
    </FormItem>
    @if (switchValuev == true )
    {
        <FormItem Label="Marca">
            <Input @bind-Value="@damnificado.Marca" />
        </FormItem>
        <FormItem Label="Modelo">
            <Input @bind-Value="@damnificado.Modelo" />
        </FormItem>
        <FormItem Label="Año">
            <AntDesign.InputNumber @bind-Value="damnificado.Año" />
        </FormItem>
        <FormItem Label="Patente">
            <Input @bind-Value="@damnificado.Patente" />
        </FormItem>
        <FormItem Label="tipo">
            <Input @bind-Value="@damnificado.Tipo" />
        </FormItem>
        <FormItem Label="Color">
            <Input @bind-Value="@damnificado.Color" />
        </FormItem>
        <Checkbox @bind-Checked="chek"> Airbag</Checkbox>
        <Button OnClick="@AgregarDamnificadoVehiculo">Agregar vehiculo damnificado</Button>
    }
    @*Datos Del seguro*@
    <FormItem Label="Compania Aseguradora">
        <Input @bind-Value="@modelMateriales.CompaniaAseguradora" />
    </FormItem>
    <FormItem Label="NumeroPoliza">
        <Input @bind-Value="@modelMateriales.NumeroPoliza" />
    </FormItem>
    <FormItem Label="FechaVencimineto">
        <DatePicker TValue="DateTime" ShowTime="@true" OnChange="OnChange" @bind-Value="@modelMateriales.FechaVencimineto" />
    </FormItem>
    @*Moviles de salidas*@
    @*a la hora de pedir el chofer y movil, 
    pedir dato unico para no cargar todo y buscarlo en la base de datos*@
    <b><label>Datos de chofer</label></b>
    <br />
     <Checkbox @bind-Checked="chekM"> Cargo combustible</Checkbox>
    <FormItem Label="Numero de legajo">
        <Input @bind-Value="movilSalidaViewModels.NumeroLegajo" />
    </FormItem>
    <FormItem Label="Numero de movil">
        <Input @bind-Value="movilSalidaViewModels.NumeroMovil" />
    </FormItem>
    <br />
    <Button>Cargar Movil salida</Button>
    @*Cuerpos paraticipantes*@
    <b><label>Cuerpo Participante</label></b>
    <FormItem Label="Tipo Escalafon">
        <EnumSelect TEnum="EscalafonJerarquico" @bind-Value="@bomberoSalidaView.Grado" />
    </FormItem>
    <FormItem Label="Numero de legajo">
        <AntDesign.InputNumber @bind-Value="bomberoSalidaView.NumeroLegajo" />
    </FormItem>
    <FormItem Label="Nombre de bombero">
        <Input @bind-Value="bomberoSalidaView.Nombre" />
    </FormItem>
    <FormItem Label="Apellido de bombero">
        <Input @bind-Value="bomberoSalidaView.Apellido" />
    </FormItem>
    <Checkbox @bind-Checked="chekB"> Salio</Checkbox>
    <br />
    <Button>Cargar cuerpo participante</Button>
    <br />
    <b><label>Datos encargados</label></b>
    <FormItem Label="Numero de legajo">
        <AntDesign.InputNumber @bind-Value="modelMateriales.LegajoEncargado" />
    </FormItem>
    <b><label>Quien lleno planilla</label></b>
    <FormItem Label="Numero de legajo">
        <AntDesign.InputNumber @bind-Value="modelMateriales.LegajoLLenoPlanilla" />
    </FormItem>
    @*Tipo servicio*@
    <FormItem Label="Tipo Servicio salida">
        <EnumSelect TEnum="TipoServicioSalida" @bind-Value="@modelMateriales.TipoServicio" />
    </FormItem>

   @*propio de la salida de tipo material*@
    <FormItem Label="Tipo material">
        <EnumSelect TEnum="TipoMaterialPeligroso" @bind-Value="@modelMateriales.Tipo" />
    </FormItem>
    <FormItem Label="Sustancias">
        <Input @bind-Value="modelMateriales.Sustancias" />
    </FormItem>
    <b><label>Acciones sobre los materiales</label></b>
    <CheckboxGroup Style="width:100%"  ValueChanged="@OnChange">

        <Row>
            <Col Span="8">
            <Checkbox Label="Controlada" @bind-Value="@modelMateriales.Controlada">Controlada</Checkbox>
            </Col>
            <Col Span="8">
                <Checkbox Label="Venteo" @bind-Value="@modelMateriales.Venteo">Venteo</Checkbox>
            </Col>
            <Col Span="8">
                <Checkbox Label="DilucionDeVapores" @bind-Value="@modelMateriales.DilucionDeVapores">DilucionDeVapores</Checkbox>
            </Col>
            <Col Span="8">
                <Checkbox Label="Neutralizacion" @bind-Value="@modelMateriales.Neutralizacion">Neutralizacion</Checkbox>
            </Col>
            <Col Span="8">
            <Checkbox Label="Trasvase" @bind-Value="@modelMateriales.Trasvase">Trasvase</Checkbox>
            </Col>
            <Col Span="8">
            <Checkbox Label="otro" @bind-Value="@modelMateriales.OtraAccionesMateriales">OtraAccionesMateriales</Checkbox>
            </Col>
        </Row>
    </CheckboxGroup>
    
    <FormItem Label="Detalles Acciones ">
        <Input @bind-Value="modelMateriales.DetallesAccionesMateriales" />
    </FormItem>
    @*Acciones sobre personas*@
    <FormItem Label="Tipo Evacuacion">
        <EnumSelect TEnum="TipoEvacuacion" @bind-Value="@modelMateriales.Evacuacion" />
    </FormItem>
    <br />
    <b><label>Acciones sobre personas</label></b>
    <CheckboxGroup Style="width:100%" ValueChanged="@OnChange">

        <Row>
            <Col Span="8">
            <Checkbox Label="Confinamiento" @bind-Value="@modelMateriales.Confinamiento">Confinamiento</Checkbox>
            </Col>
            <Col Span="8">
            <Checkbox Label="Descontaminacion" @bind-Value="@modelMateriales.Descontaminacion">Descontaminacion</Checkbox>
            </Col>
            <Col Span="8">
            <Checkbox Label="SinAccion" @bind-Value="@modelMateriales.SinAccion">SinAccion</Checkbox>
            </Col>
            <Col Span="8">
            <Checkbox Label="OtraAccionesPersonas" @bind-Value="@modelMateriales.OtraAccionesPersonas">OtraAccionesPersonas</Checkbox>
            </Col>
        </Row>
    </CheckboxGroup>
    
    <FormItem Label="Tipo Superficie">
        <EnumSelect TEnum="TipoSuperficie" @bind-Value="@modelMateriales.TipoSuperficie" />
    </FormItem>
    <FormItem Label="Detalles Surpeficie Afectada ">
        <Input @bind-Value="modelMateriales.DetalleSuperficieAfectada" />
    </FormItem>
    <FormItem Label="Tipo Evacuacion">
        <EnumSelect TEnum="TipoSituacionExplosion" @bind-Value="@modelMateriales.TipoSituacion" />
    </FormItem>


    <FormItem WrapperColOffset="8" WrapperColSpan="16">
        <Button Type="@ButtonType.Primary" HtmlType="submit" OnClick="@CargarMaterialPeligroso">
            Cargar salida
        </Button>
    </FormItem>
</Form>

@code
{

    private DamnificadoViewModels damnificado = new();
    private MaterialPeligrosoViewModels modelMateriales = new ();
    private MovilSalidaViewModels movilSalidaViewModels = new();
    private BomberoSalidaViewModels bomberoSalidaView = new();
    public List<DamnificadoViewModels> DamnificadosSalida = new();
    public List<MovilSalidaViewModels> MovilesSalidas = new();
    bool switchValue { get; set; }
    bool switchValuev { get; set; }
    bool chek { get; set; }
    bool chekM { get; set; }
    bool chekB { get; set; }

   
    //direccion
    public async void CargarMaterialPeligroso()
    {
        using var db = await DbFactory.CreateDbContextAsync();
        Bombero? bomberoReceptor = await db.Bomberos.Where(b => b.NumeroLegajo == modelMateriales.LegajoReceptor).SingleOrDefaultAsync();
        Bombero? bomberoEncargado = await db.Bomberos.Where(b => b.NumeroLegajo == modelMateriales.LegajoEncargado).SingleOrDefaultAsync();
        Bombero? BomberoLlenoPlanilla = await db.Bomberos.Where(b => b.NumeroLegajo == modelMateriales.LegajoLLenoPlanilla).SingleOrDefaultAsync();
        MaterialPeligroso materiales = new()
            {
                Fecha = modelMateriales.Fecha,
                NumeroParte = modelMateriales.NumeroParte,
                HoraSalida = modelMateriales.HoraSalida,
                HoraLlegada = modelMateriales.HoraLLegada,
                KmSalida = modelMateriales.KmSalida,
                KmLlegada = modelMateriales.KmLlegada,
                Descripcion = modelMateriales.Descripcion,
                CalleORuta = modelMateriales.CalleORuta,
                NumeroOKilometro = modelMateriales.NumeroOKilometro,
                EntreCalles = modelMateriales.EntreCalles,
                PisoNumero = modelMateriales.PisoNumero,
                Depto = modelMateriales.Depto,
                //Enum.GetName(typeof(TipoGrupoSanguineo), bomberoView.GrupoSanguineo)
                TipoZona = modelMateriales.TipoZona,
                NombreSolicitante = modelMateriales.NombreSolicitante,
                ApellidoSolicitante = modelMateriales.ApellidoSolicitante,
                DniSolicitante = modelMateriales.DniSolicitante,
                TelefonoSolicitante = modelMateriales.TelefonoSolicitante,
                TipoServicio = modelMateriales.TipoServicio,
                //carga propio de materiales peligrosos
                Tipo = modelMateriales.Tipo,
                Sustancias = modelMateriales.Sustancias,
                Damnificados = modelMateriales.Damnificados,
                Controlada = modelMateriales.Controlada,
                Venteo = modelMateriales.Venteo,
                DilucionDeVapores = modelMateriales.DilucionDeVapores,
                Neutralizacion = modelMateriales.Neutralizacion,
                Trasvase = modelMateriales.Trasvase,
                OtraAccionesMateriales = modelMateriales.OtraAccionesMateriales,
                DetallesAccionesMateriales = modelMateriales.DetallesAccionesMateriales,
                Evacuacion = modelMateriales.Evacuacion,
                Descontaminacion = modelMateriales.Descontaminacion,
                Confinamiento = modelMateriales.Confinamiento,
                SinAccion = modelMateriales.SinAccion,
                OtraAccionesPersonas = modelMateriales.OtraAccionesPersonas,
                TipoSuperficie = modelMateriales.TipoSuperficie,
                DetalleSuperficieAfectada = modelMateriales.DetalleSuperficieAfectada,
                TipoSituacion = modelMateriales.TipoSituacion,
                //listas
                //Moviles = MovilesSalidas.Clone();
                //Damnificados = DamnificadosSalida.Clone();
               QuienLleno = BomberoLlenoPlanilla,
               ReceptorBombero = bomberoReceptor,
               Encargado = bomberoEncargado,
               Seguro = new ()
               {
                   CompañiaAseguradora = modelMateriales.CompaniaAseguradora,
                   NumeroDePoliza = modelMateriales.NumeroPoliza,
                   FechaDeVencimineto = modelMateriales.FechaVencimineto,
               },
               
               


        };
        await db.MaterialesPeligrosos.AddAsync(materiales);
        await db.SaveChangesAsync();
    }

    public async void AgregarDamnificado()
    {
        using var db = await DbFactory.CreateDbContextAsync();
        DamnificadoViewModels dp= new()
        {
          Nombre = damnificado.Nombre,
          Apellido = damnificado.Apellido,
          Dni = damnificado.Dni,
          Sexo = damnificado.Sexo,
          LugarDeNacimiento = damnificado.LugarDeNacimiento,
          Edad = damnificado.Edad,
          Estado = damnificado.Estado,
        };
        DamnificadosSalida.Add(dp);
    }
    public async void AgregarDamnificadoVehiculo()
    {
        using var db = await DbFactory.CreateDbContextAsync();
       DamnificadoViewModels dv= new()
        {
          Marca = damnificado.Marca,
          Modelo = damnificado.Modelo,
          Año = damnificado.Año,
          Patente = damnificado.Patente,
          Tipo = damnificado.Tipo,
          Color = damnificado.Color,
          Airbag = chek,
        };
         DamnificadosSalida.Add(dv);
    }
    public async void AgregarMovilSalida()
    {
        using var db = await DbFactory.CreateDbContextAsync();
        Bombero? bomberoChofer = await db.Bomberos.Where(b => b.NumeroLegajo == movilSalidaViewModels.NumeroLegajo).SingleOrDefaultAsync();
        Movil? Movilsalida = await db.Moviles.Where(m => m.NumeroMovil == movilSalidaViewModels.NumeroMovil).SingleOrDefaultAsync();
       MovilSalidaViewModels  m = new ()
        {
            CargoCombustible = chekM,
            Chofer = bomberoChofer,
            MovilesSalida = Movilsalida,
        };
         MovilesSalidas.Add(m);
    }

    private void OnFinish(EditContext editContext)
    {
        Console.WriteLine($"Success:{JsonSerializer.Serialize(modelMateriales)}");
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(modelMateriales)}");
    }
    private void OnChange(DateTimeChangedEventArgs args)
    {
        Console.WriteLine($"Selected Time: {args.Date}");
        Console.WriteLine($"Formatted Selected Time: {args.DateString}");
    }
    void OnChange(string[] checkedValues)
    {
        Console.WriteLine($"checked = {JsonSerializer.Serialize(checkedValues)}");
    }
    // array de las opciones posibles, buscar la opcion y agregarla en la planilla
   

}

    


