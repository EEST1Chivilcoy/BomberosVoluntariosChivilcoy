@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@page "/bomberos"
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel
@using AntDesign.TableModels
@using System.Text.Json;

<div class="Titulo">
    <h3> Bomberos</h3>
</div>
@*<BSContainer id="agregar-bombero">
    <a @onclick="@(() => { navigationManager.NavigateTo($"/bomberos/agregar"); })">
        <BSButton id="button-center" Color="BSColor.Danger">Agregar Bombero +</BSButton>
    </a>
</BSContainer>
<br/>
<BSContainer id="agregar-bombero">
    <a @onclick="@(() => { navigationManager.NavigateTo($"/bomberos/AgregarBrigada"); })">
        <BSButton id="button-center" Color="BSColor.Danger">Agregar Brigada +</BSButton>
    </a>
</BSContainer>*@

<Table @ref="table"
       TItem="BomberosViewModel"
       DataSource="@bomberosVM"
       Total="_total"
       @bind-PageIndex="_pageIndex"
       @bind-PageSize="_pageSize"
       @bind-SelectedRows="selectedRows"
       OnChange="OnChange">
    <Selection Key="@(context.NumeroLegajo.ToString())" />
    <PropertyColumn Property="c=>c.NumeroLegajo" Sortable />
    <PropertyColumn Property="c=>c.Nombre" Sortable />
    <PropertyColumn Property="c=>c.Apellido" Sortable />
    <PropertyColumn Property="c=>c.Grado" Sortable />
    <ActionColumn Title="Action">
        <Space>
            <SpaceItem><Button Danger OnClick="()=>Delete(context.NumeroLegajo)">Delete</Button></SpaceItem>
                </Space>
                </ActionColumn>
                </Table>

                <br />
                <p>PageIndex: @_pageIndex | PageSize: @_pageSize | Total: @_total</p>

                <br />
                <h5>selections:</h5>
                @if (selectedRows != null && selectedRows.Any())
{
    <Button Danger Size="small" OnClick="@(e => { selectedRows = null; })">Clear</Button>

    @foreach (var selected in selectedRows)
    {
        <Tag @key="selected.NumeroLegajo" Closable OnClose="e=>RemoveSelection(selected.NumeroLegajo)">@selected.NumeroLegajo - @selected.NumeroLegajo</Tag>
    }
}

<Button OnClick="()=> { _pageIndex--; }">Previous page</Button>
<Button OnClick="()=> { _pageIndex++; }">Next Page</Button>


@code {
    BomberosViewModel[] bomberosVM;
    Bombero[]? bomberos;

    IEnumerable<BomberosViewModel> selectedRows;
    ITable table;

    int _pageIndex = 1;
    int _pageSize = 10;
    int _total = 0;

    protected override async Task OnInitializedAsync()
    {
        using var db = await DbFactory.CreateDbContextAsync();

        bomberos = await db.Bomberos.ToArrayAsync();
        bomberosVM = await GetForecastAsync(1, 50);
        _total = 50;
    }

    private async Task OnChange(QueryModel<BomberosViewModel> queryModel)
    {
        Console.WriteLine(JsonSerializer.Serialize(queryModel));
    }

    private Task<BomberosViewModel[]> GetForecastAsync(int pageIndex, int pageSize)
    {

        var rng = new Random();
        return Task.FromResult(Enumerable.Range((pageIndex - 1) * pageSize + 1, pageSize).Select(index =>
        {
            return new BomberosViewModel
                {
                    NumeroLegajo = bomberos[index].NumeroLegajo,
                    Nombre = bomberos[index].Nombre,
                    Apellido = bomberos[index].Apellido,
                    Grado = bomberos[index].Grado,
                };
        }).ToArray());
    }

    public void RemoveSelection(int id)
    {
        var selected = selectedRows.Where(x => x.NumeroLegajo != id);
        selectedRows = selected;
    }

    private void Delete(int id)
    {
        bomberosVM = bomberosVM.Where(x => x.NumeroLegajo != id).ToArray();
        _total = bomberosVM.Length;
    }


    [Parameter]
    public int? BomberoId { get; set; }

    private class BomberosViewModel
    {
        public DateTime FechaNacimiento { get; set; }
        public DateTime FechaAceptacion { get; set; }
        [Required, StringLength(255)]
        public string Nombre { get; set; }
        [Required, StringLength(255)]
        public string Apellido { get; set; }
        public EstadoBombero Estado { get; set; }
        public int NumeroLegajo { get; set; }
        public EscalafonJerarquico Grado { get; set; }
        public TipoDotaciones Dotacion { get; set; }
        [Required, StringLength(255)]
        public string Brigada { get; set; }
        public bool Chofer { get; set; }
        public DateTime? VencimientoRegistro { get; set; }
        public TipoSexo Sexo { get; set; }
        [Required, StringLength(255)]
        public string Direccion { get; set; }
        [Required, StringLength(255)]
        public string LugarNacimiento { get; set; }
        [Required, StringLength(255)]
        public string Documento { get; set; }
        [Required, StringLength(255)]
        public TipoGrupoSanguineo GrupoSanguineo { get; set; }
        [Required, StringLength(255)]
        public string Observaciones { get; set; }
        [Required, StringLength(255)]
        public string Profesion { get; set; }
        [Required, StringLength(255)]
        public string NivelEstudios { get; set; }
        [Required, StringLength(255)]
        public string NumeroIoma { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion1 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion2 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion3 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion4 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion5 { get; set; }
        [Required, StringLength(255)]
        public string? Resolucion6 { get; set; }
        ////Contacto-------------------------------
        //[Required, StringLength(255)]
        //public string? TelefonoCel { get; set; }
        //[Required, StringLength(255)]
        //public string? TelefonoLaboral { get; set; }
        //[Required, StringLength(255)]
        //public string? TelefonoFijo { get; set; }
        //[Required, StringLength(255)]
        //public string? Email { get; set; }
        ////Imagen-------------------------------
        //public string Base64 { get; set; }
        //[Required, StringLength(255)]
        //public string TipoImagen { get; set; }
        //[Required, StringLength(255)]
        //public string NombreImagen { get; set; }
        ////Brigada-------------------------------
        //public string NombreBrigada { get; set; }
    }
}
