@page "/FuerzasIntervinientes"
@using Vista.Data.Models.Grupos.FuerzasIntervinientes
@using Vista.Data.ViewModels.Personal
@using Vista.Data.Models.Personas.Personal
@using Vista.Data.Models.Personas.Personal.Componentes

@*Servicios Utilizados*@
@using Vista.Services
@inject IFuerzaIntervinienteService FuerzaIntervinienteService
@inject IMessageService MessageService

<style>
    .fuerzas-abm {
        --fuerzas-primary-color: #A63333;
        --fuerzas-primary-dark: #732D2D;
        --fuerzas-success-color: #4CAF50;
        --fuerzas-success-dark: #438E46;
        --fuerzas-accent-color: #FFD54F;
    }

    .fuerzas-abm .fuerzas-container {
        padding: 12px !important;
        min-height: 100vh !important;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%) !important;
    }

    .fuerzas-abm .main-card {
        background: rgba(255, 255, 255, 0.95) !important;
        backdrop-filter: blur(10px) !important;
        border-radius: 16px !important;
        box-shadow: 0 8px 32px rgba(166, 51, 51, 0.1), 0 4px 16px rgba(0, 0, 0, 0.05) !important;
        border: 1px solid rgba(255, 255, 255, 0.2) !important;
        overflow: hidden !important;
    }

    .fuerzas-abm .header-section {
        background: linear-gradient(135deg, var(--fuerzas-primary-color) 0%, var(--fuerzas-primary-dark) 100%) !important;
        color: white !important;
        padding: 28px !important;
        position: relative !important;
        overflow: hidden !important;
    }

    .fuerzas-abm .header-section .lava-bubbles {
        position: absolute;
        top: 0; left: 0; width: 100%; height: 100%;
        pointer-events: none;
        z-index: 1;
        overflow: hidden;
    }
    .fuerzas-abm .header-section .lava-bubble {
        position: absolute;
        border-radius: 50%;
        opacity: 0.45;
        background: radial-gradient(circle at 60% 40%, #FFD54F 0%, #F9A825 80%, transparent 100%);
        animation: lava-bubble-move 8s linear infinite;
        filter: blur(1.5px);
        mix-blend-mode: lighten;
    }
    .fuerzas-abm .header-section .lava-bubble.b1 {
        left: 10%; width: 60px; height: 60px; bottom: -70px;
        animation-delay: 0s;
        animation-duration: 7.5s;
    }
    .fuerzas-abm .header-section .lava-bubble.b2 {
        left: 35%; width: 90px; height: 90px; bottom: -100px;
        animation-delay: 2s;
        animation-duration: 9s;
        background: radial-gradient(circle at 60% 40%, #FFEB3B 0%, #FFD54F 80%, transparent 100%);
    }
    .fuerzas-abm .header-section .lava-bubble.b3 {
        left: 65%; width: 50px; height: 50px; bottom: -60px;
        animation-delay: 1.5s;
        animation-duration: 6.5s;
        background: radial-gradient(circle at 60% 40%, #FFFDE7 0%, #FFD54F 80%, transparent 100%);
    }
    .fuerzas-abm .header-section .lava-bubble.b4 {
        left: 80%; width: 70px; height: 70px; bottom: -80px;
        animation-delay: 3.2s;
        animation-duration: 8.5s;
        background: radial-gradient(circle at 60% 40%, #F9A825 0%, #FFD54F 80%, transparent 100%);
    }
    .fuerzas-abm .header-section .lava-bubble.b5 {
        left: 55%; width: 40px; height: 40px; bottom: -50px;
        animation-delay: 5s;
        animation-duration: 7.2s;
        background: radial-gradient(circle at 60% 40%, #FFFDE7 0%, #F9A825 80%, transparent 100%);
    }

    @@keyframes lava-bubble-move {
        0% {
            transform: translateY(0) scale(1) rotate(0deg);
            opacity: 0.45;
        }
        60% {
            opacity: 0.7;
            filter: blur(2.5px);
        }
        80% {
            transform: translateY(-220px) scale(1.15) rotate(10deg);
            opacity: 0.6;
        }
        100% {
            transform: translateY(-320px) scale(0.95) rotate(-8deg);
            opacity: 0;
        }
    }

    .fuerzas-abm .main-title {
        font-family: 'Poppins', 'Fjalla One', sans-serif !important;
        font-size: 2.2rem !important;
        font-weight: 700 !important;
        letter-spacing: 1px !important;
        margin: 0 !important;
        display: flex !important;
        align-items: center !important;
        gap: 12px !important;
        animation: text-glow 2.5s ease-in-out infinite alternate !important;
        position: relative !important;
        z-index: 2 !important;
    }
    .fuerzas-abm .title-icon {
        color: var(--fuerzas-accent-color) !important;
        font-size: 2rem !important;
        filter: drop-shadow(0 2px 6px rgba(0, 0, 0, 0.25)) !important;
    }
    @@keyframes text-glow {
        0%, 100% { text-shadow: 0 0 5px #F9A825, 0 0 10px #FFD54F; }
        50% { text-shadow: 0 0 12px #F9A825, 0 0 22px #FFD54F; }
    }
    .fuerzas-abm .title-container {
        position: relative !important;
        z-index: 2 !important;
        margin-bottom: 20px !important;
    }

    .fuerzas-abm .actions-row {
        display: flex !important;
        justify-content: flex-end !important;
        align-items: center !important;
        gap: 16px !important;
        margin-top: 16px !important;
    }

    .fuerzas-abm .table-container {
        padding: 0 !important;
        overflow: hidden !important;
    }

    .fuerzas-abm .modern-button {
        height: 40px !important;
        border-radius: 8px !important;
        font-weight: 600 !important;
        display: flex !important;
        align-items: center !important;
        gap: 8px !important;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
        position: relative !important;
        overflow: hidden !important;
    }

    .fuerzas-abm .add-button {
        background: linear-gradient(135deg, var(--fuerzas-success-color) 0%, var(--fuerzas-success-dark) 100%) !important;
        border: none !important;
        color: white !important;
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3) !important;
        padding: 0 20px !important;
        font-weight: 600 !important;
        border-radius: 8px !important;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
    }
    .fuerzas-abm .add-button:hover {
        transform: translateY(-2px) !important;
        box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4) !important;
    }

    .fuerzas-abm .ant-table-thead .ant-table-cell {
        background-color: #A63333 !important;
        color: #fff !important;
        font-weight: bold !important;
        padding: 16px !important;
        border: none !important;
    }

    .fuerzas-abm .ant-table-cell {
        padding: 16px !important;
    }

        .fuerzas-abm .fade-in {
        animation: abm-fadeIn 0.5s ease-in-out !important;
    }

@@keyframes abm-fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<div class="fuerzas-abm">
    <div class="fuerzas-container fade-in">
        <Card Class="main-card">
            <div class="header-section">
                <div class="lava-bubbles">
                    <div class="lava-bubble b1"></div>
                    <div class="lava-bubble b2"></div>
                    <div class="lava-bubble b3"></div>
                    <div class="lava-bubble b4"></div>
                    <div class="lava-bubble b5"></div>
                </div>
                <div class="title-container">
                    <h1 class="main-title">
                        <Icon Type="safety-certificate" Class="title-icon" />
                        FUERZAS INTERVINIENTES
                    </h1>
                </div>
                <div class="actions-row">
                    <Button Class="modern-button add-button"
                            OnClick="@(() => _modalAñadirVisible = true)"
                            Icon="plus"
                            Size="ButtonSize.Large">
                        Nueva Fuerza
                    </Button>
                </div>
            </div>
            <div class="table-container">
                <Table TItem="FuerzaViewModelTable"
                       DataSource="@FuerzaViewModels"
                       @bind-PageIndex="_pageIndex"
                       @bind-PageSize="_pageSize"
                       Responsive>
                    <ColumnDefinitions Context="fuerza">
                        <PropertyColumn Title="🏷️ Nombre"
                                        Property="f => f.Nombre"
                                        Align="ColumnAlign.Center"
                                        Sortable
                                        Width="220px"
                                        Fixed="ColumnFixPlacement.Left">
                        </PropertyColumn>
                        <ActionColumn Title="⚙️ Acciones" Align=ColumnAlign.Center>
                            <Space>
                                <SpaceItem>
                                    <Popconfirm Title="¿Eliminar esta fuerza?"
                                                OnConfirm="() => BorrarFuerza(fuerza.Id)"
                                                OkText="Si"
                                                CancelText="No">
                                        <Button Danger>
                                            <Icon Type="delete" /> Eliminar
                                        </Button>
                                    </Popconfirm>
                                </SpaceItem>
                                <SpaceItem>
                                    <Button Type="@ButtonType.Primary" OnClick="() => VerEditarFuerza(fuerza.Id)" Ghost>
                                        <Icon Type="edit" /> Editar
                                    </Button>
                                </SpaceItem>
                            </Space>
                        </ActionColumn>
                    </ColumnDefinitions>
                </Table>
            </div>
        </Card>
    </div>
</div>

@*Modal para Añadir Fuerzas*@
<Modal @bind-Visible="_modalAñadirVisible" Title="Añadir Fuerza" OkText="@("Guardar")" CancelText="@("Cancelar")" OnOk="@AddFuerza">
    <Form Model="nuevaFuerza">
        <FormItem Label="Nombre">
            <Input @bind-Value="nuevaFuerza.Nombre" />
        </FormItem>
    </Form>
</Modal>

@*Modal para Editar Fuerza*@
<Modal @bind-Visible="_modalEditarVisible" Title="Editar Fuerza" OkText="@("Editar")" CancelText="@("Cancelar")" OnOk="@EditarFuerza">
    <Form Model="selFuerza">
        <FormItem Label="Nombre">
            <Input @bind-Value="selFuerza.Nombre" />
        </FormItem>
    </Form>
</Modal>

@code {
	// Variables
	private FuerzaViewModelTable nuevaFuerza = new();
	private FuerzaViewModelTable selFuerza = new();

	// Modals
	private bool _modalAñadirVisible = false;
	private bool _modalEditarVisible = false;

	// Lista de Fuerzas
	private List<FuerzaInterviniente> Fuerzas = new();

	// Variables de Tamaño de la Tabla
	int _pageIndex = 1;
	int _pageSize = 5;

	// Lista de ViewModels de Dependencia
	private List<FuerzaViewModelTable> FuerzaViewModels = new List<FuerzaViewModelTable>();

	public class FuerzaViewModelTable
	{
		public int Id { get; set; }
		public string Nombre { get; set; } = null!;
	}

	protected override async Task OnInitializedAsync()
	{
		Fuerzas = await FuerzaIntervinienteService.ObtenerTodasLasFuerzasAsync();
		FuerzaViewModels = await MapearFuerzasAsync(Fuerzas);
		StateHasChanged();
	}

	public async Task<List<FuerzaViewModelTable>> MapearFuerzasAsync(List<FuerzaInterviniente> fuerzas)
	{
		return await Task.Run(() => fuerzas.Select(f => new FuerzaViewModelTable
			{
				Id = f.Id,
				Nombre = f.NombreFuerza ?? string.Empty
			}).ToList());
	}

	private async Task AddFuerza()
	{
		if (string.IsNullOrWhiteSpace(nuevaFuerza.Nombre))
		{
			await MessageService.ErrorAsync("El campo 'Nombre' no puede estar vacío.");
			return;
		}

		var fuerza = new FuerzaInterviniente
			{
				NombreFuerza = nuevaFuerza.Nombre,
			};

		await FuerzaIntervinienteService.AgregarFuerzaAsync(fuerza);
		nuevaFuerza = new FuerzaViewModelTable();
		_modalAñadirVisible = false;
		await OnInitializedAsync();
		await MessageService.SuccessAsync("Fuerza añadida correctamente.");
	}


	private async Task EditarFuerza()
	{
		if (selFuerza.Id <= 0)
		{
			await MessageService.ErrorAsync("ID inválido. Por favor, proporcione un ID válido.");
			return;
		}

		if (string.IsNullOrWhiteSpace(selFuerza.Nombre))
		{
			await MessageService.ErrorAsync("El campo 'Nombre' no puede estar vacío.");
			return;
		}

		var fuerza = new FuerzaInterviniente
			{
				Id = selFuerza.Id,
				NombreFuerza = selFuerza.Nombre
			};

		await FuerzaIntervinienteService.EditarFuerzaAsync(fuerza);
		selFuerza = new FuerzaViewModelTable();
		_modalEditarVisible = false;
		await OnInitializedAsync();
		await MessageService.SuccessAsync("Fuerza editada correctamente.");
	}

	private async Task VerEditarFuerza(int id)
	{
		if (id <= 0)
		{
			await MessageService.ErrorAsync("ID inválido. Por favor, proporcione un ID válido.");
			return;
		}

		var Fuerza = await FuerzaIntervinienteService.ObtenerFuerzaPorIdAsync(id);

		if (Fuerza == null)
		{
			await MessageService.ErrorAsync("Error al intentar editar la fuerza: No se encontró.");
			return;
		}

		selFuerza = new FuerzaViewModelTable
			{
				Id = Fuerza.Id,
				Nombre = Fuerza.NombreFuerza ?? string.Empty
			};

		_modalEditarVisible = true;
	}

	private async Task BorrarFuerza(int id)
	{
		await FuerzaIntervinienteService.EliminarFuerzaAsync(id);
		await OnInitializedAsync();
		await MessageService.SuccessAsync("Fuerza eliminada correctamente.");
	}
}