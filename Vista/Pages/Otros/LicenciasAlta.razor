@implements IDisposable
@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@inject IMessageService message
@page "/LicenciasAlta"

<h3>Licenccias</h3>
<Form Model="@LicencasVM"
      LabelColSpan="8"
      WrapperColSpan="16"
      OnFinish="OnFinish"
      OnFinishFailed="OnFinishFailed"
      Style="width: 100%;height: 100%;">
    <FormItem Label="Numero de movil">
        <Select TItem="BomberoViweModel"
                TItemValue="int"
                DataSource="@ListabomberosVM"
        @bind-Value="@LicencasVM.NumeroLegajo"
                LabelName="@nameof(BomberoViweModel.NombreYApellido)"
                ValueName="@nameof(BomberoViweModel.NumeroLegajo)"
                Placeholder="Selecione el movil"
                DefaultActiveFirstOption="false"
                AllowClear="true"
                EnableSearch>
        </Select>
    </FormItem>

    


</Form>



@code {
    public class LicencasVm
    {
        [Required]
        public TipoLicencia TipoLicencia { get; set; }
        public int NumeroLegajo { get; set; }
        public DateTime Desde { get; set; }
        public DateTime Hasta { get; set; }
        public TipoEstadoLicencia EstadoLicencia { get; set; }
        public Bombero? PersonalAfectado { get; set; }
    }

    BomberosDbContext Context { get; set; }
    public LicencasVm LicencasVM = new();
    List<BomberoViweModel> ListabomberosVM = new();
    
    protected override async Task OnInitializedAsync()
    {
        await Init();
    }
    private async Task Init()
    {
        LicencasVM = new();
        Context = DbFactory.CreateDbContext();
        await CargarBomberosView();
    }
    private async void OnFinish(EditContext editContext)
    {

    }
    private async Task CargarBomberosView()
    {
        ListabomberosVM = new();
        var bomberos = await Context.Bomberos.OrderBy(b => b.Nombre).ToArrayAsync();
        foreach (Bombero b in bomberos)
        {
            BomberoViweModel bom = new()
                {
                    Nombre = b.Nombre,
                    Apellido = b.Apellido,
                    NumeroLegajo = b.NumeroLegajo
                };
            ListabomberosVM.Add(bom);
        }
    }
    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(LicencasVM)}");
    }
    public void Dispose()
    {
        Context?.Dispose();
    }
}
