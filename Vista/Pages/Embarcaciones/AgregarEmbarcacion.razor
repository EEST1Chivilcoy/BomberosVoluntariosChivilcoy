@inject IDbContextFactory<BomberosDbContext> DbFactory
@inject NavigationManager navigationManager
@inject IMessageService message
@page "/embarcaciones/agregarembarcacion"
@using AntDesign;
@using Vista.Data.ViewModels.Personal;
<style>
	.inpt-container {
		position: relative;
		padding: .8em 0;
	}

	input[type=text], input[type=number] {
		border: none;
		background: none;
		border-bottom: 1px solid #bdb8b8;
		outline: none;
		padding: 1em;
		width: 100%;
		height: .6em;
	}

	.inpt-label {
		position: absolute;
		top: 0;
		left: 5px;
		transform: translateY(10px);
		color: #bdb8b8;
		transition: transform .5s, color .3s;
	}

	input[type=text]:focus, input[type=number]:focus, input[type=file]:focus, input[type=date]:focus {
		border-bottom: 1px solid rgb(62, 24, 24);
		transition: 1s;
	}

		input[type = text]:focus + .inpt-label, input[type = text]:not(:placeholder-shown) + .inpt-label {
			transform: translateY(-4px) scale(.9);
			transform-origin: left top;
			color: rgb(62, 24, 24);
		}

	.select-estadoMovil {
		padding: .8em 0;
		width: 100%;
		border: 1px solid #bdb8b8;
		outline: none;
		box-shadow: none;
	}

		.select-estadoMovil option {
			border: 1px solid #bdb8b8;
		}

	.ant-carousel .slick-dots li {
		display: none !important;
	}

	.lblInputFile {
		border: 1px solid #403F3F;
		color: #403F3F;
		padding: .5em .8em;
		border-radius: 50px;
		background: #eee;
		cursor: pointer;
		font-family: unset;
		font-size: 14px;
		width: 60%;
		transform: translate(50% -50%);
		text-align: center;
	}

	.raro {
		padding: 6em 0;
	}
</style>
@if (embarcacionView is not null)
{
	<div style="width: 20%;height: 70%; background: #fff;">
		<Carousel @ref="_carousel" Style="width: 100%;">
			<CarouselSlick Style="height: 100%;width: 100%;overflow: hidden;text-align: center; line-height: 160px;z-index: 10;display: flex; flex-direction: column;margin: auto;">
				<Card Title=@("Embarcaciones") Style="width: 100%;height: 100%;">
					<div style="height: 100%;">
						<div class="inpt-container">
							<input type="text" @bind="embarcacionView.Marca" placeholder=" " />
							<label class="inpt-label">Marca:</label>
						</div>
						<div class="inpt-container">
							<input type="text" @bind="embarcacionView.Modelo" placeholder=" " />
							<label class="inpt-label">Modelo:</label>
						</div>
						<div class="inpt-container">
							<input type="text" @bind="embarcacionView.Año" placeholder=" " />
							<label class="inpt-label">Año:</label>
						</div>
						<div class="inpt-container">
							<input type="text" @bind="embarcacionView.Patente" placeholder=" " />
							<label class="inpt-label">Patente:</label>
						</div>
						<div class="inpt-container">
							<label class="lblInputFile" for="fotoMovil"><Icon Type="cloud-upload" Theme="outline" Style="height: 14px;width: 14px;" />Cargar foto de la embarcación</label>
							<InputFile OnChange="SubirFoto" id="fotoMovil" style="display: none;" />
							<h3 id="path" style="display: inline-block;font-size:12px;">@imagenView.Nombre</h3>
						</div>
						<div class="inpt-container">
							<Button OnClick="@( _=>_carousel.Next())" Type="@ButtonType.Primary" Style="background: rgb(62, 24, 24);color: #fff;border: none; width: 100%;">Siguiente</Button>
						</div>
					</div>
				</Card>
			</CarouselSlick>
			<CarouselSlick Style="height: 100%; width: 10%;overflow: hidden;text-align: center; line-height: 160px;z-index: 10;">
				<Card Title=@("Embarcaciones") Style="width: 100%;height: 100%;">
					<div style="height: 100%;">
						<div class="inpt-container">
							<input type="text" @bind="embarcacionView.Tipo" placeholder=" " />
							<label class="inpt-label">Tipo:</label>
						</div>
						<div class="inpt-container">
							<input type="text" @bind="embarcacionView.NumeroMovil" placeholder=" " />
							<label class="inpt-label">Nº Embarcación</label>
						</div>

						<div class="inpt-container">
							<select @bind="embarcacionView.Estado" class="select-estadoMovil">
								<option value="@TipoEstadoMovil.Estado" selected disabled hidden>Seleccione estado de la embarcación</option>
								<option value="@TipoEstadoMovil.Activo">Activo</option>
								<option value="@TipoEstadoMovil.Inactivo">Inactivo</option>
								<option value="@TipoEstadoMovil.Reparacion">Reparacion</option>
								<option value="@TipoEstadoMovil.Limpieza">Limpieza</option>
							</select>
						</div>
						<div class="inpt-container">
							
							<Select TItem="BomberoViweModel"
									TItemValue="int"
									DataSource="@BomberoTodos"
									@bind-Value="@BomberoEncargado"
									LabelName="@nameof(BomberoViweModel.NombreYApellido)"
									ValueName="@nameof(BomberoViweModel.NumeroLegajo)"
									Placeholder="Seleccione Bombero Encargado"
									DefaultActiveFirstOption="false"
									EnableSearch>
							</Select>
							
							
						</div>
						

						<div class="inpt-container">
						</div>
						<div class="inpt-container">
						</div>
						@*<div class="inpt-container">
							<Button OnClick="@( _=>_carousel.Next())" Type="@ButtonType.Primary" Style="background: rgb(62, 24, 24);color: #fff;border: none; width: 100%;">Siguiente</Button>
						</div>*@
						<div class="inpt-container">
							<Button Type="@ButtonType.Primary" @onclick="SubirMovil" Style="background: rgb(62, 24, 24);color: #fff;border: none; width: 100%;">Crear Embarcación</Button>
						</div>

					</div>
				
				</Card>
			</CarouselSlick>
		</Carousel>
	</div>
	@*if (bomberos is not null)
	{
		@foreach (BomberoViewModel b in bomberoViews)
		{
			<div class="inpt-container">
				<select class="select-estadoMovil" @bind="b.PersonaId">
					<option hidden selected value="0">Seleccione bombero @b.Rol.ToString()</option>
					@foreach (Bombero bo in bomberos)
					{
						<option value="@bo.PersonaId">@bo.Apellido  @bo.Nombre</option>
					}
				</select>
			</div>
		}



	}*@
}

@code {

	public class EmbarcacionViewModel
	{
		public string Marca { get; set; }
		[Required, StringLength(255)]
		public string Modelo { get; set; }
		public int? Año { get; set; }
		[Required, StringLength(255)]
		public string Patente { get; set; }
		[Required, StringLength(255)]
		public string Tipo { get; set; }
		public int NumeroMovil { get; set; }
		[Required, StringLength(255)]
		public TipoEstadoMovil Estado { get; set; }
	

		
		
	}
	public class SeguroViewModel
	{
		[Required, StringLength(255)]
		public string CompañiaAseguradora { get; set; }
		[Required, StringLength(255)]
		public string NumeroDePoliza { get; set; }
		public DateTime FechaDeVencimiento { get; set; }
	}
	public class ImagenViewModel
	{
		public string Base64 { get; set; }
		[Required, StringLength(255)]
		public string TipoImagen { get; set; }
		[Required, StringLength(255)]
		public string Nombre { get; set; }
	}


	public ImagenViewModel imagenView { get; set; } = new();
	public EmbarcacionViewModel embarcacionView { get; set; } = new();
	public SeguroViewModel seguroView { get; set; } = new();
	public Bombero[]? bomberos;
	Bombero[] TodosBomberos;

	protected override async Task OnInitializedAsync()
	{
		using var db = DbFactory.CreateDbContext();

		bomberos = await db.Bomberos.ToArrayAsync();

		CargarBomberosView();
	}

	private async void SubirFoto(InputFileChangeEventArgs e)
	{
		string imagenBase64 = await Base64Helper.StreamToBase64(e.File.OpenReadStream());

		imagenView.Base64 = imagenBase64;
		imagenView.TipoImagen = e.File.ContentType;
		imagenView.Nombre = e.File.Name;
		StateHasChanged();
	}
	int BomberoEncargado;
	private async void SubirMovil()
	{
		using var db = DbFactory.CreateDbContext();

		if (embarcacionView is not null)
		{
			Embarcacion? comprobante = await db.Embarcacion.Where(e => e.NumeroMovil == embarcacionView.NumeroMovil).SingleOrDefaultAsync();
			Bombero? bomberoEncargado = await db.Bomberos.Where(b => b.NumeroLegajo == BomberoEncargado).SingleOrDefaultAsync();
			if (comprobante is null)
			{
				Embarcacion embarcacion = new Embarcacion()
					{
						Marca = embarcacionView.Marca,
						Modelo = embarcacionView.Modelo,
						Año = embarcacionView.Año,
						Patente = embarcacionView.Patente,
						Tipo = embarcacionView.Tipo,
						Imagen = new()
						{
							NombreImagen = imagenView.Nombre,
							TipoImagen = imagenView.TipoImagen,
							Base64Imagen = imagenView.Base64
						},

						NumeroMovil = embarcacionView.NumeroMovil,
						Estado = embarcacionView.Estado,
						Encargado = bomberoEncargado,
						Seguro = new()
						{
							CompañiaAseguradora = seguroView.CompañiaAseguradora,
							FechaDeVencimineto = seguroView.FechaDeVencimiento,
							NumeroDePoliza = seguroView.NumeroDePoliza
						}
					};
				db.Embarcacion.Add(embarcacion);
				await db.SaveChangesAsync();
			}
		}

		StateHasChanged();
		navigationManager.NavigateTo("/embarcaciones");
	}
	Carousel _carousel;
	List<BomberoViweModel> BomberoTodos = new List<BomberoViweModel>();
	public void CargarBomberosView()
	{

		foreach (Bombero b in bomberos)
		{
			BomberoViweModel bombero = new()
				{
					FechaNacimiento = b.FechaNacimiento,
					Sexo = b.Sexo,
					Nombre = b.Nombre,
					Apellido = b.Apellido,
					Documento = b.Documento,
					NumeroLegajo = b.NumeroLegajo,
					NumeroIoma = b.NumeroIoma,
					LugarNacimiento = b.LugarNacimiento,
					Grado = b.Grado,
					//NombreImagen = b.NombreImagen,
					//TipoImagen = b.TipoImagen,
					//Base64Imagen = b.Base64,
					Dotacion = b.Dotacion,
					//Nombre = b.NombreBrigada,
					Resolucion1 = b.Resolucion1,
					Resolucion2 = b.Resolucion2,
					Resolucion3 = b.Resolucion3,
					Resolucion4 = b.Resolucion4,
					Resolucion5 = b.Resolucion5,
					Resolucion6 = b.Resolucion6,
					//GrupoSanguineo = Enum.GetName(typeof(TipoGrupoSanguineo), b.GrupoSanguineo),
					Estado = b.Estado,
					Chofer = b.Chofer,
					VencimientoRegistro = b.VencimientoRegistro,
					Direccion = b.Direccion,
					Observaciones = b.Observaciones,
					Profesion = b.Profesion,
					NivelEstudios = b.NivelEstudios,
					FechaAceptacion = b.FechaAceptacion,
					//TelefonoCel = b.TelefonoCel,
					//TelefonoFijo = b.TelefonoFijo,
					//TelefonoLaboral = b.TelefonoLaboral,
					//Email = b.Email,

				};
			BomberoTodos.Add(bombero);
		}
		
	}
}
