@using Vista.Data.Models.Imagenes
@using Vista.Data.Models.Personas.Personal
@using Vista.Data.Models.Personas.Personal.Componentes
@using Vista.Data.Models.Vehiculos.Flota
@*Servicios utilizados*@
@using Vista.Services
@inject IVehiculoSalidaService VehiculoSalidaService
@inject IBomberoService BomberoService

<link rel="stylesheet" href="css/EditarMovilEstilos.css"> 

@if (vehiculo != null)
{
    <div class="header-content-details-card">
        <Title Level="2" class="titulo-unidad">
            Detalles de la Unidad
        </Title>
        <Paragraph class="subtitulo">Información básica y técnica del vehículo</Paragraph>
    </div>

    <div class="modal-body-content">
        <div class="modal-left-panel">
            <Card Style="border: 1px solid #d9d9d9; border-radius: 20px;">
                <div style="text-align: center;">
                    @if (!string.IsNullOrEmpty(vehiculoView.ImageUrl))
                    {
                        <img src="@vehiculoView.ImageUrl" alt="Foto del vehículo" style="width: 100%; max-height: 150px; object-fit: contain;" />
                    }
                    else
                    {
                        <div style="display: flex; flex-direction: column; align-items: center; justify-content: center; height: 120px; background: #f0f2f5; color: #999; border-radius: 4px;">
                            <Icon Type="picture" Theme="IconThemeType.Outline" Style="font-size: 2em; margin-bottom: 5px;" />
                            <span>Ninguna foto seleccionada</span>
                        </div>
                    }
                </div>
                <div style="font-weight: 500; margin-top: 10px; text-align: center;">
                    @if (!string.IsNullOrEmpty(vehiculoView.NumeroMovil))
                    {
                        <span>Nº Unidad @vehiculoView.NumeroMovil</span>
                    }
                </div>
            </Card>
        </div>

        <div class="modal-right-panel">
            <Form Model="vehiculoView" Layout="@FormLayout.Vertical">
                <Card Title="Información Básica" Style="margin-bottom: 24px;">
                    <div class="form-grid-4-col">
                        <FormItem Label="Nº de la Unidad">
                            <Input @bind-Value="vehiculoView.NumeroMovil" Placeholder="Número de la Unidad" ReadOnly="true" />
                        </FormItem>
                        <FormItem Label="Estado de la Unidad">
                            <Input TEnum="TipoEstadoMovil" @bind-Value="vehiculoView.Estado" Placeholder="Seleccione estado" Disabled="true" />
                        </FormItem>
                        <FormItem Label="Encargado">
                            <Input @bind-Value="vehiculoView.Encargado" Placeholder="Nombre del encargado" ReadOnly="true" />
                        </FormItem>
                        <FormItem Label="Tipo">
                            <Input @bind-Value="vehiculoView.Tipo" Placeholder="Tipo" ReadOnly="true" />
                        </FormItem>

                        <FormItem Label="Marca">
                            <Input @bind-Value="vehiculoView.Marca" Placeholder="Marca" ReadOnly="true" />
                        </FormItem>
                        <FormItem Label="Modelo">
                            <Input @bind-Value="vehiculoView.Modelo" Placeholder="Modelo" ReadOnly="true" />
                        </FormItem>
                        <FormItem Label="Año">
                            <Input @bind-Value="vehiculoView.Año" Placeholder="Año" Style="width: 100%;" ReadOnly="true" />
                        </FormItem>
                        <FormItem Label="Patente">
                            <Input @bind-Value="vehiculoView.Patente" Placeholder="Patente" ReadOnly="true" />
                        </FormItem>

                        <FormItem Label="Observaciones" Class="full-width-4">
                            <Input @bind-Value="vehiculoView.Observaciones" Placeholder="Observaciones" Rows="3" ReadOnly="true" />
                        </FormItem>
                    </div>
                </Card>

                <Card Title="Ficha Técnica">
                    @if (vehiculo is Movil)
                    {
                        <div class="form-grid-4-col">
                            <FormItem Label="Nº Motor">
                                <Input @bind-Value="vehiculoView.NumeroMotor" Placeholder="Número de motor" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Nº Chasis">
                                <Input @bind-Value="vehiculoView.NumeroChasis" Placeholder="Número de chasis" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Modelo de bomba">
                                <Input @bind-Value="vehiculoView.ModeloBomba" Placeholder="Modelo de bomba" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Tipo de combustible">
                                <Input @bind-Value="vehiculoView.Combustible" Placeholder="Combustible" ReadOnly="true" />
                            </FormItem>

                            <FormItem Label="Litros de Combustible">
                                <Input @bind-Value="@vehiculoView.CantidadLitros" Min="0" Placeholder="Cantidad de litros" Style="width: 100%;" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Tipo de aceite">
                                <Input @bind-Value="vehiculoView.TipoAceite" Placeholder="Tipo de aceite" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Marca de aceite">
                                <Input @bind-Value="vehiculoView.MarcaAceite" Placeholder="Marca de aceite" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Litros de aceite">
                                <Input @bind-Value="@vehiculoView.CantidadAceite" Min="0" Placeholder="Cantidad de aceite" Style="width: 100%;" ReadOnly="true" />
                            </FormItem>

                            <FormItem Label="Modelo de filtro de aire">
                                <Input @bind-Value="vehiculoView.ModeloFiltroAire" Placeholder="Modelo de filtro de aire" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Medidas de las cubiertas">
                                <Input @bind-Value="vehiculoView.MedidasCubiertas" Placeholder="Medidas de las cubiertas" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Presión de Cubiertas">
                                <Input @bind-Value="vehiculoView.LibrasCubiertas" Placeholder="Presión de Cubiertas" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Caja de velocidades">
                                <Input @bind-Value="vehiculoView.CajasVelocidades" Placeholder="Caja de velocidades" ReadOnly="true" />
                            </FormItem>

                            <FormItem Label="Tensión del sistema eléctrico">
                                <Input @bind-Value="vehiculoView.TensionCElectrico" Placeholder="Tensión del sistema" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Tipo de dirección">
                                <Input @bind-Value="vehiculoView.TipoDireccion" Placeholder="Tipo de dirección" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Marca de batería">
                                <Input @bind-Value="vehiculoView.MarcaBateria" Placeholder="Marca de batería" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Fecha del último cambio de batería">
                                <Input @bind-Value="vehiculoView.FechaUltimoCambioBateria" ReadOnly="true" />
                            </FormItem>

                            <FormItem Label="Fecha del último service">
                                <Input @bind-Value="vehiculoView.FechaUltimoService" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Fecha del próximo service">
                                <Input @bind-Value="vehiculoView.FechaProximoService" ReadOnly="true" />
                            </FormItem>
                        </div>
                    }
                    else
                    {
                        <div class="form-grid-4-col">
                            <FormItem Label="Tipo de Combustible">
                                <Input @bind-Value="vehiculoView.Combustible" Placeholder="Tipo de Combustible" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Litros de Combustible">
                                <Input @bind-Value="vehiculoView.CantidadLitros" Placeholder="Litros de Combustible" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Fecha del último service">
                                <Input @bind-Value="vehiculoView.FechaUltimoService" ReadOnly="true" />
                            </FormItem>
                            <FormItem Label="Fecha del próximo service">
                                <Input @bind-Value="vehiculoView.FechaProximoService" ReadOnly="true" />
                            </FormItem>
                        </div>
                    }
                </Card>
            </Form>
        </div>
    </div>
}
else
{
    <div style="display: flex; justify-content: center; align-items: center; padding: 60px;">
        <div style="text-align: center;">
            <Spin Size="SpinSize.Large" />
            <div style="margin-top: 16px; color: #8c8c8c;">Cargando datos del vehículo...</div>
        </div>
    </div>
}

@code {
    [Parameter] public int vehiculoId { get; set; }

    public VehiculoSalida? vehiculo { get; set; }

    // Variable (ViewModel)
    public VehiculoView vehiculoView { get; set; } = new();

    // View models
    public class VehiculoView
    {
        public string? TipoVehiculo { get; set; } // Para diferenciar entre Movil y Embarcacion
        public string? ImageUrl { get; set; }
        public string? Tipo { get; set; }
        public string? Encargado { get; set; }
        public string? Marca { get; set; }
        public string? Modelo { get; set; }
        public string? Patente { get; set; }
        public string? Año { get; set; }
        public string? NumeroMovil { get; set; }
        public string? Estado { get; set; }
        public string? NumeroMotor { get; set; }
        public string? NumeroChasis { get; set; }
        public string? ModeloBomba { get; set; }
        public string? CantidadLitros { get; set; }
        public string? Combustible { get; set; }
        public string? FechaUltimoService { get; set; }
        public string? FechaProximoService { get; set; }
        public string? TipoAceite { get; set; }
        public string? MarcaAceite { get; set; }
        public string? CantidadAceite { get; set; }
        public string? Observaciones { get; set; }
        public string? ModeloFiltroAire { get; set; }
        public string? MedidasCubiertas { get; set; }
        public string? LibrasCubiertas { get; set; }
        public string? CajasVelocidades { get; set; }
        public string? TensionCElectrico { get; set; }
        public string? TipoDireccion { get; set; }
        public string? MarcaBateria { get; set; }
        public string? FechaUltimoCambioBateria { get; set; }
    }

    // Funciones - Carga de datos
    public async Task CargarDatos()
    {
        vehiculo = await VehiculoSalidaService.ObtenerVehiculoSalidaPorIdAsync(vehiculoId);

        if (vehiculo != null)
        {
            vehiculoView = new VehiculoView
            {
                TipoVehiculo = vehiculo.Discriminador.GetDisplayName(), // Diferenciar entre Movil y Embarcacion

                // Mapeo de Imagen (si existe)
                ImageUrl = vehiculo.Imagen != null ? $"/api/imagenes/{vehiculo.Imagen.ImagenId}" : null,

                Tipo = vehiculo.Tipo,
                Marca = vehiculo.Marca,
                Modelo = vehiculo.Modelo,
                Patente = vehiculo.Patente,
                Año = vehiculo.Año?.ToString(),
                NumeroMovil = vehiculo.NumeroMovil?.ToString(),
                Estado = vehiculo.Estado.ToString(),
                Combustible = vehiculo.Combustible,
                FechaUltimoService = vehiculo.FechaUltimoService?.ToString("dd/MM/yyyy") ?? "No registrado",
                FechaProximoService = vehiculo.FechaProximoService?.ToString("dd/MM/yyyy") ?? "No programado",
                Observaciones = vehiculo.Observaciones
            };

            if (vehiculo.EncargadoId != null)
            {
                var Encargado = await BomberoService.ObtenerBomberoPorIdAsync(vehiculo.EncargadoId.Value, conRelaciones: false, asnotracking: true);
                vehiculoView.Encargado = $"{Encargado?.Nombre} {Encargado?.Apellido}".Trim();
            }

            if (vehiculo is Movil movil)
            {
                vehiculoView.NumeroMotor = movil.NumeroMotor;
                vehiculoView.NumeroChasis = movil.NumeroChasis;
                vehiculoView.ModeloBomba = movil.ModeloBomba;
                vehiculoView.CantidadLitros = movil.CantidadLitros?.ToString();
                vehiculoView.TipoAceite = movil.TipoAceite;
                vehiculoView.MarcaAceite = movil.MarcaAceite;
                vehiculoView.CantidadAceite = movil.CantidadAceite?.ToString();
                vehiculoView.ModeloFiltroAire = movil.ModeloFiltroAire;
                vehiculoView.MedidasCubiertas = movil.MedidasCubiertas;
                vehiculoView.LibrasCubiertas = movil.LibrasCubiertas;
                vehiculoView.CajasVelocidades = movil.CajaVelocidades?.GetDisplayName(); // Es un enum no se usa ToString directamente, se toma el Display Name
                vehiculoView.TensionCElectrico = movil.TensionCElectrico?.GetDisplayName(); // Es un enum no se usa ToString directamente, se toma el Display Name
                vehiculoView.TipoDireccion = movil.TipoDireccion?.GetDisplayName(); // Es un enum no se usa ToString directamente, se toma el Display Name
                vehiculoView.MarcaBateria = movil.MarcaBateria;
                vehiculoView.FechaUltimoCambioBateria = movil.FechaUltCambioBateria?.ToString("dd/MM/yyyy") ?? "No registrado";
            }
        }
    }

    // Función para obtener el color del tag del estado
    private string GetEstadoColor()
    {
        return vehiculoView.Estado?.ToLower() switch
        {
            "activo" => "green",
            "inactivo" => "red",
            "mantenimiento" => "orange",
            "enreparacion" => "orange",
            "disponible" => "blue",
            _ => "default"
        };
    }

    // Función responsive para las columnas de Descriptions
    private int GetResponsiveColumns()
    {
        return 2; // 2 columnas para mantener legibilidad en el modal
    }

    // Función para determinar el span de observaciones
    private int GetObservacionesSpan()
    {
        return 2; // Span completo en una fila de 2 columnas
    }

    // Función para obtener el tamaño del avatar responsivo
    private string GetAvatarSize()
    {
        return "150px"; // Tamaño fijo óptimo para modales
    }

    protected override async Task OnInitializedAsync()
    {
        await Init();
    }

    private async Task Init()
    {
        await CargarDatos();
    }
}