@using Vista.Data.Models.Imagenes
@using Vista.Data.Models.Personas.Personal
@using Vista.Data.Models.Personas.Personal.Componentes
@using Vista.Data.Models.Vehiculos.Flota
@*Servicios utilizados*@
@using Vista.Services
@inject IVehiculoSalidaService VehiculoSalidaService
@inject IBomberoService BomberoService

<link rel="stylesheet" href="css/DetallesVehiculosEstilos.css" />

@if (vehiculo != null)
{
    <div class="modal-content-container">
        <div class="header-content-details-card">
            <Title Level="2" class="titulo-unidad">
                Detalles de la Unidad
            </Title>
            <Paragraph class="subtitulo">Información básica y técnica del vehículo</Paragraph>
        </div>
        
        <div class="form-content-grid">
            <div class="form-left-panel">
                <Card class="image-card" bordered="true">
                    @if (vehiculoView.ImageUrl == null)
                    {
                        <div class="image-placeholder">
                            <Avatar Size="@GetAvatarSize()" Icon="camera" Alt="Ninguna foto seleccionada" />
                            <span>Ninguna foto seleccionada</span>
                        </div>
                    }
                    else
                    {
                        <Image Width="100%"
                               Height="auto"
                               Src="@vehiculoView.ImageUrl"
                               Alt="Imagen de la Unidad"
                               class="unit-image" />
                    }
                </Card>
            </div>

            <div class="form-right-panel">
                <h3 class="section-title-sub">Información Básica</h3>
                <Row Gutter="(16, 16)">
                    <AntDesign.Col Span="24" Lg="6" Md="12">
                        <div class="detail-item-display">
                            <span class="detail-label">N° de la Unidad</span>
                            <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.NumeroMovil) ? "—" : vehiculoView.NumeroMovil)</span>
                        </div>
                    </AntDesign.Col>
                    <AntDesign.Col Span="24" Lg="6" Md="12">
                        <div class="detail-item-display">
                            <span class="detail-label">Estado de la Unidad</span>
                            <span class="detail-value"><Tag Color="@GetEstadoColor()">@(string.IsNullOrEmpty(vehiculoView.Estado) ? "—" : vehiculoView.Estado)</Tag></span>
                        </div>
                    </AntDesign.Col>
                    <AntDesign.Col Span="24" Lg="6" Md="12">
                        <div class="detail-item-display">
                            <span class="detail-label">Encargado</span>
                            <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.Encargado) ? "—" : vehiculoView.Encargado)</span>
                        </div>
                    </AntDesign.Col>
                    <AntDesign.Col Span="24" Lg="6" Md="12">
                        <div class="detail-item-display">
                            <span class="detail-label">Tipo</span>
                            <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.Tipo) ? "—" : vehiculoView.Tipo)</span>
                        </div>
                    </AntDesign.Col>
                    <AntDesign.Col Span="24" Lg="6" Md="12">
                        <div class="detail-item-display">
                            <span class="detail-label">Marca</span>
                            <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.Marca) ? "—" : vehiculoView.Marca)</span>
                        </div>
                    </AntDesign.Col>
                    <AntDesign.Col Span="24" Lg="6" Md="12">
                        <div class="detail-item-display">
                            <span class="detail-label">Modelo</span>
                            <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.Modelo) ? "—" : vehiculoView.Modelo)</span>
                        </div>
                    </AntDesign.Col>
                    <AntDesign.Col Span="24" Lg="6" Md="12">
                        <div class="detail-item-display">
                            <span class="detail-label">Año</span>
                            <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.Año) ? "—" : vehiculoView.Año)</span>
                        </div>
                    </AntDesign.Col>
                    <AntDesign.Col Span="24" Lg="6" Md="12">
                        <div class="detail-item-display">
                            <span class="detail-label">Patente</span>
                            <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.Patente) ? "—" : vehiculoView.Patente)</span>
                        </div>
                    </AntDesign.Col>
                    <AntDesign.Col Span="24">
                        <div class="detail-item-display">
                            <span class="detail-label">Observaciones</span>
                            <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.Observaciones) ? "—" : vehiculoView.Observaciones)</span>
                        </div>
                    </AntDesign.Col>
                </Row>

                @if (vehiculo is Movil)
                {
                    <h3 class="section-title-sub" style="margin-top: 24px;">Ficha Técnica</h3>
                    <Row Gutter="(16, 16)">
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">N° Motor</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.NumeroMotor) ? "—" : vehiculoView.NumeroMotor)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">N° Chasis</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.NumeroChasis) ? "—" : vehiculoView.NumeroChasis)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Modelo de la Bomba</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.ModeloBomba) ? "—" : vehiculoView.ModeloBomba)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Tipo de Combustible</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.Combustible) ? "—" : vehiculoView.Combustible)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Litros de Combustible</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.CantidadLitros) ? "—" : vehiculoView.CantidadLitros)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Tipo de aceite</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.TipoAceite) ? "—" : vehiculoView.TipoAceite)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Marca de aceite</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.MarcaAceite) ? "—" : vehiculoView.MarcaAceite)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Litros de aceite</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.CantidadAceite) ? "—" : vehiculoView.CantidadAceite)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Modelo de filtro de aire</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.ModeloFiltroAire) ? "—" : vehiculoView.ModeloFiltroAire)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Medidas de las cubiertas</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.MedidasCubiertas) ? "—" : vehiculoView.MedidasCubiertas)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Presión de Cubiertas</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.LibrasCubiertas) ? "—" : vehiculoView.LibrasCubiertas)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Caja de velocidades</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.CajasVelocidades) ? "—" : vehiculoView.CajasVelocidades)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Tensión del sistema eléctrico</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.TensionCElectrico) ? "—" : vehiculoView.TensionCElectrico)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Tipo de dirección</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.TipoDireccion) ? "—" : vehiculoView.TipoDireccion)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Marca de batería</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.MarcaBateria) ? "—" : vehiculoView.MarcaBateria)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Fecha último cambio de batería</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.FechaUltimoCambioBateria) ? "—" : vehiculoView.FechaUltimoCambioBateria)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Fecha del último service</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.FechaUltimoService) ? "—" : vehiculoView.FechaUltimoService)</span>
                            </div>
                        </AntDesign.Col>
                        <AntDesign.Col Span="24" Lg="6" Md="12">
                            <div class="detail-item-display">
                                <span class="detail-label">Fecha del próximo service</span>
                                <span class="detail-value">@(string.IsNullOrEmpty(vehiculoView.FechaProximoService) ? "—" : vehiculoView.FechaProximoService)</span>
                            </div>
                        </AntDesign.Col>
                        
                    </Row>
                }
            </div>
        </div>
    </div>
}
else
{
    <div style="display: flex; justify-content: center; align-items: center; padding: 60px;">
        <div style="text-align: center;">
            <Spin Size="SpinSize.Large" />
            <div style="margin-top: 16px; color: #8c8c8c;">Cargando datos del vehículo...</div>
        </div>
    </div>
}

@code {
    [Parameter] public int vehiculoId { get; set; }

    public VehiculoSalida? vehiculo { get; set; }

    // Variable (ViewModel)
    public VehiculoView vehiculoView { get; set; } = new();

    // View models
    public class VehiculoView
    {
        public string? TipoVehiculo { get; set; } // Para diferenciar entre Movil y Embarcacion
        public string? ImageUrl { get; set; }
        public string? Tipo { get; set; }
        public string? Encargado { get; set; }
        public string? Marca { get; set; }
        public string? Modelo { get; set; }
        public string? Patente { get; set; }
        public string? Año { get; set; }
        public string? NumeroMovil { get; set; }
        public string? Estado { get; set; }
        public string? NumeroMotor { get; set; }
        public string? NumeroChasis { get; set; }
        public string? ModeloBomba { get; set; }
        public string? CantidadLitros { get; set; }
        public string? Combustible { get; set; }
        public string? FechaUltimoService { get; set; }
        public string? FechaProximoService { get; set; }
        public string? TipoAceite { get; set; }
        public string? MarcaAceite { get; set; }
        public string? CantidadAceite { get; set; }
        public string? Observaciones { get; set; }
        public string? ModeloFiltroAire { get; set; }
        public string? MedidasCubiertas { get; set; }
        public string? LibrasCubiertas { get; set; }
        public string? CajasVelocidades { get; set; }
        public string? TensionCElectrico { get; set; }
        public string? TipoDireccion { get; set; }
        public string? MarcaBateria { get; set; }
        public string? FechaUltimoCambioBateria { get; set; }
    }

    // Funciones - Carga de datos
    public async Task CargarDatos()
    {
        vehiculo = await VehiculoSalidaService.ObtenerVehiculoSalidaPorIdAsync(vehiculoId);

        if (vehiculo != null)
        {
            vehiculoView = new VehiculoView
            {
                TipoVehiculo = vehiculo.Discriminador.GetDisplayName(), // Diferenciar entre Movil y Embarcacion

                // Mapeo de Imagen (si existe)
                ImageUrl = vehiculo.Imagen != null ? $"/api/imagenes/{vehiculo.Imagen.ImagenId}" : null,

                Tipo = vehiculo.Tipo,
                Marca = vehiculo.Marca,
                Modelo = vehiculo.Modelo,
                Patente = vehiculo.Patente,
                Año = vehiculo.Año?.ToString(),
                NumeroMovil = vehiculo.NumeroMovil?.ToString(),
                Estado = vehiculo.Estado.ToString(),
                Combustible = vehiculo.Combustible,
                FechaUltimoService = vehiculo.FechaUltimoService?.ToString("dd/MM/yyyy") ?? "No registrado",
                FechaProximoService = vehiculo.FechaProximoService?.ToString("dd/MM/yyyy") ?? "No programado",
                Observaciones = vehiculo.Observaciones
            };

            if (vehiculo.EncargadoId != null)
            {
                var Encargado = await BomberoService.ObtenerBomberoPorIdAsync(vehiculo.EncargadoId.Value, conRelaciones: false, asnotracking: true);
                vehiculoView.Encargado = $"{Encargado?.Nombre} {Encargado?.Apellido}".Trim();
            }

            if (vehiculo is Movil movil)
            {
                vehiculoView.NumeroMotor = movil.NumeroMotor;
                vehiculoView.NumeroChasis = movil.NumeroChasis;
                vehiculoView.ModeloBomba = movil.ModeloBomba;
                vehiculoView.CantidadLitros = movil.CantidadLitros?.ToString();
                vehiculoView.TipoAceite = movil.TipoAceite;
                vehiculoView.MarcaAceite = movil.MarcaAceite;
                vehiculoView.CantidadAceite = movil.CantidadAceite?.ToString();
                vehiculoView.ModeloFiltroAire = movil.ModeloFiltroAire;
                vehiculoView.MedidasCubiertas = movil.MedidasCubiertas;
                vehiculoView.LibrasCubiertas = movil.LibrasCubiertas;
                vehiculoView.CajasVelocidades = movil.CajaVelocidades?.GetDisplayName(); // Es un enum no se usa ToString directamente, se toma el Display Name
                vehiculoView.TensionCElectrico = movil.TensionCElectrico?.GetDisplayName(); // Es un enum no se usa ToString directamente, se toma el Display Name
                vehiculoView.TipoDireccion = movil.TipoDireccion?.GetDisplayName(); // Es un enum no se usa ToString directamente, se toma el Display Name
                vehiculoView.MarcaBateria = movil.MarcaBateria;
                vehiculoView.FechaUltimoCambioBateria = movil.FechaUltCambioBateria?.ToString("dd/MM/yyyy") ?? "No registrado";
            }
        }
    }

    // Función para obtener el color del tag del estado
    private string GetEstadoColor()
    {
        return vehiculoView.Estado?.ToLower() switch
        {
            "activo" => "green",
            "inactivo" => "red",
            "mantenimiento" => "orange",
            "enreparacion" => "orange",
            "disponible" => "blue",
            _ => "default"
        };
    }

    // Función responsive para las columnas de Descriptions
    private int GetResponsiveColumns()
    {
        return 2; // 2 columnas para mantener legibilidad en el modal
    }

    // Función para determinar el span de observaciones
    private int GetObservacionesSpan()
    {
        return 2; // Span completo en una fila de 2 columnas
    }

    // Función para obtener el tamaño del avatar responsivo
    private string GetAvatarSize()
    {
        return "150px"; // Tamaño fijo óptimo para modales
    }

    protected override async Task OnInitializedAsync()
    {
        await Init();
    }

    private async Task Init()
    {
        await CargarDatos();
    }
}