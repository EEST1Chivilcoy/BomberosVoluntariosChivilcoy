@using Vista.Services
@using Vista.Components.Vehiculos;
@using Vista.Data.Models.Vehiculos.Flota
@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
<link rel="stylesheet" href="css/Unidades.css" />
@page "/unidades/unidades-baja"

<div class="container-baja">
    <Content Style="padding: 16px;">
        <Card Bordered="false"
              Style="width: 100%; border-radius: 16px; box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.1); background: #ffffff;">
            <div class="header-container" style="display: flex; justify-content: space-between; align-items: center;">
                <div>
                    <h2 style="margin-bottom: 0;"><Icon Type="Car" />UNIDADES</h2>
                    <p style="margin-top: 4px; color: #666;">@vehiculos?.Count(v => v.Estado == TipoEstadoMovil.Inactivo) unidades de baja</p>
                </div>
                <Space>
                    <Button class="btn-volver-unidades"
                            OnClick="@(() => navigationManager.NavigateTo("/unidades"))"
                            Style="border-radius: 8px; font-size: 14px; ">
                        <Icon Type="folder-open" />Volver a Unidades activas
                    </Button>
                </Space>
            </div>
            <div style="margin-top: 24px;">
                @if (vehiculos is not null)
                {
                    <div class="vehicles-grid">
                        @foreach (VehiculoSalida m in vehiculos)
                        {

                            if (m.Estado == TipoEstadoMovil.Activo) continue;
                            <VehiculosCarta Vehiculo="m" OnChange="Init" />

                        }
                    </div>
                }
                else
                {
                    <div style="display: flex; justify-content: center;width: 100%;margin: 1em 1em;">
                        <Spin Delay="500" Indicator=antIcon />
                    </div>
                }
            </div>
        </Card>
    </Content>

</div>
@code {
    RenderFragment antIcon = @<Icon Type="loading" Theme="IconThemeType.Outline" Style="font-size: 24px; text-align: center; color: rgb(62, 24, 24);" Spin />;
    VehiculoSalida[]? vehiculos;
    BomberosDbContext Context { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Init();
    }

    private async Task Init()
    {
        Context = DbFactory.CreateDbContext();

        vehiculos = await Context.Set<VehiculoSalida>().ToArrayAsync();
    }

    public void Dispose()
    {
        Context?.Dispose();
    }
}