@inject IDbContextFactory<BomberosDbContext> DbFactory
@inject IMessageService message

<style>
    .steps-content{
        border: none!important;
    }

    .inpt-container {
        position: relative;
        padding: .8em 0;
    }

    input[type=text], input[type=number] {
        border: none;
        background: none;
        border-bottom: 1px solid #bdb8b8;
        outline: none;
        padding: 1em;
        width: 100%;
        height: .6em;
    }

    .inpt-label {
        position: absolute;
        top: 0;
        left: 5px;
        transform: translateY(10px);
        color: #bdb8b8;
        transition: transform .5s, color .3s;
    }

    input[type=text]:focus, input[type=number]:focus, input[type=file]:focus, input[type=date]:focus {
        border-bottom: 1px solid rgb(62, 24, 24);
        transition: 1s;
    }

        input[type = text]:focus + .inpt-label, input[type = text]:not(:placeholder-shown) + .inpt-label {
            transform: translateY(-4px) scale(.9);
            transform-origin: left top;
            color: rgb(62, 24, 24);
        }

    .select-estadoMovil {
        padding: .8em 0;
        width: 100%;
        border: 1px solid #bdb8b8;
        outline: none;
        box-shadow: none;
    }

        .select-estadoMovil option {
            border: 1px solid #bdb8b8;
        }

    .ant-carousel .slick-dots li {
        display: none !important;
    }

    .lblInputFile {
        border: 1px solid #403F3F;
        color: #403F3F;
        padding: .5em .8em;
        border-radius: 50px;
        background: #eee;
        cursor: pointer;
        font-family: unset;
        font-size: 14px;
        width: 60%;
        transform: translate(50% -50%);
        text-align: center;
    }

    .raro {
        padding: 6em 0;
    }
</style>
@if (movilView is not null)
{
    <div style="width: 100%;">
        <Steps Current="current">
            @foreach (var item in steps)
            {
                <Step Title="@item.Title" Subtitle="@item.Content" />
            }
        </Steps>
        <div class="steps-content" style="height: 100%;width: 100%;padding-top: 0;">
            <div style="width: 100%;height: 100%; background: #fff;">
                @if (current == 0)
                {
                    <div style="height: 22em;">
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.Marca" placeholder=" " />
                            <label class="inpt-label">Marca:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.Modelo" placeholder=" " />
                            <label class="inpt-label">Modelo:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.Año" placeholder=" " />
                            <label class="inpt-label">Año:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.Patente" placeholder=" " />
                            <label class="inpt-label">Patente:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.Tipo" placeholder=" " />
                            <label class="inpt-label">Tipo:</label>
                        </div>
                        <div class="inpt-container">
                            <label class="lblInputFile" for="fotoMovil"><Icon Type="cloud-upload" Theme="outline" Style="height: 14px;width: 14px;" />Cargar foto de movil</label>
                            <InputFile OnChange="SubirFoto" id="fotoMovil" style="display: none;" />
                            <h3 id="path" style="display: inline-block;font-size:12px;">@imagenView.Nombre</h3>
                        </div>
                    </div>
                }
                else if (current == 1)
                {
                    <div style="height: 22em;width: 100%;padding: 10px;">
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.NumeroMovil" placeholder=" " />
                            <label class="inpt-label">Nº movil:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.NumeroMotor" placeholder=" " />
                            <label class="inpt-label">Nº motor:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.NumeroChasis" placeholder=" " />
                            <label class="inpt-label">Nº chasis:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.ModeloBomba" placeholder=" " />
                            <label class="inpt-label">Modelo de bomba:</label>
                        </div>
                        <div class="inpt-container">
                            <select @bind="movilView.Estado" class="select-estadoMovil">
                                <option value="@TipoEstadoMovil.Estado" selected disabled hidden>Seleccione estado del movil</option>
                                <option value="@TipoEstadoMovil.Activo">Activo</option>
                                <option value="@TipoEstadoMovil.Inactivo">Inactivo</option>
                                <option value="@TipoEstadoMovil.Reparacion">Reparacion</option>
                                <option value="@TipoEstadoMovil.Limpieza">Limpieza</option>
                            </select>
                        </div>
                    </div>
                }
                else if (current == 2)
                {
                    <div style="height: 22em;width: 100%;padding: 10px;">
                        <div class="inpt-container">
                            <input type="text" @bind="seguroView.CompañiaAseguradora" placeholder=" " />
                            <label class="inpt-label">Compañia:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="seguroView.NumeroDePoliza" placeholder=" " />
                            <label class="inpt-label">Nº poliza:</label>
                        </div>
                        <div>
                            <div>
                                <label>Vencimiento: </label>
                            </div>
                            <input type="date" @bind="seguroView.FechaDeVencimiento" />
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="steps-action">
            @if (current > 0)
            {
                <Button Type="primary" OnClick="OnPreClick">Anterior</Button>
            }
            @if (current < steps.Length - 1)
            {
                <Button Type="primary" OnClick="OnNextClick">Siguiente</Button>
            }
            @if (current == steps.Length - 1)
            {
                <Button Type="primary" @onclick="SubirMovil">
                    Agregar movil
                </Button>
            }
        </div>
        <style>
            .steps-content {
                margin-top: 16px;
                border: 1px dashed #e9e9e9;
                border-radius: 6px;
                background-color: #fafafa;
                min-height: 200px;
                text-align: center;
                padding-top: 80px;
            }

            .steps-action {
                margin-top: 24px;
            }
        </style>
    </div>
}

@code {
    [Parameter]
    public EventCallback OnClose { get; set; }

    public class StepItem
    {
        public string Title { get; set; }
        public string Content { get; set; }
    }

    public int current { get; set; } = 0;

    public StepItem[] steps =
    {
        new StepItem {Title = "First", Content = "First-content"},
        new StepItem {Title = "Second", Content = "Second-content"},
        //new StepItem {Title = "Third", Content = "Third-content"},
        new StepItem {Title = "Last", Content = "Last-content"}
    };

    void OnPreClick()
    {
        current--;
    }

    void OnNextClick()
    {
        current++;
    }

    public class MovilViewModel
    {
        [Required, StringLength(255)]
        public string Marca { get; set; }
        [Required, StringLength(255)]
        public string Modelo { get; set; }
        public int? Año { get; set; }
        [Required, StringLength(255)]
        public string Patente { get; set; }
        [Required, StringLength(255)]
        public string Tipo { get; set; }
        [Required, StringLength(255)]
        public string NumeroMovil { get; set; }
        [Required, StringLength(255)]
        public string NumeroMotor { get; set; }
        [Required, StringLength(255)]
        public string NumeroChasis { get; set; }
        [Required, StringLength(255)]
        public string ModeloBomba { get; set; }
        [Required, StringLength(255)]
        public TipoEstadoMovil Estado { get; set; }

    }

    public class SeguroViewModel
    {
        [Required, StringLength(255)]
        public string CompañiaAseguradora { get; set; }
        [Required, StringLength(255)]
        public string NumeroDePoliza { get; set; }
        public DateTime FechaDeVencimiento { get; set; }
    }

    public class ImagenViewModel
    {
        public string Base64 { get; set; }
        [Required, StringLength(255)]
        public string TipoImagen { get; set; }
        [Required, StringLength(255)]
        public string Nombre { get; set; }
    }

    public ImagenViewModel imagenView { get; set; } = new();
    public MovilViewModel movilView { get; set; } = new();
    public SeguroViewModel seguroView { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        using var db = DbFactory.CreateDbContext();
    }

    private async void SubirFoto(InputFileChangeEventArgs e)
    {
        string imagenBase64 = await Base64Helper.StreamToBase64(e.File.OpenReadStream());

        imagenView.Base64 = imagenBase64;
        imagenView.TipoImagen = e.File.ContentType;
        imagenView.Nombre = e.File.Name;

        await message.Success("Imagen cargada");
        StateHasChanged();
    }

    private async void SubirMovil()
    {
        using var db = DbFactory.CreateDbContext();

        if (movilView is not null)
        {
            Movil? comprobante = await db.Moviles.Where(m => m.NumeroMovil == movilView.NumeroMovil).SingleOrDefaultAsync();

            if (comprobante is null)
            {
                Movil movil = new Movil()
                {
                    Marca = movilView.Marca,
                    Modelo = movilView.Modelo,
                    Año = movilView.Año,
                    Patente = movilView.Patente,
                    Tipo = movilView.Tipo,
                    Imagen = new()
                    {
                        NombreImagen = imagenView.Nombre,
                        TipoImagen = imagenView.TipoImagen,
                        Base64Imagen = imagenView.Base64
                    },
                    ModeloBomba = movilView.ModeloBomba,
                    NumeroChasis = movilView.NumeroChasis,
                    NumeroMotor = movilView.NumeroMotor,
                    NumeroMovil = movilView.NumeroMovil,
                    Estado = movilView.Estado,
                    Seguro = new()
                    {
                        CompañiaAseguradora = seguroView.CompañiaAseguradora,
                        FechaDeVencimineto = seguroView.FechaDeVencimiento,
                        NumeroDePoliza = seguroView.NumeroDePoliza
                    }
                };
                db.Moviles.Add(movil);
                await db.SaveChangesAsync();
                await OnClose.InvokeAsync();
            }
        }
        StateHasChanged();
    }
}
