@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@page "/moviles/editar/{VehiculoId:int?}"

<style>
    .ant-carousel .slick-dots li {
        display: none !important;
    }
    .inpt-container {
        position: relative; 
        padding: .8em 0;
    }

    input[type=text], input[type=number] {
        border: none;
        background: none;
        border-bottom: 1px solid #bdb8b8;
        outline: none;
        padding: 1em;
        width: 100%;
        height: .6em;
    }

    .inpt-label {
        position: absolute;
        top: 0;
        left: 5px;
        transform: translateY(10px);
        color: #bdb8b8;
        transition: transform .5s, color .3s;
    }

    input[type=text]:focus, input[type=number]:focus, input[type=file]:focus, input[type=date]:focus {
        border-bottom: 1px solid rgb(62, 24, 24);
        transition: 1s;
    }

        input[type = text]:focus + .inpt-label, input[type = text]:not(:placeholder-shown) + .inpt-label {
            transform: translateY(-4px) scale(.9);
            transform-origin: left top;
            color: rgb(62, 24, 24);
        }

    .lblInputFile {
        border: 1px solid #403F3F;
        color: #403F3F;
        padding: .5em .8em;
        border-radius: 50px;
        background: #eee;
        cursor: pointer;
        font-family: unset;
        font-size: 14px;
        width: 60%;
        transform: translate(50% -50%);
        text-align: center;
    }

    .select-estadoMovil {
        padding: .8em 0;
        width: 100%;
        border: 1px solid #bdb8b8;
        outline: none;
        box-shadow: none;
    }

        .select-estadoMovil option {
            border: 1px solid #bdb8b8;
        }

    .raro {
        padding: 6em 0;
    }
    .ant-modal-body {
        padding: 0;
    }

    .ant-modal-body {
        width: 33em;
    }

    .ant-modal-content {
        width: 33em;
    }

    .ant-modal-footer{
        display: none;
    }
</style>
<div style="width: 100%;">
    @if (movilView is not null)
    {
        <Modal Title="@title"
               Visible="@_visible"
               OnOk="@HandleOk"
               OnCancel="@HandleCancel"
               Style="width:462px!important;">
                <Carousel @ref="_carousel">
                    <CarouselSlick Style="padding: .2em;overflow: hidden;text-align: center; line-height: 160px;z-index: 10;display: flex; flex-direction: column;margin: auto;">
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.Marca" placeholder=" " />
                            <label class="inpt-label">Marca:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.Modelo" placeholder=" " />
                            <label class="inpt-label">Modelo:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.Año" placeholder=" " />
                            <label class="inpt-label">Año:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.Patente" placeholder=" " />
                            <label class="inpt-label">Patente:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.Tipo" placeholder=" " />
                            <label class="inpt-label">Tipo:</label>
                        </div>
                        <div class="inpt-container">
                            <label class="lblInputFile" for="fotoMovil"><Icon Type="cloud-upload" Theme="outline" Style="height: 14px;width: 14px;" />Cargar foto de movil</label>
                            <InputFile OnChange="SubirFoto" id="fotoMovil" style="display: none;" />
                            <h3 id="path" style="display: inline-block;font-size:12px;">@imagenView.Nombre <Icon Type="eye" Theme="outline" /></h3>
                        </div>
                        <div class="inpt-container">
                            <Button OnClick="@( _=>_carousel.Next())" Type="@ButtonType.Primary" Style="background: rgb(62, 24, 24);color: #fff;border: none; width: 100%;">Siguiente</Button>
                        </div>
                    </CarouselSlick>
                    <CarouselSlick Style="padding: .2em;overflow: hidden;text-align: center; line-height: 160px;z-index: 10;">
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.NumeroMovil" placeholder=" " />
                            <label class="inpt-label">Nº movil:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.NumeroMotor" placeholder=" " />
                            <label class="inpt-label">Nº motor:</label>
                        </div>
                        <div class="inpt-container">
                            <input type="text" @bind="movilView.NumeroChasis" placeholder=" " />
                            <label class="inpt-label">Nº chasis:</label>
                        </div>
                        <div class="inpt-container">
                            <select @bind="movilView.Estado" class="select-estadoMovil">
                                <option value="@TipoEstadoMovil.Estado" selected disabled hidden>Seleccione estado del movil</option>
                                <option value="@TipoEstadoMovil.Activo">Activo</option>
                                <option value="@TipoEstadoMovil.Inactivo">Inactivo</option>
                                <option value="@TipoEstadoMovil.Reparacion">Reparacion</option>
                                <option value="@TipoEstadoMovil.Limpieza">Limpieza</option>
                            </select>
                        </div>
                        <div style="height: 6.8em;">
                        </div>
                        <div class="inpt-container">
                            <Button OnClick="@( _=>_carousel.Next())" Type="@ButtonType.Primary" Style="background: rgb(62, 24, 24);color: #fff;border: none; width: 100%;">Siguiente</Button>
                        </div>
                    </CarouselSlick>
                    <CarouselSlick Style="padding: .2em;overflow: hidden;text-align: center; line-height: 160px;z-index: 10;">
                        @if (bomberos is not null)
                        {
                            @foreach (BomberoViewModel b in bomberoViews)
                            {
                                <div class="inpt-container">
                                    <select class="select-estadoMovil" @bind="b.PersonaId">
                                        <option hidden selected value="0">Seleccione bombero @b.Rol.ToString()</option>
                                        @foreach (Bombero bo in bomberos)
                                        {
                                            <option value="@bo.PersonaId">@bo.Apellido  @bo.Nombre</option>
                                        }
                                    </select>
                                </div>
                            }
                            <div style="display: flex;justify-content: flex-end;">
                                <Button @onclick="@(() => { TipoRol tipo = TipoRol.Subalterno; AgregarALista(tipo); })" Style="background: rgb(62, 24, 24);color: #fff;border: none; width: 40%;text-align: center,">Confirmar roles</Button>
                            </div>
                        }
                        <div style="height: 11.45em;"></div>
                        <Button @onclick="EditarMovil" Type="@ButtonType.Primary" Style="background: rgb(62, 24, 24);color: #fff;border: none; width: 100%;">Editar movil</Button>
                        <div style="height: .7em;"></div>
                    </CarouselSlick>
                </Carousel>
        </Modal>
    }
    else
    {
     <h1> Error 404</h1>    
    }
</div>
@code {
    [Parameter]
    public int? VehiculoId { get; set; }

    public class MovilViewModel
    {
        [Required, StringLength(255)]
        public string Marca { get; set; }
        [Required, StringLength(255)]
        public string Modelo { get; set; }
        public int? Año { get; set; }
        [Required, StringLength(255)]
        public string Patente { get; set; }
        [Required, StringLength(255)]
        public string Tipo { get; set; }
        [Required, StringLength(255)] 
        public string NumeroMovil { get; set; }
        [Required, StringLength(255)]
        public string NumeroMotor { get; set; }
        [Required, StringLength(255)]
        public string NumeroChasis { get; set; }
        public TipoEstadoMovil Estado { get; set; }
    }
    public class ImagenViewModel
    {
        public string Base64 { get; set; }
        [Required, StringLength(255)]
        public string TipoImagen { get; set; }
        [Required, StringLength(255)]
        public string Nombre { get; set; }
    }
    public class BomberoViewModel
    {
        public TipoRol Rol { get; set; }
        public int PersonaId { get; set; }
    }

    public ImagenViewModel imagenView { get; set; } = new();
    public MovilViewModel movilView { get; set; } = new();
    public List<BomberoViewModel> bomberoViews { get; set; } = new();
    public Bombero[]? bomberos;
    public bool existe;

    protected override async Task OnInitializedAsync()
    {
        using var db = DbFactory.CreateDbContext();

        bomberos = await db.Bomberos.ToArrayAsync();

        Movil? movil = await db.Moviles.Where(m => m.VehiculoId == VehiculoId).SingleOrDefaultAsync();

        if (movil is not null)
        {
            movilView.Marca = movil.Marca;
            movilView.Modelo = movil.Modelo;
            movilView.Año = movil.Año;
            movilView.Patente = movil.Patente;
            movilView.Tipo = movil.Tipo;
            movilView.NumeroMovil = movil.NumeroMovil;
            movilView.NumeroMotor = movil.NumeroMotor;
            movilView.NumeroChasis = movil.NumeroChasis;
            movilView.Estado = movil.Estado;
            ImagenMovil? imagen = await db.ImagenesMoviles.Where(i => i.ImagenId == movil.ImagenId).SingleOrDefaultAsync();

            if (imagen is not null)
            {
                imagenView.Nombre = imagen.NombreImagen;
                imagenView.TipoImagen = imagen.TipoImagen;
                imagenView.Base64 = imagen.Base64Imagen;
                StateHasChanged();
            }
            existe = true;
        }
        else if (movil is null)
        {
            existe = false;
        }

        AgregarALista(TipoRol.Encargado);
        AgregarALista(TipoRol.Subalterno);
    }

    public void AgregarALista(TipoRol tipo)
    {
        BomberoViewModel b = new()
        {
            Rol = tipo
        };

        bomberoViews.Add(b);
    }

    private async void SubirFoto(InputFileChangeEventArgs e)
    {
        string imagenBase64 = await Base64Helper.StreamToBase64(e.File.OpenReadStream());

        imagenView.Base64 = imagenBase64;
        imagenView.TipoImagen = e.File.ContentType;
        imagenView.Nombre = e.File.Name;
    }

    public async void EditarMovil()
    {
        using var db = DbFactory.CreateDbContext();

        if (movilView.NumeroMovil is not null)
        {
            Movil? movil = await db.Moviles.Where(m => m.NumeroMovil == movilView.NumeroMovil).SingleOrDefaultAsync();

            if (movil is not null)
            {
                movil.Marca = movilView.Marca;
                movil.Modelo = movilView.Modelo;
                movil.Año = movilView.Año;
                movil.Patente = movilView.Patente;
                movil.Tipo = movilView.Tipo;
                movil.Imagen = new()
                    {
                    NombreImagen = imagenView.Nombre,
                    TipoImagen = imagenView.TipoImagen,
                    Base64Imagen = imagenView.Base64
                    };
                movil.NumeroChasis = movilView.NumeroChasis;
                movil.NumeroMotor = movilView.NumeroMotor;
                movil.NumeroMovil = movilView.NumeroMovil;
                movil.Estado = movilView.Estado;

                foreach (BomberoViewModel m in bomberoViews)
                {
                    if (m.PersonaId != 0)
                    {
                        MovilBombero bombero = new()
                            {
                                Rol = m.Rol,
                                PersonaId = m.PersonaId
                            };
                        movil.Bomberos.Add(bombero);
                    }
                }
                await db.SaveChangesAsync();
            }
        }

        navigationManager.NavigateTo("/moviles");
    }
    //modal
    string title = "Editar movil";
    bool _visible = true;

    private void HandleOk(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

    private void HandleCancel(MouseEventArgs e)
    {
        Console.WriteLine(e);
        _visible = false;
    }

    //carousel
    Carousel _carousel;
}


