@implements IDisposable
@inject IDbContextFactory<BomberosDbContext> DbFactory

<style>
    #ImagenMovil {
        border: 1px solid #f0f5f5;
        border-radius: 2px;
        height: 25em;
        max-height: 25em;
        min-height: 25em;
        width: 100%;
        max-width: 100%;
        min-width: 100%;
    }

    .ant-table-pagination.ant-pagination {
        display: none!important;
    }
</style>
@if (existe)
{
    <div>
        <img id="ImagenMovil" src="data:@imagenView.TipoImagen;base64,@imagenView.Base64" />
    </div>
    <br>
    <div>
        <Table TItem="Data" DataSource="data" Responsive>
            <PropertyColumn Property="c=>c.Tipo"> @movilView.Tipo </PropertyColumn>
            <PropertyColumn Property="c=>c.Encargado">@movilView.EncargadoNombre</PropertyColumn>
            <PropertyColumn Property="c=>c.Marca"> @movilView.Marca </PropertyColumn>
            <PropertyColumn Property="c=>c.Modelo">@movilView.Modelo</PropertyColumn>
            <PropertyColumn Property="c=>c.Patente">@movilView.Patente</PropertyColumn>
        </Table>
    </div>
}
else if (!existe)
{
    <div style="display: flex; justify-content: center;width: 100%;margin: 1em 1em;">
        <Spin Delay="500" Indicator=antIcon />
    </div>
    //Hay que ver si se puede cambiar el contenido despues del delay
    @code {
        RenderFragment antIcon = @<Icon Type="loading" Theme="outline" Style="font-size: 24px; text-align: center; color: rgb(62, 24, 24);" Spin />;
    }
}

@code {
    [Parameter]
    public int? VehiculoIdDetalle { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    string title = "Movil info";

    Data[] data = new Data[]
    {
        new()
        {
            Key = "1",
            Tipo = "John Brown",
            Encargado = 1,
            Marca = "New York No. 1 Lake Park",
            Modelo = "developer",
            Patente = ""
        }
    };

    public record Data
    {
        public string Key { get; set; }

        public string Tipo { get; set; }

        public int? Encargado { get; set; }

        public string Marca { get; set; }

        public string Modelo { get; set; }

        public string Patente { get; set; }
    }

    public class MovilViewModel
    {
        public int? EncargadoId { get; set; }
        [StringLength(255)]
        public string? EncargadoNombre { get; set; }
        [Required, StringLength(255)]
        public string Marca { get; set; }
        [Required, StringLength(255)]
        public string Modelo { get; set; }
        public int? Año { get; set; }
        [Required, StringLength(255)]
        public string Patente { get; set; }
        [Required, StringLength(255)]
        public string Tipo { get; set; }
        [Required, StringLength(255)]
        public string NumeroMovil { get; set; }
        [Required, StringLength(255)]
        public string NumeroMotor { get; set; }
        [Required, StringLength(255)]
        public string NumeroChasis { get; set; }
        public TipoEstadoMovil Estado { get; set; }
    }
    public class ImagenViewModel
    {
        public string Base64 { get; set; }
        [Required, StringLength(255)]
        public string TipoImagen { get; set; }
        [Required, StringLength(255)]
        public string Nombre { get; set; }
    }
    BomberosDbContext Context;
    public ImagenViewModel imagenView { get; set; } = new();
    public MovilViewModel movilView { get; set; } = new();
    public bool existe;

    protected override async Task OnInitializedAsync()
    {
        await Init();
    }
    private async Task Init()
    {
        Context = DbFactory.CreateDbContext();
        await MostrarDatos();
    }
    public async Task MostrarDatos()
    {
        Movil? movil = await Context.Moviles.Include(e => e.Encargado).Include(i=>i.Imagen).SingleOrDefaultAsync(e => e.VehiculoId == VehiculoIdDetalle);

        if (movil is not null)
        {
            movilView.Marca = movil.Marca;
            movilView.Modelo = movil.Modelo;
            movilView.Año = movil.Año;
            movilView.Patente = movil.Patente;
            movilView.Tipo = movil.Tipo;
            movilView.NumeroMovil = movil.NumeroMovil;
            movilView.NumeroMotor = movil.NumeroMotor;
            movilView.NumeroChasis = movil.NumeroChasis;
            movilView.Estado = movil.Estado;
            movilView.EncargadoNombre = movil.Encargado != null ? movil.Encargado.Nombre + " " + movil.Encargado.Apellido : "";
            imagenView.Nombre = movil.Imagen.NombreImagen;
            imagenView.TipoImagen = movil.Imagen.TipoImagen;
            imagenView.Base64 = movil.Imagen.Base64Imagen;
           
            existe = true;
        }
        else if (movil is null)
        {
            existe = false;
        }
    }
    public void Dispose()
    {
        Context?.Dispose();
    }
}
