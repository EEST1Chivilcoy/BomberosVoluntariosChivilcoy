@using Vista.Data.Models.Objetos
@using Vista.Services
@inject IDepositoService DepositoService
@inject IMessageService message
@using System.ComponentModel.DataAnnotations

<style>
    .movimientos-abm {
        font-family: 'Poppins', sans-serif !important;
        --primary-color: #f0f2f5;
        --primary-dark: #d9d9d9;
        --secondary-color: #2F54EB;
        --success-color: #52C41A;
        --success-dark: #449E17;
        --background-card: #FFFFFF;
        --background-body: #FFFFFF;
        --text-color: #262626;
        --border-color: #D9D9D9;
        --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    }

    .ant-modal-content {
        border: 2px solid #A63333 !important;
        border-radius: 8px !important;
        overflow: hidden !important;
    }

    .ant-modal-header {
        background-color: #A63333 !important;
        border-radius: 8px 8px 0 0 !important;
        border-bottom: none !important;
    }

    .ant-modal-header .ant-modal-title {
        color: white !important;
    }

    .ant-modal-close {
        color: white !important;
    }

    .movimientos-abm .cancel-button-white {
        background-color: white !important;
        color: black !important;
        font-weight: 500 !important;
        border: 1px solid #d9d9d9;
        box-shadow: none;
        height: 32px;
        border-radius: 6px;
        padding: 0 15px;
    }

    .ant-select:not(.ant-select-customize-input) .ant-select-selector {
        border-radius: 6px !important;
        height: 40px !important;
    }

    .ant-input:focus, .ant-input:hover,
    .ant-input-number:focus, .ant-input-number:hover,
    .ant-select-selector:focus, .ant-select-selector:hover {
        border-color: #FFC107 !important;
        box-shadow: 0 0 0 2px rgba(255, 193, 7, 0.2) !important;
    }

    .ant-modal .ant-btn-primary {
        background: linear-gradient(135deg, #4CAF50 0%, #438E46 100%) !important;
        border: none !important;
        color: #fff !important;
        font-weight: 600;
        box-shadow: 0 2px 8px rgba(76, 175, 80, 0.18);
        margin-top: 0;
        margin-bottom: 0;
        padding: 0 20px !important;
    }
</style>

<div class="material-abm">
    <div class="modal-crear-movimiento-content">
        <Form Model="@MaterialViewModel"
                Style="max-width: 800px;"
              Class="modal-crear-movimiento-form"
              Layout="FormLayout.Vertical"
              OnFinish="OnFinish"
              OnFinishFailed="OnFinishFailed"
              Loading="isLoading">

            <Row Gutter="16">
                <AntDesign.Col Span="12">
                    <div class="modal-crear-movimiento-form-item">
                        <FormItem Label="🏷️ Material" Required>
                            <Input @bind-Value="MaterialViewModel.Descripcion" Placeholder="Ingrese el nombre del producto" />
                        </FormItem>
                    </div>
                </AntDesign.Col>
                <AntDesign.Col Span="12">
                    <div class="modal-crear-movimiento-form-item">
                        <FormItem Label="📦 Cantidad" Required>
                            <AntDesign.InputNumber @bind-Value="MaterialViewModel.Stock" Style="width: 100%;" />
                        </FormItem>
                    </div>
                </AntDesign.Col>
            </Row>
            <Row Gutter="16">
                <AntDesign.Col Span="12">
                    <div class="modal-crear-movimiento-form-item">
                        <FormItem Label="🗂️ Rubro" Required>
                            <EnumSelect TEnum="TipoRubro" @bind-Value="MaterialViewModel.Rubro" Style="width: 100%;" />
                        </FormItem>
                    </div>
                </AntDesign.Col>
                <AntDesign.Col Span="12">
                    <div class="modal-crear-movimiento-form-item">
                        <FormItem Label="📅 Fecha" Required>
                            <DatePicker TValue="DateTime" DefaultValue="DateTime.Now" @bind-Value="MaterialViewModel.FechaAlta" Style="width: 100%;" />
                        </FormItem>
                    </div>
                </AntDesign.Col>
            </Row>
            <Row Gutter="16">
                <AntDesign.Col Span="12">
                    <div class="modal-crear-movimiento-form-item">
                        <FormItem Label="🏷️ Código de Barra" Required>
                            <Input @bind-Value="MaterialViewModel.Codigo" Placeholder="Ingrese el código" />
                        </FormItem>
                    </div>
                </AntDesign.Col>
            </Row>

            <div style="display: flex; justify-content: flex-end; gap: 10px; margin-top: 20px;" class="modal-crear-movimiento-footer">
                <Button Class="ant-btn-primary" HtmlType="submit">
                    Cargar Material
                </Button>
            </div>
        </Form>
    </div>
</div>

@code {
    [Parameter] public EventCallback OnFinishCallback { get; set; }
    [Parameter] public List<Material>? MaterialesExistentes { get; set; }
    bool isLoading = false;

    public class MaterialVM
    {
        [Required(ErrorMessage = "El Producto es obligatorio")]
        public string? Descripcion { get; set; }
        [Required(ErrorMessage = "El Codigo es obligatorio")]
        public string? Codigo { get; set; }
        public DateTime FechaAlta { get; set; }
        public int Stock { get; set; }
        public TipoRubro Rubro { get; set; }
    }

    //variables locales
    public MaterialVM MaterialViewModel { get; set; } = new();

    private async void OnFinish()
    {
        try
        {
            isLoading = true;
            if (MaterialesExistentes.Any(m => m.Codigo == MaterialViewModel.Codigo)) 
            {
                await message.ErrorAsync("Ya existe un producto con ese Codigo");
                return;
            }
            Material material = new Material()
            {
                Codigo = MaterialViewModel.Codigo,
                Descripcion = MaterialViewModel.Descripcion,
                FechaAlta = MaterialViewModel.FechaAlta,
                Rubro = MaterialViewModel.Rubro,
                Stock = MaterialViewModel.Stock
            };
            await DepositoService.AgregarMaterial(material);
            message.Success("Material creado correctamente");
            MaterialViewModel = new();
            await OnFinishCallback.InvokeAsync(); 
        }
        catch (Exception e)
        {
            await message.ErrorAsync(e.Message, 5);
        }
        finally
        {
            isLoading = false;
        }
    }

    private void OnFinishFailed(EditContext editContext)
    {
        message.Error("Error en el formulario. Verifique los datos");
    }
    
}