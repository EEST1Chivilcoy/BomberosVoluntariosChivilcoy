@implements IDisposable
@using System.ComponentModel.DataAnnotations
@using Vista.Data.Models.Objetos
@inject NavigationManager navigationManager
@inject IDbContextFactory<BomberosDbContext> DbFactory
@inject IMessageService message
@page "/materialesvista"

<style>
    .boton_p {
        background-color: #732D2D !important;
        color: white !important;
    }
</style>

<Form Model="MaterialesVM"
    LabelColSpan="8"
    WrapperColSpan="16"
    OnFinish="OnFinish"
    OnFinishFailed="OnFinishFailed"
    Style="width: 100%;height: 100%;">
    <FormItem Label="Fecha de alta">
        <DatePicker @bind-Value="MaterialesVM.FechaAlta" />
    </FormItem>
    <FormItem Label="Descripción">
        <Input @bind-Value="MaterialesVM.Descripcion" />
    </FormItem>
    <FormItem Label="Código">
        <Input @bind-Value="MaterialesVM.Codigo" />
    </FormItem>
    <FormItem Label="Stock">
        <Input @bind-Value="MaterialesVM.Stock" />
    </FormItem>
    <FormItem Label="Rubro">
        <EnumSelect TEnum="@TipoRubro" @bind-Value="@MaterialesVM.Rubro" />
    </FormItem>
    <FormItem Style="width: 100% !important;
            display: flex !important;
            justify-content: flex-end !important;
            align-items: flex-end !important; height:100% !important; margin-bottom: -32px;" WrapperColOffset="8" WrapperColSpan="16">
        <Button Class="boton_p" HtmlType="submit" Style="margin-right: 60px;">
            Guardar Material
        </Button>
    </FormItem>
</Form>


@code {
    BomberosDbContext Context;
	public class MaterialesViewModel
	{
		public DateTime FechaAlta { get; set; }
		public string? Descripcion { get; set; }
		public string? Codigo { get; set; }
		public int Stock { get; set; }
		public TipoRubro Rubro { get; set; }
	}

	MaterialesViewModel MaterialesVM { get; set; } = new MaterialesViewModel();

	protected override async Task OnInitializedAsync()
	{
		await Init();
	}

	private async Task Init()
	{
		MaterialesVM = new();

		Context = DbFactory.CreateDbContext();
	}
    private async void OnFinish(EditContext editContext)
    {
        try
        {


            Material material1 = new()
                {
                    FechaAlta = MaterialesVM.FechaAlta,
                    Descripcion = MaterialesVM.Descripcion,
                    Codigo = MaterialesVM.Codigo,
                    Stock = MaterialesVM.Stock,
                    Rubro = MaterialesVM.Rubro,
                    
                };
            Context.Materiales.Add(material1);
            await Context.SaveChangesAsync();
            await Init();
            StateHasChanged();
            await message.SuccessAsync("Alta cargada");
        }
        catch (Exception e)
        {
            await Init();
            StateHasChanged();
            if (e.InnerException != null)
                await message.ErrorAsync(e.InnerException.Message, 5);
            else
                await message.ErrorAsync(e.Message, 5);
        }

    }
    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(MaterialesVM)}");
    }
    public void Dispose()
    {
        Context?.Dispose();
    }
}
